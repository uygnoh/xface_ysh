// FSMC时序结构体
// FSMC_BRT时序寄存器 和 FSMC_BWTR写时序寄存器
// HCLK = 72MHz = 1/72MHz = 0.0138us = 13.8ns
// 控制SRAM， 使用（异步存储器）
typedef struct {
        uint32_t FSMC_AddressSetuptime;         // 地址建立时间（0 ~ 0xF）个HCLK周期
        uint32_t FSMC_AddressHoldTime;          // 地址保持时间（0 ~ 0xF）个HCLK周期
                                                 // SRAM没有用到
        uint32_t FSMC_DataSetupTime;            // 数据建立时间（0 ~ 0xF）个HCLK周期
        uint32_t FSMC_BusTurnAroundDuration;    // 总线转换周期（0 ~ 0xF）个HCLK周期（地址线分时复用）
                                                 // SRAM没有用到
        uint32_t FSMC_CLKDivision;              // 时钟分频因子（1 ~ 0xF），若控制为异步存储器，本参数无效
                                                 // SRAM没有用到
        uint32_t FSMC_DataLatency;              // 数据延迟时间，若控制为异步存储器，本参数无效
                                                 // SRAM没有用到
        uint32_t FSMC_AccessMode;               // 设置访问模式
                                                 // A，B，C，D（使用SRAM的是模式A中的模式1）
} FSMC_NORSRAMTimingInitTypeDef;

// FSMC初始化结构体
// 配置FSMC_BCR寄存器
typedef struct {
        uint32_t FSMC_Bank;                     // 设置要控制的Bank区域
        uint32_t FSMC_DataAddressMux;           // 设置地址总线与数据总线是否复用
        uint32_t FSMC_MemoryType;               // 设置存储器类型
        uint32_t FSMC_MemoryDataWidth;          // 设置存储器的数据宽度
        uint32_t FSMC_BurstAccessMode;          // 设置是否支持突发访问模式（只支持同步类型的存储器）
        uint32_t FSMC_AsynchronousWait;         // 设置是否能在同步传输时，使能等待信号
        uint32_t FSMC_WaitSignalPolarity;       // 设置等待信号的极性
        uint32_t FSMC_WrapMode;                 // 设置是否支持对齐的突发模式
        uint32_t FSMC_WaitSignalActive;         // 设置等待信号在等待前有效还是在等待后有效
        uint32_t FSMC_WriteOperation;           // 设置是否写使能
        uint32_t FSMC_WaitSignal;               // 设置是否使能等待状态插入
        uint32_t FSMC_ExtendendMode;            // 设置是否支持扩展模式
        uint32_t FSMC_WriteBurst;               // 设置是否使能写突发模式
        // 当不使用扩展模式时，本参数用于配置读写时序，否则用于配置读时序
        FSMC_NORSRAMTimingInitTypeDef *FSMC_ReadWriteTimingStruct;
        // 当使用扩展模式时，本参数用于配置写时序
        FSMC_NORSRAMTimingInitTypeDef *FSMC_WriteTimingStruct;
} FSMC_NORSRAMInitTypeDef;
