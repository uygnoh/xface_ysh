/*******************************************************************************
        => SD_CARD__命令__
*******************************************************************************/
        // 广播命令， 主机会将命令发送给SDIO线上的所有的SDIO设备
        // ____________________________________________________
        // r = Response 响应意思
        // 响应类型： bc(无响应，  无数据广播命令)
        // 响应类型： bcr(有响应， 无数据广播命令)
        
        
        // 寻址命令
        // ____________________________________________________
        // 在发送命令时， 命令参数为SD卡的（相对地址）， 会通过相对地址
        // 找到具体的SD卡， 然后对其进行操作
        // 响应类型： ac(有响应，  无数据寻址命令)
        // 响应类型： adtc(有响应， 有数据的寻址命令)， dt为data的缩写
        
        
        // 普通命令和特殊命令
        // ____________________________________________________
        // 第一类普通命令（CMD）
           a. 基础命令
           b. 块读，块写命令
           c. 块写保护命令
           d. 擦除命令
           e. 锁命令
        // 第二类特殊命令（ACMD）
           由SD制造商规定的命令， 发特殊命令时先发（CMD55）命令
           比如： 主机发送ACMD41这个特殊命令时
                 先发（CMD55）， 表示后面紧跟的是一个特殊命令
                 再发（CMD41）， 此时CMD41就是（ACMD41）
           CMD55后面只能跟一个特殊命令， 当你要送多个特殊命令时，
           需要重复发送CMD55命令。
        
       
       
       
        // 广播命令, 命令类型（bc）
CMD0    // （0x000000）命令号， GO_IDLE_STATE（进入空闲状态）
        // ____________________________________________________
        // 上电默认进入空闲状态，当SD卡处于其它状态时，可以通过向其发送
        // （CMD0）命令让其切换到空闲状态。
        .. 命令的真正（32）位内容，没有用到，所以全部填充为（0）
        .. 响应： 无
        
        
        
CMD2    // ALL_SEND_CID， 命令类型（bcr）
        // ____________________________________________________
        ..广播让所有的SD卡将自己的（CID）号发送给主机， 
        ..命令的真正（32）位内容，没有用到，所以全部填充为（0）
        ..响应类型： R2（长响应），响应的内容为（CID寄存器）中的CID号
        // 在SD卡识别阶段， 主机通过这个命令来得到SD卡的CID号码
        
        
        
        
        
        
        
CMD3    // SEND_RELATIVE_ADDR， 命令类型（bcr）
        // （广播让所有的SD卡将自己的）相对地址，发送给主机
        // ____________________________________________________
        ..命令的真正（32）位内容，没有用到，所以全部填充为（0）
        ..响应类型： R6（短响应），响应的内容为（RCA寄存器）中的“相对地址”
        
        
        
        
CMD4    // SET_DSR， 命令类型（bc）
        // （向所有SD_CARD广播），设置所有SD卡的DSR寄存器
        // ____________________________________________________
        ..命令的真正（32）位内容
          （【31：16】设置DSR寄存器的参数）
          （【15： 0】因为DSR寄存器只有16位，所以其余16位填充为“0”）
        ..响应类型： 无
        
        
        
CMD7    // SELECT/DESELECT_CARD， 命令类型（ac）
        // （通过发送相应的地址来-选中、取消选中）某个SD卡
        // ____________________________________________________
        // 之前没有选中，那么就选中，如果之前有选中，那么就取消选中
        ..命令的真正（32）位内容
          （【31：16】为相对地址）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R1b, 这个就是R1和R1b稍微有点不同，这里不关心这个不同。
        
        
        
        
CMD8    // SEND_IF_COND， 命令类型（bcr）
        // （向所有SD卡广播主机的接口环境）
        // ____________________________________________________
        // 这个接口主要是SDIO接口所支持的电压范围， 并询问SD卡是否在
        // 这个电压下作
        ..命令的真正（32）位内容
          （【31：12】填充为“0”
          （【11： 8】设置主机支持的电压范围
              0001(b): 2.7 - 3.6 V
          （【7： 0】设置测试械值（check patern）, 主要用作CRC校验
          V2.0推荐CRC的值为（0xAA）
        ..响应类型： R7， R7的内容__为SD卡是否支持“主机的接口电压”
        
        
        | S  |标志 | 命令号码 | 填充 0  | 电压范围 | 测试模式| CRC   | 结束位
        |___________________|_________|_________|________|_______|___|
        | 47 | 46 | [45:40] | [39:20] | [19:16] | [15:8] | [7:1] | 0 | //位号
        |____|____|_________|_________|_________|________|_______|___|
        | 1  | 1  |    6    |   20    |    4    |   8    |  7    | 1 | //位宽
        |____|____|_________|_________|_________|________|_______|___|
        |'0' |'1' |'0001000'|   0     |     x   |   x    |  x    |'1'| //值
        |____|____|_________|_________|_________|________|_______|___|
        CMD8 完整命令（.................   0001   10101010 *******   1）
        <*******> CRC 的值不由编程者来决定，这个由硬件自动产生



CMD9    // SEND_CSD
        // （让指定SD卡发送CSD寄存器的内容），寻址命令
        // ____________________________________________________
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R2，R2响应的内容为（CSD寄存器）的内容。
        
        
        
CMD10   // SEND_CID
        // （让指定SD卡发送CID寄存器的内容），寻址命令
        // ____________________________________________________
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R2，R2响应的内容为（CID寄存器）的内容。
 
 
 
CMD12   //STOP_TRANSMISSION（强制让卡停止与SD之前的数据传输），寻址命令
        ..命令的真正（32）位内容，全部填充为“0”
        ..响应类型： R1b, 这个就是R1和R1b稍微有点不同，这里不关心这个不同。
        ..响应的内容为（CSR卡状态寄存器）中的内容。
        
        
        
CMD13   //SEND_STATUS（让指定SD卡发送CSR寄存器中的内容），寻址命令
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R1，R1响应的内容为（CSR卡状态寄存器）的内容。
        
        
CMD16   //SEND_BLOCKLE（设置块长度），寻址命令
        ..命令的真正（32）位内容， 32位都来表示块的大小
        ..响应类型： R1，命令的执行情况
        
        
CMD17   //SEND_SINGLE_BLOCK（读指定SD卡单个块），adtc
        ..命令的真正（32）位内容， SD卡某块的地址
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
        
CMD18   //SEND_MULTIPLE_BLOCK（读指定SD卡连续个块），adtc
        ..命令的真正（32）位内容， SD卡连续块中的第 1 个块的地址。
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况

CMD24   //WRITE_BLOCK（向指定的SD卡单个块写入数据）
        ..命令的真正（32）位内容， SD卡单个块的地址
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
CMD25   //WRITE_MILTIPLE_BLOCK（向指定的SD卡连续块中写入数据）
        ..命令的真正（32）位内容， SD卡连续块中的第 1 个块地址。
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
        
CMD55   //APP_CMD（用于指示紧跟的命令为特殊命令）
        ..命令的真正（32）位内容
         （【31：16】为SD卡相对地址）
         （【15： 0】为填充为“0”）
        ..响应类型： R1，命令的执行情况    
//响应（R1），返回（CSR状态寄存器的内容）
//_________________________________________________________


//响应（R2），返回（CID或CSD寄存器的内容）
//_________________________________________________________

//响应（R3），返回（OCR寄存器的内容）
//_________________________________________________________
CCS = 0         //SDSC
CCS = 1         //SDHC, SDXC
主机通过（OCR寄存器）的“BUSY”位表示SD状态（0表示SD卡忙， 1 表示SD卡不忙）

//响应（R6），返回（RCA + CSR）
//_________________________________________________________

//响应（R7），返回SD卡是否匹配主机电压
//_________________________________________________________



/*******************************************************************************
        => SD_CARD__响应__（通过CMD线传输）
*******************************************************************************/
__A__// SDIO总共有（7）类响应类型（代号：R1，R2，R3，R4，R5，R6，R7）
     、、其中SD卡没有（R4，R5）类型响应， 与命令一样（响应也是通过CMD线传输）
__B__// 短响应（32bit长度）， 其中（命令号占用6位）
     ..R1（CSR）卡状态寄存器
     ..R3（OCR）操作条件寄存器
     ..R6（RCA）相对地址寄存器 + （CSR）仅15bit的内容
     ..R7（）返回SD_CARD是否支持主机接口的电压范围
__C__// 长响应（127bit长度），只有（R2类型）是长响应
     ..R2不需要“镜像命令”， 因此存放命令号的（6bits）全部填“1”
__D__// 因为（SSR寄存器）总共有（512bits），内容太多，所以不能通过（CMD线）来响应返回
     ..而是使用数据线来返回
        // SSR寄存器为（512bit）, 不能通过CMD线进行传输
        // 它只能通过（DAT）数据线进行传输
       
       
        
        // SD卡识别阶段
           得到SD卡的（CID）并识别SD卡， 然后得到SD卡（RCA）寄存器中的相对地址
           后面会使用相对地址来与SD卡进行通信
        // SD卡传输阶段
           在传输阶段才能对SD卡进行数据读写操作
