/*******************************************************************************
        => nRF24L01 一个接收，六个发射
*******************************************************************************/

// 这里要注意！ 通道0和通道1的地址高字节和低字节都要不同
const uint8_t RX_ADDRESS0[] = {0xff, 0xff, 0xff, 0xff, 0x00};
const uint8_t RX_ADDRESS1[] = {0xfe, 0xaa, 0xaa, 0xaa, 0x01};
const uint8_t RX_ADDRESS2[] = {0x02};
const uint8_t RX_ADDRESS3[] = {0x03};
const uint8_t RX_ADDRESS4[] = {0x04};
const uint8_t RX_ADDRESS5[] = {0x05};

const uint8_t TX_ADDRESS0[] = {0xff, 0xff, 0xff, 0xff, 0x00};
const uint8_t TX_ADDRESS1[] = {0xfe, 0xaa, 0xaa, 0xaa, 0x01};
const uint8_t TX_ADDRESS2[] = {0x02};
const uint8_t TX_ADDRESS3[] = {0x03};
const uint8_t TX_ADDRESS4[] = {0x04};
const uint8_t TX_ADDRESS5[] = {0x05};



/*******************************************************************************
        => nRF24L01 接收端配置
*******************************************************************************/
NR24L01_CE = 0;

spi_write_buffer(WRITE_REG + RX_ADDR_P0, (uint8_t *)RX_ADDRESS0, RX_ADDR_WIDTH);
spi_write_buffer(WRITE_REG + RX_ADDR_P1, (uint8_t *)RX_ADDRESS1, RX_ADDR_WIDTH);
// 第一通道的地址要重写一下，只写低字节数据就可以了
spi_write_buffer(WRITE_REG + RX_ADDR_P1, (uint8_t *)RX_ADDRESS1, 1);
spi_write_buffer(WRITE_REG + RX_ADDR_P2, (uint8_t *)RX_ADDRESS2, 1);
spi_write_buffer(WRITE_REG + RX_ADDR_P3, (uint8_t *)RX_ADDRESS3, 1);
spi_write_buffer(WRITE_REG + RX_ADDR_P4, (uint8_t *)RX_ADDRESS4, 1);
spi_write_buffer(WRITE_REG + RX_ADDR_P5, (uint8_t *)RX_ADDRESS5, 1);

spi_write_register(WRITE_REG + EN_AA, 0x3f);              // 使能通道自动应答
spi_write_register(WRITE_REG + EN_RXADDR, 0x3f);          // 使能通道的接收地址
spi_write_register(WRITE_REG + RF_CH, 0x40);              // 设置RF通信频率

spi_write_register(WRITE_REG + RX_PW_P0, RX_PLOAD_WIDTH); // 选择通道0有效数据宽度
spi_write_register(WRITE_REG + RX_PW_P1, RX_PLOAD_WIDTH); // 选择通道1有效数据宽度
spi_write_register(WRITE_REG + RX_PW_P2, RX_PLOAD_WIDTH); // 选择通道2有效数据宽度
spi_write_register(WRITE_REG + RX_PW_P3, RX_PLOAD_WIDTH); // 选择通道3有效数据宽度
spi_write_register(WRITE_REG + RX_PW_P4, RX_PLOAD_WIDTH); // 选择通道4有效数据宽度
spi_write_register(WRITE_REG + RX_PW_P5, RX_PLOAD_WIDTH); // 选择通道5有效数据宽度
// 设置TX发射参数，0db增益，2Mbps， 低噪声增益开启
spi_write_register(WRITE_REG + RF_SETUP, 0x0f);
// 配置基本工作模式的参数： PWR_UP, EN_CRC, 16Bit-CRC, 接收模式
spi_write_register(WRITE_REG + CONFIG, 0x0f);

NR24L01_CE = 1;



/*******************************************************************************
        => nRF24L01 发射端 0 配置
*******************************************************************************/
NR24L01_CE = 0;
spi_write_buffer(WRITE_REG + TX_ADDR, (uint8_t *)TX_ADDRESS0, TX_ADDR_WIDTH);
spi_write_buffer(WRITE_REG + RX_ADDR_P0, (uint8_t *)RX_ADDRESS0, RX_ADDR_WIDTH);
spi_write_register(WRITE_REG + EN_AA, 0x3f);       // 设置通道0自动应答
spi_write_register(WRITE_REG + EN_RXADDR, 0x3f);   // 使能通道0的接收地址
spi_write_register(WRITE_REG + SETUP_RETR, 0x1a);  // 设置自动重发时间：500us + 86us; 最大自动重发次次数：10次
spi_write_register(WRITE_REG + RF_CH, 40);         // 设置RF通道为（40）
spi_write_register(WRITE_REG + RF_SETUP, 0x0f);    // 设置发射参数：0db增益， 2Mbps，低噪声增益开启
spi_write_register(WRITE_REG + CONFIG, 0x0e);      // 配置基本工作模式：PWR_UP, EN_CRC, 16Bit_CRC, 配置为发射模式
NR24L01_CE = 1;



/*******************************************************************************
        => nRF24L01 发射端 1 配置
*******************************************************************************/
NR24L01_CE = 0;
spi_write_buffer(WRITE_REG + TX_ADDR, (uint8_t *)TX_ADDRESS1, TX_ADDR_WIDTH);
spi_write_buffer(WRITE_REG + RX_ADDR_P0, (uint8_t *)RX_ADDRESS1, RX_ADDR_WIDTH);
spi_write_register(WRITE_REG + EN_AA, 0x3f);       // 设置通道0自动应答
spi_write_register(WRITE_REG + EN_RXADDR, 0x3f);   // 使能通道0的接收地址
spi_write_register(WRITE_REG + SETUP_RETR, 0x1a);  // 设置自动重发时间：500us + 86us; 最大自动重发次次数：10次
spi_write_register(WRITE_REG + RF_CH, 40);         // 设置RF通道为（40）
spi_write_register(WRITE_REG + RF_SETUP, 0x0f);    // 设置发射参数：0db增益， 2Mbps，低噪声增益开启
spi_write_register(WRITE_REG + CONFIG, 0x0e);      // 配置基本工作模式：PWR_UP, EN_CRC, 16Bit_CRC, 配置为发射模式
NR24L01_CE = 1;



/*******************************************************************************
        => nRF24L01 发射端 2 配置
*******************************************************************************/
NR24L01_CE = 0;
spi_write_buffer(WRITE_REG + TX_ADDR, (uint8_t *)TX_ADDRESS2, TX_ADDR_WIDTH);
spi_write_buffer(WRITE_REG + RX_ADDR_P0, (uint8_t *)RX_ADDRESS2, RX_ADDR_WIDTH);
spi_write_register(WRITE_REG + EN_AA, 0x3f);       // 设置通道0自动应答
spi_write_register(WRITE_REG + EN_RXADDR, 0x3f);   // 使能通道0的接收地址
spi_write_register(WRITE_REG + SETUP_RETR, 0x1a);  // 设置自动重发时间：500us + 86us; 最大自动重发次次数：10次
spi_write_register(WRITE_REG + RF_CH, 40);         // 设置RF通道为（40）
spi_write_register(WRITE_REG + RF_SETUP, 0x0f);    // 设置发射参数：0db增益， 2Mbps，低噪声增益开启
spi_write_register(WRITE_REG + CONFIG, 0x0e);      // 配置基本工作模式：PWR_UP, EN_CRC, 16Bit_CRC, 配置为发射模式
NR24L01_CE = 1;
