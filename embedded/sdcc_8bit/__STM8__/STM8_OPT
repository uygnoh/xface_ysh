/*******************************************************************************
        => STM8__选项字节__（0x004800 - 0x00487F）__128Byte
*******************************************************************************/
ICP     //基于电路的更新方式(STLINKV2 + SWIM)，外科手术
IAP     //在单片机内部写一个程序，修改这些选项字节，内科手术
_______________________________________________________________________________|
//用户自定义数据区域-IAP方式修改选项字节
uint8_t opt_bytes[9] = {0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55};
void opt_config(void)
{
        //输入MASS密匙用于解锁 DATA_EEPROM 的写保护
        do { 
                FLASH_DUKR = 0xAE;        //硬件密匙1
                FLASH_DUKR = 0x56;        //硬件密匙2
        } while (!(FLASH_IAPSR & 0x80));  //等待解锁Flash完成
        FLASH_CR2  = 0x80;  //选项字节进行写操作被使能
        FLASH_NCR2 = 0x7F;  //互补控制寄存器FLASH_NCR2中的NOPT位要为“0”
        *((uint8_t *)0x4800)    =  opt_bytes[0]; //配置ROP选项
        *((uint8_t *)0x4801)    =  opt_bytes[1]; //配置UBC选项
        *((uint8_t *)0x4802)    = ~opt_bytes[1]; //配置UBC选项的互补字节
        *((uint8_t *)0x4803)    =  opt_bytes[2]; //配置AFR选项
        *((uint8_t *)0x4804)    = ~opt_bytes[2]; //配置AFR选项的互补字节
        *((uint8_t *)0x4805)    =  opt_bytes[3]; //配置看门狗选项
        *((uint8_t *)0x4806)    = ~opt_bytes[3]; //配置看门狗选项的互补字节
        *((uint8_t *)0x4807)    =  opt_bytes[4]; //时钟选项
        *((uint8_t *)0x4808)    = ~opt_bytes[4]; //时钟选项的互补字节
        *((uint8_t *)0x4809)    =  opt_bytes[5]; //石英晶体的稳定时间
        *((uint8_t *)0x480A)    = ~opt_bytes[5]; //石英晶体的稳定时间的互补字节
        *((uint8_t *)0x480B)    =  opt_bytes[6]; //保留
        *((uint8_t *)0x480C)    = ~opt_bytes[6]; //保留
        *((uint8_t *)0x480D)    =  opt_bytes[7]; //等待状态配置
        *((uint8_t *)0x480E)    = ~opt_bytes[7]; //等待状态配置的互补字节
        *((uint8_t *)0x487E)    =  opt_bytes[8]; //启动引导
        *((uint8_t *)0x487F)    = ~opt_bytes[8]; //启动引导的互补字节
}
