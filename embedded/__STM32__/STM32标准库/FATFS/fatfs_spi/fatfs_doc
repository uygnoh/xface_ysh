/*******************************************************************************
        => FATFS（W25Q64）
        => (前2MByte存储空间，留给非文件系统) + (后6MByte留给FATFS文件系统)
        => http://elm-chan.org/fsw/ff/00index_e.html
+__________________________________________________________
|     起始地址           |        大小                      |
|_________________________________________________________|
|       0               ~ 1024(Byte)                      |
|       1024            ~ 10(Byte)                        |
|       4096            ~ 53*4096(212KB)                  |
|       60*4096         ~ 317*4096(1.23MB)                |
|       465*4096        ~ 43*4096(172KB)                  |
|       510*4096        ~ 34(Byte)                        |
|       512*4096        ~ 1536*4096(6MB)                  |
|_________________________________________________________|
*******************************************************************************/
FATFS fs_obj;                                   //定义一个全局变量，存储在堆中
FIL *fp;                                        //文件句柄
const char write_data[]     = "hello, world!";  //要写入的数据
const char read_data[4096]  = "";               //读出数据存储位置
UINT write_num_byte;                            //写入了多少个字节
UINT read_num_byte;                             //读到了多少个字节


int main(void)
{
        FRESULT res;

        //挂载SPI_FLASH文件系统
        //参数1：文件系统结构体
        //参数2：“1:”代表SPI_FLASH存储设备
        //参数3：“1”代表立即挂载
        res = f_mount(&fs_obj, "1:", 1);
        printf("res = %d\n", res);
        
        //SPI_FLASH存储器格式化
        if (res == FR_NO_FILESYSTEM) {
                f_mkfs("1:", 0, 0);             //创建文件系统
                res = f_mount(NULL, "1:", 1);   //取消挂载文件系统
                res = f_mount(&fs_obj, "1:", 1);//挂载文件系统
        }
        
        res = f_open(&fp, "1:test.txt", FA_OPEN_ALWAYS | FA_READ | FA_WRITE);
        if (res == FR_OK) {
                res = f_write(&fp, write_data, sizeof(write_data), &write_num_byte);
                if (res == FR_OK) {
                        //把光标重新定位到开头
                        f_lseek(&fp, 0);
                        res = f_read(&fp, read_data, f_size(&fp), &read_num_byte);
                        if (res == FR_OK)
                                printf("文件内容: %s", read_data);
                }
        }
        f_close(&fp);
}



/*******************************************************************************
        => FATFS_CONFIG
*******************************************************************************/
#define FF_VOLUMES		2       //系统中有多少个存储设备
#define _MIN_SS                 512     //扇区（最小）大小
#define _MAX_SS                 4096    //扇区（最大）大小
#define _USE_MKFS               1       //文件系统格式化
#define _FS_MINIMIZE            0       //开启（f_lseek()）

//支持长文件名和中文
#define _CODE_PAGE              936     //中文字符集
#define _USE_LFN                1       //存储在全局变量中
#define _USE_MAX_LFN            255
//支持长文件名和中文



/*******************************************************************************
        => FATFS_文件系统
*******************************************************************************/














