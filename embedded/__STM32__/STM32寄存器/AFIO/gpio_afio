/*******************************************************************************
        => STM32F10X__GPIO__通用功能和复用功能输入输出__
*******************************************************************************/
//GPIOx_CRL {CNFy[1:0] MODEx[1:0]} x|y PIN_0 ~ PIN_7 
//GPIOx_CRH {CNFy[1:0] MODEx[1:0]} x|y PIN_8 ~ PIN_15
//在输入模式(MODE[1:0]=00), 在输出模式(MODE[1:0]>00), 
//针对stm32f10x, MODEx[1:0], 在输出模式下，这两个位的表达
        00  //输入模式(复位后的状态)
        01  //输出模式,最大速度（10MHz）
        10  //输出模式,最大速度（2MHz）
        11  //输出模式,最大速度（50MHz）
// 注意：下拉输入和上拉输入是通过端口输出寄存器 GPIOxODR 来区分
|__________________________________________________________
|   CNF1   CNF0   MODE1   MODE0   | //PxODR寄存器状态 
|    8      4      2       1      |  
|_________________________________|
|    0      0      0       0      |  x        //模拟输入      
|    0      1      0       0      |  x        //浮空输入
|    1      0      0       0      |  0        //下拉输入 *Px_ODR
|    1      0      0       0      |  1        //上拉输入 *Px_ODR
|    0      0      01-10-11       |  x        //通用推完输出         
|    0      1      01-10-11       |  x        //通用开漏输出
|    1      0      01-10-11       |  x        //推挽式复用功能
|    1      1      01-10-11       |  x        //开漏式复用功能
|_________________________________|


//____________________________________________________________________________//
  CNF1    CNF0    MODE1    MODE0          CODE    Function
   0       0       0        0             (0)     //模拟输入
   0       1       0        0             (4)     //浮空输入(复位后的状态) 
   1       0       0        0             (8)     //下拉输入(PxODR = 0)
   1       0       0        0             (8)     //上拉输入(PxODR = 1)
   1       1       0        0             (C)保留

   0       0       0        1             (1)     //推挽输出(10MHz)
   0       0       1        0             (2)     //推挽输出(02MHz)
   0       0       1        1             (3)     //推挽输出(50MHz)

   0       1       0        1             (5)     //开漏输出(10MHz)
   0       1       1        0             (6)     //开漏输出(02MHz)
   0       1       1        1             (7)     //开漏输出(50MHz)

   1       0       0        1             (9)     //复用推挽输出(10MHz)
   1       0       1        0             (A)     //复用推挽输出(02MHz)
   1       0       1        1             (B)     //复用推挽输出(50MHz)

   1       1       0        1             (D)     //复用开漏输出(10MHz)
   1       1       1        0             (E)     //复用开漏输出(02MHz)
   1       1       1        1             (F)     //复用开漏输出(50MHz)
//____________________________________________________________________________//



/*******************************************************************************
        => AFIO_MAPR_复用重映射和调试I/O配置寄存器
*******************************************************************************/ 
SWJ_CFG[26:24]  //串行线JTAG配置 (Serial wire JTAG configuration)
    000         //完全SWJ(JTAG-DP + SW-DP):复位状态;
    001         //完全SWJ(JTAG-DP + SW-DP)但没有NJTRST;
    010         //关闭JTAG-DP,启用SW-DP;
    100         //关闭JTAG-DP,关闭SW-DP;



/*******************************************************************************
        => AFIO_EVCR_事件控制寄存器
*******************************************************************************/ 
EVOE[7]         //EVOE位“1”允许事件输出 (Event output enable)
                //该位可由软件读写。当设置该位后,Cortex的EVENTOUT将
                //连接到由PORT[2:0]和PIN[3:0]选定的I/O口。
___________________________________________________________
PORT[6:4]       //端口选择, 选择用于输出Cortex的EVENTOUT信号的端口
        000     选择GPIOA
        001     选择GPIOB
        010     选择GPIOC
        011     选择GPIOD
        100     选择GPIOE
___________________________________________________________
PIN[3:0]        //引脚选择(x=A…E), 选择用于输出Cortex的EVENTOUT信号的引脚
        0000    选择GPIOx_PIN_0
        0001    选择GPIOx_PIN_1
        0010    选择GPIOx_PIN_2
        0011    选择GPIOx_PIN_3
        0100    选择GPIOx_PIN_4
        0101    选择GPIOx_PIN_5
        0110    选择GPIOx_PIN_6
        0111    选择GPIOx_PIN_7
        1000    选择GPIOx_PIN_8
        1001    选择GPIOx_PIN_9
        1010    选择GPIOx_PIN_10
        1011    选择GPIOx_PIN_11
        1100    选择GPIOx_PIN_12
        1101    选择GPIOx_PIN_13
        1110    选择GPIOx_PIN_14
        1111    选择GPIOx_PIN_15



/*******************************************************************************
        => AFIO_EXTICRx_外部中断配置寄存器(x = 1~4)
        => 下面4个32位寄存器， 高16位保留， 低16使用
*******************************************************************************/
//_______________________________________________________//
        AFIO_EXTICR1_外部中断配置寄存器__1__
//_______________________________________________________//
EXTIx[3:0]      //EXTIx配置(x = 0 … 3) 
        //这些位可由软件读写，用于选择 EXTI0~EXTI3 外部中断的输入源
        0000    //GPIOA[x]引脚(x = 0~3)
        0001    //GPIOB[x]引脚(x = 0~3)
        0011    //GPIOD[x]引脚(x = 0~3)
        0100    //GPIOE[x]引脚(x = 0~3)
        0101    //GPIOF[x]引脚(x = 0~3)
        0110    //GPIOG[x]引脚(x = 0~3)
//_______________________________________________________//
        AFIO_EXTICR2_外部中断配置寄存器__2__
//_______________________________________________________//
EXTIx[3:0]      //EXTIx配置(x = 4 … 7)
        //这些位可由软件读写，用于选择 EXTI4~EXTI7 外部中断的输入源
        0000    //GPIOA[x]引脚(x = 4~7)
        0001    //GPIOB[x]引脚(x = 4~7)
        0011    //GPIOD[x]引脚(x = 4~7)
        0100    //GPIOE[x]引脚(x = 4~7)
        0101    //GPIOF[x]引脚(x = 4~7)
        0110    //GPIOG[x]引脚(x = 4~7)
//_______________________________________________________//
        AFIO_EXTICR2_外部中断配置寄存器__3__
//_______________________________________________________//
EXTIx[3:0]      //EXTIx配置(x = 8 … 11)
        //这些位可由软件读写，用于选择 EXTI8~EXTI11 外部中断的输入源
        0000    //GPIOA[x]引脚(x = 8~11)
        0001    //GPIOB[x]引脚(x = 8~11)
        0011    //GPIOD[x]引脚(x = 8~11)
        0100    //GPIOE[x]引脚(x = 8~11)
        0101    //GPIOF[x]引脚(x = 8~11)
        0110    //GPIOG[x]引脚(x = 8~11)
//_______________________________________________________//
        AFIO_EXTICR2_外部中断配置寄存器__4__
//_______________________________________________________//
EXTIx[3:0]      //EXTIx配置(x = 12 … 15)
        //这些位可由软件读写，用于选择 EXTI12~EXTI15 外部中断的输入源
        0000    //GPIOA[x]引脚(x = 12~15)
        0001    //GPIOB[x]引脚(x = 12~15)
        0011    //GPIOD[x]引脚(x = 12~15)
        0100    //GPIOE[x]引脚(x = 12~15)
        0101    //GPIOF[x]引脚(x = 12~15)
        0110    //GPIOG[x]引脚(x = 12~15)
