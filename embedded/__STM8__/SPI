/*******************************************************************************
        => STM8_SPI
*******************************************************************************/
SPI_MOSI        //主机输出，从机输入
SPI_MISO        //主机输入，从机输出
SPI_SCLK        //时钟信号
SPI_NSS         //片选信号
_________________________________________________________________________________
SPI_CR2（SSM = 1）则软件配置NSS引脚， 若（SSI = 1），则设备为主设备，反之为从设备
此时的（NSS引脚）就不能用来决定SPI的主从模式了，（NSS引脚）变成了一个普通的GPIO引脚。
_________________________________________________________________________________
SPI_CR2（SSM = 0）则硬件配置（NSS引脚）， 此时（NSS引脚 = 1）为主设备，（NSS引脚 = 0）
为从设备， 硬件配置， （SSI）这个功能位无效
_________________________________________________________________________________



CPOL    //极性，就是控制（时钟线）的空闲状态是高电平还是低电平
CPHA    //相位，就是数据采样是在第一个时钟边沿，还是第二个时钟边沿采样
//________________________________________________________|
|时钟相位（CPHA）  时钟极性（CPOL）  数据采样时机                |
|   0               0          //采样发生在 SCLK 时钟（上升沿）|
|   0               1          //采样发生在 SCLK 时钟（下降沿）|
|   1               0          //采样发生在 SCLK 时钟（下降沿）|
|   1               1          //采样发生在 SCLK 时钟（上升沿）|
|_________________________________________________________|



/*******************************************************************************
        => STM8_SPI__寄存器__
*******************************************************************************/
SPI_CRCPR       //多项式寄存器
SPI_RXCRCR      //接收数据多项式寄存器
SPI_TXCRCR      //发送数据多项式寄存器


SPI_CR1 = 0x70
//SPI在配置之前，（一定要保持 SPE = 0）
//_________________________________________________________
LSBFIRST = 0            //先发送最高有效位
SPE      = 0            //禁止SPI设备
BR[2:0]  = 0            //波特率设置为（Fmaster/2）
MSTR     = 1            //配置为（主设备）
CPOL     = 1            //空闲状态，SCLK保持高电平
CPHA     = 1            //数据采样从第二个时钟边沿开始

SPI_CR2 = 0x03
//_________________________________________________________
BDM     = 0             //选择（双线单向）数据模式
BDOE    = 0             //输入使能（只有在双向模式下才有用）
CRCEN   = 0             //CRC计算禁止
CRCNEXT = 0             //下一个发送的数据来自TX缓冲区
RXOnly  = 0             //全双工（同是发送和接收）
SSM     = 1             //使能软件从设备管理
SSI     = 1             //主模式



/*******************************************************************************
        => STM8_SPI__初始化__
*******************************************************************************/
//配置为（主设备）
void spi_gpio_master_init(void)
{
        PC_DDR_DDR5 = 1;        //配置PC5（SPI_CLK） 端口为输出模式
        PC_CR1_C15  = 1;        //配置PC5（SPI_CLK） 端口为推挽输出模式
        PC_CR2_C25  = 1;        //配置PC5（SPI_CLK） 端口为高速率输出
        
        PC_DDR_DDR6 = 1;        //配置PC6（SPI_MOSI）端口为输出模式
        PC_CR1_C16  = 1;        //配置PC6（SPI_MOSI）端口为推挽输出模式
        PC_CR2_C26  = 1;        //配置PC6（SPI_MOSI）端口为高速率输出
        
        PC_DDR_DDR7 = 0;        //配置PC7（SPI_MISO）端口为输入模式
        PC_CR1_C17  = 1;        //配置PC7（SPI_MISO）端口为弱上拉输入模式
        PC_CR2_C27  = 0;        //禁止PC7（SPI_MISO）端口外部中断
        
        //SPI_CR2（SSM = 1）则软件配置NSS引脚, PE5引脚就可以作为普通GPIO使用
        PE_DDR_DDR5 = 0;        //配置PE5（SPI_NSS） 端口为输入模式
        PE_CR1_C15  = 1;        //配置PE5（SPI_NSS） 端口为弱上拉输入模式
        PE_CR2_C25  = 0;        //禁止PE5（SPI_NSS） 端口外部中断
        
        SPI_CR1     = 0x07;     //先发高位，配置为主设备， 波特率Fmaster/2
                                //CPOL = 1, CPHA =1;
        SPI_CR2     = 0x00;     //硬件配置（NSS引脚）
        
        //如果需要中断功能，配置相应的中断功能
        SPI_CR1    |= 0x40;     //使能SPI
}
//配置为（从设备）
void spi_gpio_slave_init(void)
{
        PC_DDR_DDR5 = 0;        //配置PC5（SPI_CLK） 端口为输入模式
        PC_CR1_C15  = 1;        //配置PC5（SPI_CLK） 端口为弱上拉输入模式
        PC_CR2_C25  = 0;        //禁止PC5（SPI_CLK） 端口外部中断
        
        PC_DDR_DDR6 = 0;        //配置PC6（SPI_MOSI）端口为输入模式
        PC_CR1_C16  = 1;        //配置PC6（SPI_MOSI）端口为弱上拉输入模式
        PC_CR2_C26  = 0;        //配置PC6（SPI_MOSI）端口外部中断
        
        PC_DDR_DDR7 = 1;        //配置PC7（SPI_MISO）端口为输出模式
        PC_CR1_C17  = 1;        //配置PC7（SPI_MISO）端口为推挽输出模式
        PC_CR2_C27  = 0;        //禁止PC7（SPI_MISO）端口为高速率输出
        
        //SPI_CR2（SSM = 1）则软件配置NSS引脚, PE5引脚就可以作为普通GPIO使用
        PE_DDR_DDR5 = 0;        //配置PE5（SPI_NSS） 端口为输入模式
        PE_CR1_C15  = 1;        //配置PE5（SPI_NSS） 端口为弱上拉输入模式
        PE_CR2_C25  = 0;        //禁止PE5（SPI_NSS） 端口外部中断
        
        SPI_CR1     = 0x03;     //先发高位，配置为从设备，CPOL = 1, CPHA =1;
        SPI_CR2     = 0x00;     //硬件配置（NSS引脚）
        
        //如果需要中断功能，配置相应的中断功能
        SPI_CR1    |= 0x40;     //使能SPI
}
