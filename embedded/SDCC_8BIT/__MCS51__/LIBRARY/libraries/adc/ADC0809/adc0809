/*******************************************************************************
        => ADC0809
*******************************************************************************/
1. 8路模拟信号分时采集
2. 8位模数转换（2^8 = 256级; 0~255）
3. 转换时间（100）us



/*******************************************************************************
        => ADC0809
*******************************************************************************/
1. OE=0, 三态门设置为高阻离线状态
2. 选择模拟电压的输入通道； 设置输入地址码，ALE上升沿
3. 启动AD转换； START下降沿，在CLK时钟控制下以逐次逼近方式完成模数转换
4. 结果保存到三态输出锁存缓冲器中，EOC标志置位（通知单片机可以读取数据）
5. OE=1，读出缓冲器的数据


#define uint16_t        unsigned int
#define uint8_t         unsigned char
#define ADC_DATA        P1

//ADC0809
sbit START      =P3^2;          //启动转换
sbit EOC        =P3^3;          //转换结束标志
sbit OE         =P3^1;          //读取转换结果信号

//_____________________________________________________________
//ADC0809读取信息
//_____________________________________________________________
uint8_t adc0809(void)
{
        uint8_t tmp = 0x00;
        OE    = 0;              //初始化，设置输出缓冲器为高阻态（相当于与数据总线断开）
        START = 0;              //开始转换
        START = 1;              //上升沿设置模拟电压的输入通道，这里为通道“0”
        START = 0;              //紧接着下降沿启动ADC转换
        while (EOC = 0) {       //转换未完成（EOC=1表示转换完成）
                OE = 1;         //输出缓冲器接通数据线（为读取数据作准备）
        }
        
        tmp   = ADC_DATA;       //通过P1口读取数据保存到tmp中
        OE    = 0;              //断开数据线（输出缓冲器置为高阻，以便下一次转换）
        return (tmp);           //返回转换结果
}

//_____________________________________________________________
//显示电压换算了程序（将 0-255 级的数值换算成 0.00-5.00 的电压数值）
// 5.00 / 255 = 0.0196
//_____________________________________________________________
void conv_data(uint8_t data1)
{
        uint16_t vol;
        vol    = data1 * 1.96;  //255 * 1.96 = 500，把数值扩大100倍，便于数据处理
        dis[0] = vol / 100;     //个位
        dis[1] = vol % 100 /10; //小数点后（第1位）
        dis[2] = vol % 100 % 10;//小数点后（第2位）
}


void display(void)
{
        P0  = table[dis[0]];    //先送段码
        P2  = 0xFE;             //再送位选（0xFE = 11111110），第一位数码管
        DOT = 0;                //第一个数码管带小数点
        delay(1);               //适当延时，满足人眼视觉暂留所需要的时间
        P2  = 0xFF;             //消隐
        ...
}
