/*******************************************************************************
        => LCD12864（无子库）__PG12864LRS-JNN-H__
*******************************************************************************/
//LCD12864是由两片（64*64）组成，使用（CS1，CS2）使能。
//每半屏由8页，每页中字节数据由低到高。
1       VDD     5V              //模块电源
2       VSS     0V              //模块电源
3       VO      0V~-10V         //外部液晶偏置电压（负压）输入端
4       CS1     H/L             //左半屏使能（低电平有效）
5       CS2     H/L             //右半屏使能（低电平有效）
6       RST     H/L             //LCM复位（低电平有效）
7       R/W     H/L             //H:读数据 L:写数据
8       D/I     H/L             //H:数据 L:指令
9       E       H/L             //LCM使能
10      LED-A   5V              //LED背光电源
11      LED-K   0V              //LED背光电源
//背光电路中串接 5欧姆 电阻
//请在 DB0~DB7 数据线上加入10K电阻
//VO需要一个外部（0~-10V）负压输入，使液晶显示。 可串接电位器调整液晶灰度。
//指令集表
|_______________________________________________________________________________
| D/I | R/W | DB7 | DB6 | DB5 | DB4 | DB3 | DB2 | DB1 | DB0 | Function
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  0  |  0  |  0  |  0  |  1  |  1  |  1  |  1  |  1  |  P  | P=1（开显示）
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  0  |  0  |  0  |  1  | A5  | A4  | A3  | A2  | A1  | A0  | 列地直设置（0~63）
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  0  |  0  |  1  |  0  |  1  |  1  |  1  | A2  | A1  | A0  | 页码设置（0~7）
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  0  |  0  |  1  |  1  | A5  | A4  | A3  | A2  | A1  | A0  | 显示起始地址设置（0~63）
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  0  |  1  |  B  |  0  |  P  |  R  |  0  |  0  |  0  |  0  | B=1（LCM忙）；R=1（复位）
|     |     |     |     |     |     |     |     |     |     | P=1（开显示）
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  1  |  0  | A7  | A6  | A5  | A4  | A3  | A2  | A1  | A0  | 写8位显示数据
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________
|  1  |  1  | A7  | A6  | A5  | A4  | A3  | A2  | A1  | A0  | 读8位显示数据
|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|___________________




/*******************************************************************************
        => LCD12864（无子库）__最终改进的程序__
*******************************************************************************/
//cs=1（左屏），cs=2（右屏）
void write_cmd(uint8_t cs, uint8_t cmd)
{
        if (cs == 1) {
                CS1 = 1;
                CS2 = 0;
        } else {
                CS1 = 0;
                CS2 = 1;
        }
        DI = 0;
        RW = 0;
        P0 = cmd;
        delay_ms(1);
        EN = 1;
        delay_ms(1);
        EN = 0;
}
//cs=1（左屏），cs=2（右屏）
void write_dat(uint8_t cs, uint8_t dat)
{
        if (cs == 1) {
                CS1 = 1;
                CS2 = 0;
        } else {
                CS1 = 0;
                CS2 = 1;
        }
        DI = 1;
        RW = 0;
        P0 = cmd;
        delay_ms(1);
        EN = 1;
        delay_ms(1);
        EN = 0;
}


//cs=1（左屏），cs=2（右屏）
void clear(uint8_t cs, uint8_t dat)
{
        uint8_t j, k;
        if (cs == 1) {
                CS1 = 1;
                CS2 = 0;
        } else {
                CS1 = 0;
                CS2 = 1;
        }
        
        write_cmd(cs, PAGE_ADDR + 0);
        write_cmd(cs, COL_ADDR + 0);
        for (k = 0; k < 8; k++) {
                write_cmd(cs, PAGE_ADDR + K);
                for (j = 0; j < 64; j++) {
                        write_dat(cs, 0x00);
                }
        }

}


void lcd12864_init(void)
{
        RST = 0;
        delay_ms(50);
        RST = 1;
        delay_ms(50);
        write_cmd(1, DISP_OFF); write_cmd(2, DISP_OFF);
        write_cmd(1, PAGE_ADDR + 0); write_cmd(2, PAGE_ADDR + 0);
        write_cmd(1, START_LINE + 0); write_cmd(2, START_LINE + 0);
        write_cmd(1, COL_ADDR); write_cmd(2, COL_ADDR);
        write_cmd(1, DISP_ON); write_cmd(2, DISP_ON);
}

//cs    （1，左半屏 2，右半屏）
//page  页
//col   列
//num   是字的顺序编号
void display_ch(uint8_t cs, uint8_t page, uint8_t col, uint8_t num)
{
        uint8_t i = 0;
        uint8_t j = 0;
        if (cs == 1) {
                CS1 = 1;
                CS2 = 0;
        } else {
                CS1 = 0;
                CS2 = 1;
        }
        for (i = 0; i < 2; i++) {
                write_cmd(cs, PAGE_ADDR + page + i);
                write_cms(cs, COL_ADDR + col);
                for (j = 0; j < 16; j++) {
                        write_dat(cs, chinese[num][16*i + j]);
                }
        }
}

//cs    （1，左半屏 2，右半屏）
//page  页
//col   列
//num   是字的顺序编号
void display_en(uint8_t cs, uint8_t page, uint8_t col, uint8_t num)
{
        uint8_t i = 0;
        uint8_t j = 0;
        if (cs == 1) {
                CS1 = 1;
                CS2 = 0;
        } else {
                CS1 = 0;
                CS2 = 1;
        }
        for (i = 0; i < 2; i++) {
                write_cmd(cs, PAGE_ADDR + page + i);
                write_cms(cs, COL_ADDR + col);
                for (j = 0; j < 8; j++) {
                        write_dat(cs, english[num][8*i + j]);
                }
        }
}


//第一个参数（1，左半屏显示）（2，右半屏显示）
//第二个参数（页地址，0~7）
//第三个参数（行地址，0~64）
//第四个参数（要显示那个字符），它存储在一个二维数组中
int main(void)
{
        lcd12864_init();
        clear(1);
        clear(2);
        while (1) {
                display_ch(1, 0, 0, 0);
                display_ch(1, 0, 16, 1);
                display_ch(1, 0, 32, 2);
                display_ch(1, 0, 48, 3);
                
                display_ch(2, 0, 0, 4);
                display_ch(2, 0, 16, 5);
                display_ch(2, 0, 32, 6);
                display_ch(2, 0, 48, 7);
                
                display_en(1, 6, 24, 0);
                display_en(1, 6, 32, 1);
                display_en(1, 6, 40, 2);
                display_en(1, 6, 48, 3);

                display_en(2, 6, 24, 4);
                display_en(2, 6, 32, 5);
                display_en(2, 6, 40, 6);
                display_en(2, 6, 48, 7);
        }
}
