/*******************************************************************************
        => 外部中断
*******************************************************************************/
        ORG     0000H
        LJMP    START
        ORG     0003H           ;//如果没有指明外部中断地址，外部中断不会发生
        LJMP    X0_INT          ;//外部中断0
        ORT     0013H           ;//外部中断1的地址
        LJMP    X1_INT          ;//外部中断1
        ORG     0030H
START:
        CLR     IT0             ;//设置外部中断0的触发方式（电平触发）
;       SETB    IT0             ;//设置外部中断0的触发方式（下降沿触发）
        CLR     IT1             ;//设置外部中断1的触发方式（电平触发）
;       SETB    IT1             ;//设置外部中断1的触发方式（下降沿触发）
        SETB    EX0             ;//打开外部中断0
        SETB    EX1             ;//打开外部中断1
        SETB    EA              ;//打开总中断
        MOV     SP, #60H        ;//设置堆栈起始地址
        MOV     A, #0FEH        ;//流水灯的第一个灯亮
LOOP_00:
        MOV     P0, A
        CALL    DELAY_1S
        RL      A
        SJMP    LOOP_00


;//____________________________________________________________
;// 外部中断 0 服务程序
;//____________________________________________________________
X0_INT:
        CLR     EA              ;//清除总中断
        PUSH    PSW             ;//把PSW寄存器压入堆栈（保护现场）
        PUSH    ACC             ;//把ACC寄存器压入堆栈（保护现场）
        SETB    RS1             ;//快速返回主程序
        SETB    EA              ;//打开总中断
        
        MOV     A, #0F0H
        MOV     R2, #6
X0_00:
        MOV     P0, A
        CALL    DELAY_1S
        CPL     A
        DJNZ    R2, X0_00
        
        CLR     EA              ;//清除总中断
        POP     ACC             ;//ACC出栈（恢复现场）
        POP     PSW             ;//PSW出栈（恢复现场）
        SETB    EA              ;//打开总中断
        RETI
;//____________________________________________________________
;// 外部中断 1 服务程序
;//____________________________________________________________
X1_INT:
        CLR     EA              ;//清除总中断
        PUSH    PSW             ;//把PSW寄存器压入堆栈（保护现场）
        PUSH    ACC             ;//把ACC寄存器压入堆栈（保护现场）
        SETB    RS1             ;//快速返回主程序
        SETB    EA              ;//打开总中断
        
        MOV     A, #055H
        MOV     R2, #6
X1_00:
        MOV     P0, A
        CALL    DELAY_1S
        CPL     A
        DJNZ    R2, X0_00
        
        CLR     EA              ;//清除总中断
        POP     ACC             ;//ACC出栈（恢复现场）
        POP     PSW             ;//PSW出栈（恢复现场）
        SETB    EA              ;//打开总中断
        RETI
        
        
DELAY_1S:
        MOV     R5, #50
LOOP_80:
        MOV     R6, #100
LOOP_90:
        MOV     R7, #100
        DJNZ    R7, $
        DJNZ    R6, LOOP_90
        DJNZ    R5, LOOP_80
        RET
