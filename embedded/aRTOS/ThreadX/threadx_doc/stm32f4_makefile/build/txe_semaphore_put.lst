ARM GAS  /tmp/cc87VQvW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"txe_semaphore_put.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._txe_semaphore_put,"ax",%progbits
  18              		.align	1
  19              		.global	_txe_semaphore_put
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_txe_semaphore_put:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/txe_semaphore_put.c"
   1:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
   2:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
   3:ThreadX/common/src/txe_semaphore_put.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
   5:ThreadX/common/src/txe_semaphore_put.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/txe_semaphore_put.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/txe_semaphore_put.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/txe_semaphore_put.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  10:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  11:ThreadX/common/src/txe_semaphore_put.c **** 
  12:ThreadX/common/src/txe_semaphore_put.c **** 
  13:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  14:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  15:ThreadX/common/src/txe_semaphore_put.c **** /**                                                                       */
  16:ThreadX/common/src/txe_semaphore_put.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/txe_semaphore_put.c **** /**                                                                       */
  18:ThreadX/common/src/txe_semaphore_put.c **** /**   Semaphore                                                           */
  19:ThreadX/common/src/txe_semaphore_put.c **** /**                                                                       */
  20:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  21:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  22:ThreadX/common/src/txe_semaphore_put.c **** 
  23:ThreadX/common/src/txe_semaphore_put.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/txe_semaphore_put.c **** 
  25:ThreadX/common/src/txe_semaphore_put.c **** 
  26:ThreadX/common/src/txe_semaphore_put.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/txe_semaphore_put.c **** 
  28:ThreadX/common/src/txe_semaphore_put.c **** #include "tx_api.h"
  29:ThreadX/common/src/txe_semaphore_put.c **** #include "tx_semaphore.h"
  30:ThreadX/common/src/txe_semaphore_put.c **** 
  31:ThreadX/common/src/txe_semaphore_put.c **** 
ARM GAS  /tmp/cc87VQvW.s 			page 2


  32:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  33:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  34:ThreadX/common/src/txe_semaphore_put.c **** /*  FUNCTION                                               RELEASE        */
  35:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  36:ThreadX/common/src/txe_semaphore_put.c **** /*    _txe_semaphore_put                                  PORTABLE C      */
  37:ThreadX/common/src/txe_semaphore_put.c **** /*                                                           6.1          */
  38:ThreadX/common/src/txe_semaphore_put.c **** /*  AUTHOR                                                                */
  39:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  40:ThreadX/common/src/txe_semaphore_put.c **** /*    William E. Lamie, Microsoft Corporation                             */
  41:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  42:ThreadX/common/src/txe_semaphore_put.c **** /*  DESCRIPTION                                                           */
  43:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  44:ThreadX/common/src/txe_semaphore_put.c **** /*    This function checks for errors in the semaphore put function call. */
  45:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  46:ThreadX/common/src/txe_semaphore_put.c **** /*  INPUT                                                                 */
  47:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  48:ThreadX/common/src/txe_semaphore_put.c **** /*    semaphore_ptr                     Pointer to semaphore control block*/
  49:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  50:ThreadX/common/src/txe_semaphore_put.c **** /*  OUTPUT                                                                */
  51:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  52:ThreadX/common/src/txe_semaphore_put.c **** /*    TX_SEMAPHORE_ERROR                Invalid semaphore pointer         */
  53:ThreadX/common/src/txe_semaphore_put.c **** /*    status                            Actual completion status          */
  54:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  55:ThreadX/common/src/txe_semaphore_put.c **** /*  CALLS                                                                 */
  56:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  57:ThreadX/common/src/txe_semaphore_put.c **** /*    _tx_semaphore_put                 Actual put semaphore function     */
  58:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  59:ThreadX/common/src/txe_semaphore_put.c **** /*  CALLED BY                                                             */
  60:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  61:ThreadX/common/src/txe_semaphore_put.c **** /*    Application Code                                                    */
  62:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  63:ThreadX/common/src/txe_semaphore_put.c **** /*  RELEASE HISTORY                                                       */
  64:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  65:ThreadX/common/src/txe_semaphore_put.c **** /*    DATE              NAME                      DESCRIPTION             */
  66:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  67:ThreadX/common/src/txe_semaphore_put.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  68:ThreadX/common/src/txe_semaphore_put.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  69:ThreadX/common/src/txe_semaphore_put.c **** /*                                            resulting in version 6.1    */
  70:ThreadX/common/src/txe_semaphore_put.c **** /*                                                                        */
  71:ThreadX/common/src/txe_semaphore_put.c **** /**************************************************************************/
  72:ThreadX/common/src/txe_semaphore_put.c **** UINT  _txe_semaphore_put(TX_SEMAPHORE *semaphore_ptr)
  73:ThreadX/common/src/txe_semaphore_put.c **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  74:ThreadX/common/src/txe_semaphore_put.c **** 
  75:ThreadX/common/src/txe_semaphore_put.c **** UINT        status;
  76:ThreadX/common/src/txe_semaphore_put.c **** 
  77:ThreadX/common/src/txe_semaphore_put.c **** 
  78:ThreadX/common/src/txe_semaphore_put.c ****     /* Check for an invalid semaphore pointer.  */
  79:ThreadX/common/src/txe_semaphore_put.c ****     if (semaphore_ptr == TX_NULL)
  33              		.loc 1 79 0
  34 0000 48B1     		cbz	r0, .L3
  73:ThreadX/common/src/txe_semaphore_put.c **** 
  35              		.loc 1 73 0
ARM GAS  /tmp/cc87VQvW.s 			page 3


  36 0002 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  80:ThreadX/common/src/txe_semaphore_put.c ****     {
  81:ThreadX/common/src/txe_semaphore_put.c **** 
  82:ThreadX/common/src/txe_semaphore_put.c ****         /* Semaphore pointer is invalid, return appropriate error code.  */
  83:ThreadX/common/src/txe_semaphore_put.c ****         status =  TX_SEMAPHORE_ERROR;
  84:ThreadX/common/src/txe_semaphore_put.c ****     }
  85:ThreadX/common/src/txe_semaphore_put.c **** 
  86:ThreadX/common/src/txe_semaphore_put.c ****     /* Now check for invalid semaphore ID.  */
  87:ThreadX/common/src/txe_semaphore_put.c ****     else if (semaphore_ptr -> tx_semaphore_id != TX_SEMAPHORE_ID)
  41              		.loc 1 87 0
  42 0004 0168     		ldr	r1, [r0]
  43 0006 054A     		ldr	r2, .L10
  44 0008 9142     		cmp	r1, r2
  45 000a 01D0     		beq	.L9
  88:ThreadX/common/src/txe_semaphore_put.c ****     {
  89:ThreadX/common/src/txe_semaphore_put.c **** 
  90:ThreadX/common/src/txe_semaphore_put.c ****         /* Semaphore pointer is invalid, return appropriate error code.  */
  91:ThreadX/common/src/txe_semaphore_put.c ****         status =  TX_SEMAPHORE_ERROR;
  46              		.loc 1 91 0
  47 000c 0C20     		movs	r0, #12
  48              	.LVL1:
  49              	.L1:
  92:ThreadX/common/src/txe_semaphore_put.c ****     }
  93:ThreadX/common/src/txe_semaphore_put.c ****     else
  94:ThreadX/common/src/txe_semaphore_put.c ****     {
  95:ThreadX/common/src/txe_semaphore_put.c **** 
  96:ThreadX/common/src/txe_semaphore_put.c ****         /* Call actual put semaphore function.  */
  97:ThreadX/common/src/txe_semaphore_put.c ****         status =  _tx_semaphore_put(semaphore_ptr);
  98:ThreadX/common/src/txe_semaphore_put.c ****     }
  99:ThreadX/common/src/txe_semaphore_put.c **** 
 100:ThreadX/common/src/txe_semaphore_put.c ****     /* Return completion status.  */
 101:ThreadX/common/src/txe_semaphore_put.c ****     return(status);
 102:ThreadX/common/src/txe_semaphore_put.c **** }
  50              		.loc 1 102 0
  51 000e 08BD     		pop	{r3, pc}
  52              	.LVL2:
  53              	.L9:
  97:ThreadX/common/src/txe_semaphore_put.c ****     }
  54              		.loc 1 97 0
  55 0010 FFF7FEFF 		bl	_tx_semaphore_put
  56              	.LVL3:
  57 0014 FBE7     		b	.L1
  58              	.LVL4:
  59              	.L3:
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 0
  62              		.cfi_restore 3
  63              		.cfi_restore 14
  83:ThreadX/common/src/txe_semaphore_put.c ****     }
  64              		.loc 1 83 0
  65 0016 0C20     		movs	r0, #12
  66              	.LVL5:
  67              		.loc 1 102 0
ARM GAS  /tmp/cc87VQvW.s 			page 4


  68 0018 7047     		bx	lr
  69              	.L11:
  70 001a 00BF     		.align	2
  71              	.L10:
  72 001c 414D4553 		.word	1397050689
  73              		.cfi_endproc
  74              	.LFE8:
  76              		.text
  77              	.Letext0:
  78              		.file 2 "/usr/include/newlib/sys/lock.h"
  79              		.file 3 "/usr/include/newlib/sys/_types.h"
  80              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  81              		.file 5 "/usr/include/newlib/sys/reent.h"
  82              		.file 6 "/usr/include/newlib/stdlib.h"
  83              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  84              		.file 8 "ThreadX/common/inc/tx_api.h"
  85              		.file 9 "ThreadX/common/inc/tx_semaphore.h"
ARM GAS  /tmp/cc87VQvW.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 txe_semaphore_put.c
     /tmp/cc87VQvW.s:18     .text._txe_semaphore_put:0000000000000000 $t
     /tmp/cc87VQvW.s:25     .text._txe_semaphore_put:0000000000000000 _txe_semaphore_put
     /tmp/cc87VQvW.s:72     .text._txe_semaphore_put:000000000000001c $d

UNDEFINED SYMBOLS
_tx_semaphore_put
