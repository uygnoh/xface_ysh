/*******************************************************************************
        => 编码器
*******************************************************************************/
        编码器： 一种将直线位移， 角位移数据转换成脉冲信号， 二进制编码的设备








/*******************************************************************************
        => 编码器旋转扫描
*******************************************************************************/
// Absolute    Encoder
        绝对式编码器，系统断电，会保留位置信息
        

// Incremental Encoder
        增量式编码器，系统断电，不保留位置信息
        // 假设： 增量编码器，最大计数值是（10000）
        // 有一个物体进入传送带时计数为（5232）， 它退出时计数为（6311）
        // 5232 - 6311 = 1079   // 这是它的行程
        
        
        


// 编码器旋转扫描
FLAG    _________________________________                  _____________________
                                        |                  |
                                        |__________________|
                                                           
   A    ______________________                   __________________                          
                             |                   |
                             |___________________|     
                                        
   B    _________________________________                  _____________________
                                        |                  |
                                        |__________________|
                                        
                                        
                                        
                                        
void encode(void)
{
        static bit flag = 0, trun = 0;
        if (a == 1 && b == 1) {         // 处于平静状态
                flag = 1;               // 正常状态
        }
        if (flag) {
                if (a != b) {           // 记录A
                        turn = a;
                }
                if (a == 0 && b == 0) {
                        flag = 0;       // 禁止再次进入
                        if (turn) {
                                data--;
                        } else {
                                data++;
                        }
                }
        }
}
