/*******************************************************************************
        => 红外发射管二极管( 940nm红外光|850nm红外光 ) 使用38KHz载波频率
*******************************************************************************/
//NEC编解码格式顺序：
//_________________________________________________________
        逻辑“0”，载波发射0.56ms + 载波不发射0.56ms
        逻辑“1”，载波发射0.56ms + 载波不发射1.685ms
//_________________________________________________________
1 => （引导码 = 载波发射9ms + 载波不发射4.5ms）
2 => （“8” 位地址码）
3 => （“8” 位地址码的反码）
4 => （“8” 位命令码）
5 => （“8” 位命令码的反码）
6 => （结束码“0”）



/*******************************************************************************
        => 38KHz载波信号：1/38KHz = 26.3us
        => 载波周期占空比：1/3
        => 所以载波信号的高电平时间为：8.77us
*******************************************************************************/
sbit IR_TX	P1^2;


//发射38kHz载波信号, 发射 i 个周期
//一个载波周期定义为（8.77us + 17.53us），载波周期一般为 1/3
//_________________________________________________________
void send_ir(uint8_t i)
{
	while (i--) {
		IR_TX = 1;
		delay_8_77us();
		IR_TX = 0;
		delay_8_77us();
		delay_8_77us();
	}
}

//不发射红外载波信号, 不发射 i 个周期
//_________________________________________________________
void no_send_ir(uint8_t i)
{
	while (i--) {
		IR_TX = 0;
		delay_8_77us();
		delay_8_77us();
		delay_8_77us();
	}
}


//发送数据“0”(560us/26.3us = 21)
//_________________________________________________________
void send_nec_0(void)
{
	send_ir(21);    //产生0.56ms的红外载波信号
	no_send_ir(21); //产生0.56ms的无红外载波信号
}

//发送数据“1”(560us/26.3us = 21)(1685us/26.3 = 64)
//_________________________________________________________
void send_nec_1(void)
{
	send_ir(21);    // 产生0.56ms的红外载波信号
	no_send_ir(64); // 产生1.685ms的无红外载波信号
}

// 发送一帧信息
//_________________________________________________________
void send_nec_message(uint8_t addr_code, uint8_t cmd_code)
{
	uint8_t i, tmp;
	
	//1//发送引导码
	send_ir(342);           //发射9ms的载波(9000us/26.3 = 342)
	no_send_ir(171);        //不发射4.5ms的载波(4500/26.3 = 171)
		
	//2//发送地址码
	tmp = addr_code;
	for (i = 0; i < 8; i++) {
		if (tmp & 0x01)
			send_nec_1();
		else
			send_nec_0();
		tmp >>= 1;
	}
	
	//3//发送地址码的反码
	tmp = ~addr_code;
	for (i = 0; i < 8; i++) {
		if (tmp & 0x01)
			send_nec_1();
		else
			send_nec_0();
		tmp >>= 1;
	}
	
	//4//发送命令码
	tmp = cmd_code;
	for (i = 0; i < 8; i++) {
		if (tmp & 0x01)
			send_nec_1();
		else
			send_nec_0();
		tmp >>= 1;
	}
	
	//5//发送命令码的反码
	tmp = ~cmd_code;
	for (i = 0; i < 8; i++) {
		if (tmp & 0x01)
			send_nec_1();
		else
			send_nec_0();
		tmp >>= 1;
	}
	
	//6//发送结束码“0”
	send_nec_0();
}

// 80C51@12MHz
//_________________________________________________________
void delay_8_77us()
{
        uint8_t i;
        i = 2;
        while (--i);
}


/*******************************************************************************
        => 使用外部中断
*******************************************************************************/
#define ADDR_CODE       0xFF    //地址码
#define ADD_CODE        0x55    //命令码（KEY_01）
#define DEC_COdE        0xAA    //命令码（KEY_02）
void EXTI_init(void)
{
        IT0 = 1; //外部中断0，下降沿触发方式
        IT1 = 1; //外部中断1，下降沿触发方式
        EX0 = 1; //打开外部中断0
        EX1 = 1; //打开外部中断0
        EA  = 1; //开总中断
}

//使用外部中断0
//_________________________________________________________
void EXTI0_ISR(void) interrupt 0
{
	send_cnt++;
	if (send_cnt >10) {
		send_cnt = 10;
	} else {
		send_nec_message(ADDR_CODE, ADD_CODE);
	}
}
//使用外部中断1
//_________________________________________________________
void EXTI0_ISR(void) interrupt 2
{
	send_cnt++;
	if (send_cnt >10){
		send_cnt = 10;
	} else {
		send_nec_message(ADDR_CODE, DEC_CODE);
	}
}
