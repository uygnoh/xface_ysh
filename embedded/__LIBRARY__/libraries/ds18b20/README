/*******************************************************************************
                => 单总线器件ROM码64-bit唯一的ROM码
*******************************************************************************/
//主机根据ROM码的前56位来计算CRC值，然后与ROM中高8位的CRC
//值比较，判断接收的ROM是否正确，CRC码的多项式函数为：CRC=x8+x5+x4+1
___________________________________________________________
MSB                              LSB
(8位CRC校验码 + 48位串行数据 + 8位家庭码)
___________________________________________________________




/*******************************************************************************
                => DS18B20数字温度计寄存器
*******************************************************************************/
|       //SCRATCHPAD                            |       EEPROM
|_______________________________________________|
| Byte_0  //Temperature LSB(50h)                |
| Byte_1  //Temperature MSB(05h)                |
| Byte_2  //TH Register or User Byte 1*   <===> | TH Register or User Byte 1
| Byte_3  //TL Register or User Byte 2*   <===> | TL Register or User Byte 2
| Byte_4  //Configuration Register*       <===> | Configuration Register
| Byte_5  //Reserved(FFh)                       |
| Byte_6  //Reserved                            |
| Byte_7  //Reserved(10h)                       |
| Byte_8  //CRC*                                |
|_______________________________________________|

        //温度寄存器(“S”表示测量温度的正负值)
|__________________________________________________________|
|//         BIT7  BIT6  BIT5  BIT4  BIT3  BIT2  BIT1  BIT0 |
| LSB BYTE  2^3   2^2   2^1   2^0   2^-1  2^-2  2^-3 2^-4  |
|__________________________________________________________|
| MSB BYTE  S     S     S     S     S     2^6   2^5   2^4  |
|__________________________________________________________|
|
|
|       //TH和TL寄存器(“S”表示设定告警温度的正负值)
|__________________________________________________________|
| BIT7  BIT6  BIT5  BIT4  BIT3  BIT2  BIT1  BIT0           |
| S     2^6   2^5   2^4   2^3   2^2   2^1   2^0            |
|__________________________________________________________|
|
|
|       //配置寄存器(R1,R0用于标识测量温度的精度)(默认12位精度: 0.0625)
|__________________________________________________________|
| BIT7  BIT6  BIT5  BIT4  BIT3  BIT2  BIT1  BIT0           |
| 0     R1    R0    1     1     1     1     1              |
|__________________________________________________________|



/*******************************************************************************
                => DS18B20数字温度计->数据格式
*******************************************************************************/
//DS18B20温度转换(S为“0”温度为“+”， S为“1”温度为“-”)
//它存储数据的格式以“补码”形式存放的
//它的温度为“+”时， 它的“原码”“反码”“补码”都是一样的
//它的温度为“-”时， 需要转换
|__________________________________________________________|
|           BIT7  BIT6  BIT5  BIT4  BIT3  BIT2  BIT1  BIT0 |
| LSB BYTE  2^3   2^2   2^1   2^0   2^-1  2^-2  2^-3  2^-4 |
| MSB BYTE  S     S     S     S     S     2^6   2^5   2^4  |
|__________________________________________________________|


//原码， 反码， 补码
___________________________________________________________
计算机里都是以“补码”的形式存储数据！
___________________________________________________________
最高位为符号位， “0”代表正数据， “1”代表负数，
非符号位为该数字绝对值的二进制。
“+5”原码  (0000 0101)   “-5”原码  (1000 0101)
___________________________________________________________
“+5”反码  (0000 0101)   “-5”反码  (1111 1010)
___________________________________________________________
“+5”补码  (0000 0101)   “-5”补码  (1111 1011)



/*******************************************************************************
                => DS18B20ROM指令和功能指令
*******************************************************************************/
//ROM指令_ROM COMMANDS
___________________________________________________________
1   //搜索ROM指令[ F0H ]
      当系统初始化时，总线控制器通过此指令多次
      循环搜索ROM编码，以确认所有从机器件
2   //读取ROM指令[ 33H ]
      当总线上只有一只DS18B20时才会使用此指令
      允许总线控制器直接读取从机序列码
3   //匹配ROM指令[ 55H ]
      使总线控制器在多点总线上定位一只特定的DS18B20
4   //忽略ROM指令[ CCH ]
      可以不提供64位ROM编码就使用功能指令
5   //报警ROM指令[ ECH ]
      当总线上存在满足报警条件的从机时，该从机响应此指令
    

//功能指令_FUNCTION COMMANDS
___________________________________________________________
//scratchpad功能指令，操作它需要下面的2个步骤
1   //Initialize
2   //ROM Command
3   //Function Command
___________________________________________________________
1   //温度转换指令   [44H]
2   //写暂存器指令   [4EH]
      开始位置在暂存器(TH寄存器，TL寄存器，配置寄存器)
      初始地址为TH寄存器，以最低有效位传送
3   //读暂存器指令   [BEH]
      读取将从地址0开始，直到（CRC）读完
4   //拷贝暂存器指令 [48H]
      将TH,TL，配置寄存器的数据复制到EEPROM中得以保存
5   //召回EEPROM指令[B8H]
      将TH,TL，配置寄存器的数据从EEPROM中复制到暂存器中
6   //读电源模式指令 [B4H]
