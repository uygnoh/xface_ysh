// ChibiOS的任务如果优先级不同会按优先级来进行调度，
        高优先级的就绪任务能够block低优先级的任务，
        当2个任务的优先级相同时，ChibiOS的默认配置
        不支持周期轮训调度，此时就需要修改配置文件
        // 我们可以观察os/rt/src/chschd.c文件中函数
        // chSchDoReschedule的实现，可以看到里面涉及到一个特殊的参数配置：
                CH_CFG_TIME_QUANTUM
        // 该参数＞0时，将会调用chSchReadyI函数从任务就绪队列中取出一个任务，
        // 由于这个队列是循环的，所以每个同等优先级的任务将能平等地被轮训到，以
        // 此完成了不同相等优先级任务的轮流调度（round-robin）
另外这个参数的值也是有意义的，其表示每个任务将拥有CH_CFG_TIME_QUANTUM个Tick周期的原子
（相对于同等和低优先级的任务而言）时间，简而言之，就是相同优先级任务每次被轮训到时，持续
的Tick数。例如，系统Tick周期是1000，表示1ms一个Tick，CH_CFG_TIME_QUANTUM值为2，若有
两个优先级相同的任务，则每个任务都能持续运行2ms，然后被内核剥夺CPU权限，交给另一个任务运行2ms，周期执行。
        // 另外，值得注意的是，该参数＞0时，
        // CH_CFG_ST_TIMEDELTA这个参数必须是0，否则将编译报错，这主要是这两种机制不兼容的缘故

