############################################################
### % Nuttx需要的工具
############################################################
1 A supported board
% stm32f103c8t6

2 A SWD Programmer
% STLink_V2

3 A 3.3V USB/Serial adapter
% Silabs CP2102 cost

4 A Computer running Linux



############################################################
### % kconfig-frontends工具
############################################################
sudo apt-get install kconfig-frontends



############################################################
### % openocd gcc-arm-none-eabi
############################################################
0 % 依赖环境
sudo apt-get install automake bison build-essential flex gcc-arm-none-eabi\
gperf git libncurses5-dev libtool libusb-dev libusb-1.0-dev minicom


1 % OpenOCD编译选项
mkdri nuttx_space
cd muttx_space
git clone http://repo.or.cz/r/openocd.git
cd openocd
./bootstrap
./configure --enable-internal-jimtcl\
            --enable-maintainer-mode\
            --disable-werror        \
            --disable-shared        \
            --enable-stlink         \
            --enable-jlink          \
            --enable-rlink          \
            --enable-vsllink        \
            --enable-ti-icdi        \
            --enable-remote-bitbang \


2 % 安装OpenOCD            
make
sudo make install


3 % 配置OpenOCD规则文件
cd nuttxspace/openocd/contrib/
sudo cp 99-openocd.rules /etc/udev/rules.d/
sudo udevadm trigger



############################################################
### % nuttx-嵌入式实时操作系统构建
############################################################
% nuttx_space/下载文件(nuttx apps)
cd muttx_space
git clone https://github.com/apache/incubator-nuttx.git nuttx
git clone https://github.com/apache/incubator-nuttx-apps.git apps
git clone https://github.com/apache/incubator-nuttx-apps.git tools


0 % 使用脚本自动配置目标板驱动程序
cd nuttx/tools
./configure.sh stm32f103-minimum/nsh


1 % 命令行图形化配置MCU参数
cd nuttx
make menuconfig


2 % 修改目标板链接脚本
vim boards/arm/stm32/stm32f103-minimum/scripts/ld.script
MEMORY
{
	flash (rx)	: ORIGIN = 0x08000000, LENGTH = 128K
	sram (rwx)	: ORIGIN = 0x20000000, LENGTH = 20K
}


make all



############################################################
### minicom
############################################################
% 将目标用户添加至dialout用户组 因tty设备隶属于dialout用户组
% sudo vim /etc/group
dialout:x:20:freeysh

% 用下面命令访问串口( A_Serial    :Device/dev/ttyUSB0 )
su - $USER
minicom -s 


% cd /nuttxspace/nuttx$ 
openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg

openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg -c init \
-c "reset halt" -c "flash write_image erase nuttx.bin 0x08000000"




############################################################
### % codeblocks配置
############################################################
1 % 配置调式器
Settings ->Debugger...
        GDB/CDB debugger    [ Create Config ]   OpenOCD
->OpenOCD
        % OpenOCD执行路径
        Executable path:    /home/freeysh/Downloads/Software/GCC/
                            gcc-arm-none-eabi-2018/bin/arm-none-eabi-gdb
		                    
2 % 编译器配置		                  
Settings ->Compiler... ->Selected compiler [ GNU GCC Compiler for ARM ]
% 嵌入式编译器安装目录	
->Toolchain executables
    Compiler's installation directory [ gcc-arm-none-eabi-2018/bin ] 
->Program Files
        C compiler:                 arm-none-eabi-gcc
        C++ compiler:               arm-none-eabi-g++
        Linker for dynamic libs:    arm-none-eabi-g++
        Linker for static libs:     arm-none-eabi-ar
        Debugger:                   OpenOCD
        Make program:               make               
		                  
		                  
3 % 创建工程
Create new Project ->Empty project 
->next
        Project title:                  nuttx
        Folder to create priject in:    /home/nuttx_space
        Project filename:               nuttx.cbp
        Resulting filename:             /home/nuttx_space/nuttx/nuttx.cbp          
->next
        compiler:                       GNU GCC compiler for ARM
        Create "Debug" configuration:   all	                  
		                  
		                  
4 % 配置工程
Workspace ->nuttx ->properites...
% 使用自定义Makefile文件 	                  
->Project settings ->This is acustom Makefile
% 调式器端口配置	                  
->Debugger ->all ->Remote connection
        connection type: TCP
        serial prot:		  	baud: 115200
        IP address: 127.0.0.1 	port: 3333
% 调式器命令参数			                  
->Debugger ->all ->Additonal GDB commands
        Before connection:
        After  connection:  monitor reset init
                            load nuttx
                            b os_start		                  
		                  
		                  
5 % codeblocks加载文件
Workspace ->nuttx ->Add files recursively...
	Multiple selection ->Select All


6 % cd nuttx_space/nuttx
make menuconfig
Build Setup ->Debug Options --->Generate Debug Symbols[*]



############################################################
### % codeblocks调式
############################################################	
0 % cd $HOME/nuttx_space/nuttx
openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg


1 % CodeBlocks
Debug ->Start/Continue


2 % Terminal ->New window ->Always on top
cd $HOME
minicom



############################################################
### % codeblocks IDE
############################################################
% 配置终端
Settings ->Environment... ->General settings
Terminal to launch console programs: gnome-terminal -t $TITLE -x                   	             

% 关闭拼写检查
Settings ->Editort...
   
