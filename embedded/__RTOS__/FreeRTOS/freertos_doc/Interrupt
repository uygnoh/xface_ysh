#ifndef configKERNEL_INTERRUPT_PRIORITY
        #define configKERNEL_INTERRUPT_PRIORITY         255
#endif
#define portNVIC_PENDSV_PRI     (((uint32_t) configKERNEL_INTERRUPT_PRIORITY) << 16UL)
#define portNVIC_SYSTICK_PRI    (((uint32_t) configKERNEL_INTERRUPT_PRIORITY) << 24UL)
#define portNVIC_SHPR3_REG      (*((volatile uint32_t *)0xe000ed20))
BaseType_t xPortStartScheduler( void )
{
        /* Make PendSV and SysTick the lowest priority interrupts. */
        //确保PENDSV和SYSTICK的优先级为最低
        portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
        portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;

        /* Start the timer that generates the tick ISR.  Interrupts are disabled
        * here already. */
        vPortSetupTimerInterrupt();

        /* Initialise the critical nesting count ready for the first task. */
        uxCriticalNesting = 0;

        /* Start the first task. */
        prvPortStartFirstTask();

        vTaskSwitchContext();
        prvTaskExitError();

        /* Should not get here! */
        return 0;
}



// CM3中断屏幕寄存器
//_____________________________________________________________
MOV     R0, #1
MSR     PRIMASK, R0     //关闭中断
MOV     R0, #0
MSR     PRIMASK, R0     //开中断



