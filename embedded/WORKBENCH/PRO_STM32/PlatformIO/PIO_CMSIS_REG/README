############################################################
### % STM32头文件调用关系
############################################################
(#include "stm32f10x.h") ->(#include "stm32f10x_conf.h")
____________________________________________________
% “stm32f10x.h”, 需要定义一个“USE_STDPERIPH_DRIVER”的宏
#ifdef USE_STDPERIPH_DRIVER
    #include "stm32f10x_conf.h"
#endif



############################################################
### % STM32标准固件库测试文件 
############################################################
/* % stm32f103c8t6(PC13端口测试LED) */
#include "stm32f10x.h"

void port_pc13_test(void)
{
    uint8_t i;
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);

    GPIO_InitTypeDef PORT;
    PORT.GPIO_Pin = GPIO_Pin_13;
    PORT.GPIO_Speed = GPIO_Speed_50MHz;
    PORT.GPIO_Mode = GPIO_Mode_Out_PP;
    GPIO_Init(GPIOC, &PORT);

    for (i = 0; i < 9; i++)
    {
        PC_OUT(13) = 0;
        delay_ms(1000);
        PC_OUT(13) = 1;
        delay_ms(1000);
    }
}

int main(void)
{
    port_pc13_test();
    while (1)
    {
    }
    return 0;
}



############################################################
### % PlatformIO配置文件(platformio.ini)
############################################################
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir = include



[env:genericSTM32F103C8]
platform        = ststm32
board           = genericSTM32F103C8
framework       = cmsis


; 指定STM32链接脚本位置
board_build.ldscript = STM32F103C8TX_FLASH.ld


; 下载和调试设置
upload_protocol = stlink 
debug_tool      = stlink

; 编译选项标志     
build_flags     = -Isrc/BSP               
                  -Isrc/USR
                  -Isrc/STM32LIBS/inc
                  -D STM32F10X_MD
                  -D USE_STDPERIPH_DRIVER



