.program blink                  ; PIO 运行频率设置为 2000 Hz
.wrap_target                    ; 200 cycles / 2000 Hz = 0.1 sec
        set pins, 1     [19]    ; 打开LED，并等待 19 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
        set pins, 0     [19]    ; 关闭LED，并等待 19 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
        nop             [19]    ; 等待 20 cycles
.wrap

% c-sdk {
        void blink_program_init(PIO pio, uint sm, uint offset, uint pin, float div) {
                // generated in blink.pio.h
                pio_sm_config c = blink_program_get_default_config(offset);
                
                // Allow PIO to control GPIO pin (as output)
                pio_gpio_init(pio, pin);
                
                // Connect pin to SET pin(control with 'set' instruction)
                sm_config_set_set_pins(&c, pin, 1);
                
                // Set the pin direction to output( in PIO)
                pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);
                
                // set hte clock divider for the state machine
                sm_config_set_clkdiv(&c, div);
                
                // Load configuration and jump to start of the program
                pio_sm_init(pio, sm, offset, &c);
        }

%}
