ARM GAS  /tmp/ccJeaRzg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"components.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.rti_start,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	rti_start:
  23              	.LFB15:
  24              		.file 1 "rtthread/src/components.c"
   1:rtthread/src/components.c **** /*
   2:rtthread/src/components.c ****  * Copyright (c) 2006-2021, RT-Thread Development Team
   3:rtthread/src/components.c ****  *
   4:rtthread/src/components.c ****  * SPDX-License-Identifier: Apache-2.0
   5:rtthread/src/components.c ****  *
   6:rtthread/src/components.c ****  * Change Logs:
   7:rtthread/src/components.c ****  * Date           Author       Notes
   8:rtthread/src/components.c ****  * 2012-09-20     Bernard      Change the name to components.c
   9:rtthread/src/components.c ****  *                             And all components related header files.
  10:rtthread/src/components.c ****  * 2012-12-23     Bernard      fix the pthread initialization issue.
  11:rtthread/src/components.c ****  * 2013-06-23     Bernard      Add the init_call for components initialization.
  12:rtthread/src/components.c ****  * 2013-07-05     Bernard      Remove initialization feature for MS VC++ compiler
  13:rtthread/src/components.c ****  * 2015-02-06     Bernard      Remove the MS VC++ support and move to the kernel
  14:rtthread/src/components.c ****  * 2015-05-04     Bernard      Rename it to components.c because compiling issue
  15:rtthread/src/components.c ****  *                             in some IDEs.
  16:rtthread/src/components.c ****  * 2015-07-29     Arda.Fu      Add support to use RT_USING_USER_MAIN with IAR
  17:rtthread/src/components.c ****  * 2018-11-22     Jesven       Add secondary cpu boot up
  18:rtthread/src/components.c ****  */
  19:rtthread/src/components.c **** 
  20:rtthread/src/components.c **** #include <rthw.h>
  21:rtthread/src/components.c **** #include <rtthread.h>
  22:rtthread/src/components.c **** 
  23:rtthread/src/components.c **** #ifdef RT_USING_USER_MAIN
  24:rtthread/src/components.c **** #ifndef RT_MAIN_THREAD_STACK_SIZE
  25:rtthread/src/components.c **** #define RT_MAIN_THREAD_STACK_SIZE     2048
  26:rtthread/src/components.c **** #endif
  27:rtthread/src/components.c **** #ifndef RT_MAIN_THREAD_PRIORITY
  28:rtthread/src/components.c **** #define RT_MAIN_THREAD_PRIORITY       (RT_THREAD_PRIORITY_MAX / 3)
  29:rtthread/src/components.c **** #endif
  30:rtthread/src/components.c **** #endif
  31:rtthread/src/components.c **** 
  32:rtthread/src/components.c **** #ifdef RT_USING_COMPONENTS_INIT
  33:rtthread/src/components.c **** /*
  34:rtthread/src/components.c ****  * Components Initialization will initialize some driver and components as following
ARM GAS  /tmp/ccJeaRzg.s 			page 2


  35:rtthread/src/components.c ****  * order:
  36:rtthread/src/components.c ****  * rti_start         --> 0
  37:rtthread/src/components.c ****  * BOARD_EXPORT      --> 1
  38:rtthread/src/components.c ****  * rti_board_end     --> 1.end
  39:rtthread/src/components.c ****  *
  40:rtthread/src/components.c ****  * DEVICE_EXPORT     --> 2
  41:rtthread/src/components.c ****  * COMPONENT_EXPORT  --> 3
  42:rtthread/src/components.c ****  * FS_EXPORT         --> 4
  43:rtthread/src/components.c ****  * ENV_EXPORT        --> 5
  44:rtthread/src/components.c ****  * APP_EXPORT        --> 6
  45:rtthread/src/components.c ****  *
  46:rtthread/src/components.c ****  * rti_end           --> 6.end
  47:rtthread/src/components.c ****  *
  48:rtthread/src/components.c ****  * These automatically initialization, the driver or component initial function must
  49:rtthread/src/components.c ****  * be defined with:
  50:rtthread/src/components.c ****  * INIT_BOARD_EXPORT(fn);
  51:rtthread/src/components.c ****  * INIT_DEVICE_EXPORT(fn);
  52:rtthread/src/components.c ****  * ...
  53:rtthread/src/components.c ****  * INIT_APP_EXPORT(fn);
  54:rtthread/src/components.c ****  * etc.
  55:rtthread/src/components.c ****  */
  56:rtthread/src/components.c **** static int rti_start(void)
  57:rtthread/src/components.c **** {
  25              		.loc 1 57 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  58:rtthread/src/components.c ****     return 0;
  59:rtthread/src/components.c **** }
  30              		.loc 1 59 0
  31 0000 0020     		movs	r0, #0
  32 0002 7047     		bx	lr
  33              		.cfi_endproc
  34              	.LFE15:
  36              		.section	.text.rti_board_start,"ax",%progbits
  37              		.align	1
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu softvfp
  43              	rti_board_start:
  44              	.LFB16:
  60:rtthread/src/components.c **** INIT_EXPORT(rti_start, "0");
  61:rtthread/src/components.c **** 
  62:rtthread/src/components.c **** static int rti_board_start(void)
  63:rtthread/src/components.c **** {
  45              		.loc 1 63 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  64:rtthread/src/components.c ****     return 0;
  65:rtthread/src/components.c **** }
  50              		.loc 1 65 0
  51 0000 0020     		movs	r0, #0
  52 0002 7047     		bx	lr
ARM GAS  /tmp/ccJeaRzg.s 			page 3


  53              		.cfi_endproc
  54              	.LFE16:
  56              		.section	.text.rti_board_end,"ax",%progbits
  57              		.align	1
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu softvfp
  63              	rti_board_end:
  64              	.LFB17:
  66:rtthread/src/components.c **** INIT_EXPORT(rti_board_start, "0.end");
  67:rtthread/src/components.c **** 
  68:rtthread/src/components.c **** static int rti_board_end(void)
  69:rtthread/src/components.c **** {
  65              		.loc 1 69 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70:rtthread/src/components.c ****     return 0;
  71:rtthread/src/components.c **** }
  70              		.loc 1 71 0
  71 0000 0020     		movs	r0, #0
  72 0002 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE17:
  76              		.section	.text.rti_end,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  81              		.fpu softvfp
  83              	rti_end:
  84              	.LFB18:
  72:rtthread/src/components.c **** INIT_EXPORT(rti_board_end, "1.end");
  73:rtthread/src/components.c **** 
  74:rtthread/src/components.c **** static int rti_end(void)
  75:rtthread/src/components.c **** {
  85              		.loc 1 75 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  76:rtthread/src/components.c ****     return 0;
  77:rtthread/src/components.c **** }
  90              		.loc 1 77 0
  91 0000 0020     		movs	r0, #0
  92 0002 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE18:
  96              		.section	.text.rt_components_board_init,"ax",%progbits
  97              		.align	1
  98              		.global	rt_components_board_init
  99              		.syntax unified
 100              		.thumb
 101              		.thumb_func
 102              		.fpu softvfp
ARM GAS  /tmp/ccJeaRzg.s 			page 4


 104              	rt_components_board_init:
 105              	.LFB19:
  78:rtthread/src/components.c **** INIT_EXPORT(rti_end, "6.end");
  79:rtthread/src/components.c **** 
  80:rtthread/src/components.c **** /**
  81:rtthread/src/components.c ****  * RT-Thread Components Initialization for board
  82:rtthread/src/components.c ****  */
  83:rtthread/src/components.c **** void rt_components_board_init(void)
  84:rtthread/src/components.c **** {
 106              		.loc 1 84 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 10B5     		push	{r4, lr}
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 4, -8
 114              		.cfi_offset 14, -4
  85:rtthread/src/components.c **** #if RT_DEBUG_INIT
  86:rtthread/src/components.c ****     int result;
  87:rtthread/src/components.c ****     const struct rt_init_desc *desc;
  88:rtthread/src/components.c ****     for (desc = &__rt_init_desc_rti_board_start; desc < &__rt_init_desc_rti_board_end; desc ++)
  89:rtthread/src/components.c ****     {
  90:rtthread/src/components.c ****         rt_kprintf("initialize %s", desc->fn_name);
  91:rtthread/src/components.c ****         result = desc->fn();
  92:rtthread/src/components.c ****         rt_kprintf(":%d done\n", result);
  93:rtthread/src/components.c ****     }
  94:rtthread/src/components.c **** #else
  95:rtthread/src/components.c ****     volatile const init_fn_t *fn_ptr;
  96:rtthread/src/components.c **** 
  97:rtthread/src/components.c ****     for (fn_ptr = &__rt_init_rti_board_start; fn_ptr < &__rt_init_rti_board_end; fn_ptr++)
 115              		.loc 1 97 0
 116 0002 044C     		ldr	r4, .L9
 117 0004 02E0     		b	.L6
 118              	.LVL0:
 119              	.L7:
  98:rtthread/src/components.c ****     {
  99:rtthread/src/components.c ****         (*fn_ptr)();
 120              		.loc 1 99 0 discriminator 3
 121 0006 54F8043B 		ldr	r3, [r4], #4
 122              	.LVL1:
 123 000a 9847     		blx	r3
 124              	.LVL2:
 125              	.L6:
  97:rtthread/src/components.c ****     {
 126              		.loc 1 97 0 discriminator 1
 127 000c 024B     		ldr	r3, .L9+4
 128 000e 9C42     		cmp	r4, r3
 129 0010 F9D3     		bcc	.L7
 100:rtthread/src/components.c ****     }
 101:rtthread/src/components.c **** #endif
 102:rtthread/src/components.c **** }
 130              		.loc 1 102 0
 131 0012 10BD     		pop	{r4, pc}
 132              	.LVL3:
 133              	.L10:
 134              		.align	2
ARM GAS  /tmp/ccJeaRzg.s 			page 5


 135              	.L9:
 136 0014 00000000 		.word	.LANCHOR0
 137 0018 00000000 		.word	.LANCHOR1
 138              		.cfi_endproc
 139              	.LFE19:
 141              		.section	.text.rt_components_init,"ax",%progbits
 142              		.align	1
 143              		.global	rt_components_init
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	rt_components_init:
 150              	.LFB20:
 103:rtthread/src/components.c **** 
 104:rtthread/src/components.c **** /**
 105:rtthread/src/components.c ****  * RT-Thread Components Initialization
 106:rtthread/src/components.c ****  */
 107:rtthread/src/components.c **** void rt_components_init(void)
 108:rtthread/src/components.c **** {
 151              		.loc 1 108 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155 0000 10B5     		push	{r4, lr}
 156              	.LCFI1:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 109:rtthread/src/components.c **** #if RT_DEBUG_INIT
 110:rtthread/src/components.c ****     int result;
 111:rtthread/src/components.c ****     const struct rt_init_desc *desc;
 112:rtthread/src/components.c **** 
 113:rtthread/src/components.c ****     rt_kprintf("do components initialization.\n");
 114:rtthread/src/components.c ****     for (desc = &__rt_init_desc_rti_board_end; desc < &__rt_init_desc_rti_end; desc ++)
 115:rtthread/src/components.c ****     {
 116:rtthread/src/components.c ****         rt_kprintf("initialize %s", desc->fn_name);
 117:rtthread/src/components.c ****         result = desc->fn();
 118:rtthread/src/components.c ****         rt_kprintf(":%d done\n", result);
 119:rtthread/src/components.c ****     }
 120:rtthread/src/components.c **** #else
 121:rtthread/src/components.c ****     volatile const init_fn_t *fn_ptr;
 122:rtthread/src/components.c **** 
 123:rtthread/src/components.c ****     for (fn_ptr = &__rt_init_rti_board_end; fn_ptr < &__rt_init_rti_end; fn_ptr ++)
 160              		.loc 1 123 0
 161 0002 044C     		ldr	r4, .L15
 162 0004 02E0     		b	.L12
 163              	.LVL4:
 164              	.L13:
 124:rtthread/src/components.c ****     {
 125:rtthread/src/components.c ****         (*fn_ptr)();
 165              		.loc 1 125 0 discriminator 3
 166 0006 54F8043B 		ldr	r3, [r4], #4
 167              	.LVL5:
 168 000a 9847     		blx	r3
 169              	.LVL6:
 170              	.L12:
ARM GAS  /tmp/ccJeaRzg.s 			page 6


 123:rtthread/src/components.c ****     {
 171              		.loc 1 123 0 discriminator 1
 172 000c 024B     		ldr	r3, .L15+4
 173 000e 9C42     		cmp	r4, r3
 174 0010 F9D3     		bcc	.L13
 126:rtthread/src/components.c ****     }
 127:rtthread/src/components.c **** #endif
 128:rtthread/src/components.c **** }
 175              		.loc 1 128 0
 176 0012 10BD     		pop	{r4, pc}
 177              	.LVL7:
 178              	.L16:
 179              		.align	2
 180              	.L15:
 181 0014 00000000 		.word	.LANCHOR1
 182 0018 00000000 		.word	.LANCHOR2
 183              		.cfi_endproc
 184              	.LFE20:
 186              		.section	.text.main_thread_entry,"ax",%progbits
 187              		.align	1
 188              		.global	main_thread_entry
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	main_thread_entry:
 195              	.LFB22:
 129:rtthread/src/components.c **** #endif   /* RT_USING_COMPONENTS_INIT */
 130:rtthread/src/components.c **** 
 131:rtthread/src/components.c **** #ifdef RT_USING_USER_MAIN
 132:rtthread/src/components.c **** 
 133:rtthread/src/components.c **** void rt_application_init(void);
 134:rtthread/src/components.c **** void rt_hw_board_init(void);
 135:rtthread/src/components.c **** int rtthread_startup(void);
 136:rtthread/src/components.c **** 
 137:rtthread/src/components.c **** #if defined(__CC_ARM) || defined(__CLANG_ARM)
 138:rtthread/src/components.c **** extern int $Super$$main(void);
 139:rtthread/src/components.c **** /* re-define main function */
 140:rtthread/src/components.c **** int $Sub$$main(void)
 141:rtthread/src/components.c **** {
 142:rtthread/src/components.c ****     rtthread_startup();
 143:rtthread/src/components.c ****     return 0;
 144:rtthread/src/components.c **** }
 145:rtthread/src/components.c **** #elif defined(__ICCARM__)
 146:rtthread/src/components.c **** extern int main(void);
 147:rtthread/src/components.c **** /* __low_level_init will auto called by IAR cstartup */
 148:rtthread/src/components.c **** extern void __iar_data_init3(void);
 149:rtthread/src/components.c **** int __low_level_init(void)
 150:rtthread/src/components.c **** {
 151:rtthread/src/components.c ****     // call IAR table copy function.
 152:rtthread/src/components.c ****     __iar_data_init3();
 153:rtthread/src/components.c ****     rtthread_startup();
 154:rtthread/src/components.c ****     return 0;
 155:rtthread/src/components.c **** }
 156:rtthread/src/components.c **** #elif defined(__GNUC__)
 157:rtthread/src/components.c **** /* Add -eentry to arm-none-eabi-gcc argument */
 158:rtthread/src/components.c **** int entry(void)
ARM GAS  /tmp/ccJeaRzg.s 			page 7


 159:rtthread/src/components.c **** {
 160:rtthread/src/components.c ****     rtthread_startup();
 161:rtthread/src/components.c ****     return 0;
 162:rtthread/src/components.c **** }
 163:rtthread/src/components.c **** #endif
 164:rtthread/src/components.c **** 
 165:rtthread/src/components.c **** #ifndef RT_USING_HEAP
 166:rtthread/src/components.c **** /* if there is not enable heap, we should use static thread and stack. */
 167:rtthread/src/components.c **** ALIGN(8)
 168:rtthread/src/components.c **** static rt_uint8_t main_stack[RT_MAIN_THREAD_STACK_SIZE];
 169:rtthread/src/components.c **** struct rt_thread main_thread;
 170:rtthread/src/components.c **** #endif
 171:rtthread/src/components.c **** 
 172:rtthread/src/components.c **** /* the system main thread */
 173:rtthread/src/components.c **** void main_thread_entry(void *parameter)
 174:rtthread/src/components.c **** {
 196              		.loc 1 174 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL8:
 201 0000 08B5     		push	{r3, lr}
 202              	.LCFI2:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 3, -8
 205              		.cfi_offset 14, -4
 175:rtthread/src/components.c ****     extern int main(void);
 176:rtthread/src/components.c ****     extern int $Super$$main(void);
 177:rtthread/src/components.c **** 
 178:rtthread/src/components.c **** #ifdef RT_USING_COMPONENTS_INIT
 179:rtthread/src/components.c ****     /* RT-Thread components initialization */
 180:rtthread/src/components.c ****     rt_components_init();
 206              		.loc 1 180 0
 207 0002 FFF7FEFF 		bl	rt_components_init
 208              	.LVL9:
 181:rtthread/src/components.c **** #endif
 182:rtthread/src/components.c ****     /* invoke system main function */
 183:rtthread/src/components.c **** #if defined(__CC_ARM) || defined(__CLANG_ARM)
 184:rtthread/src/components.c ****     $Super$$main(); /* for ARMCC. */
 185:rtthread/src/components.c **** #elif defined(__ICCARM__) || defined(__GNUC__)
 186:rtthread/src/components.c ****     main();
 209              		.loc 1 186 0
 210 0006 FFF7FEFF 		bl	main
 211              	.LVL10:
 187:rtthread/src/components.c **** #endif
 188:rtthread/src/components.c **** }
 212              		.loc 1 188 0
 213 000a 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE22:
 217              		.section	.text.rt_application_init,"ax",%progbits
 218              		.align	1
 219              		.global	rt_application_init
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu softvfp
ARM GAS  /tmp/ccJeaRzg.s 			page 8


 225              	rt_application_init:
 226              	.LFB23:
 189:rtthread/src/components.c **** 
 190:rtthread/src/components.c **** void rt_application_init(void)
 191:rtthread/src/components.c **** {
 227              		.loc 1 191 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231 0000 10B5     		push	{r4, lr}
 232              	.LCFI3:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236 0002 84B0     		sub	sp, sp, #16
 237              	.LCFI4:
 238              		.cfi_def_cfa_offset 24
 239              	.LVL11:
 192:rtthread/src/components.c ****     rt_thread_t tid;
 193:rtthread/src/components.c **** 
 194:rtthread/src/components.c **** #ifdef RT_USING_HEAP
 195:rtthread/src/components.c ****     tid = rt_thread_create("main", main_thread_entry, RT_NULL,
 196:rtthread/src/components.c ****                            RT_MAIN_THREAD_STACK_SIZE, RT_MAIN_THREAD_PRIORITY, 20);
 197:rtthread/src/components.c ****     RT_ASSERT(tid != RT_NULL);
 198:rtthread/src/components.c **** #else
 199:rtthread/src/components.c ****     rt_err_t result;
 200:rtthread/src/components.c **** 
 201:rtthread/src/components.c ****     tid = &main_thread;
 202:rtthread/src/components.c ****     result = rt_thread_init(tid, "main", main_thread_entry, RT_NULL,
 240              		.loc 1 202 0
 241 0004 0A4C     		ldr	r4, .L21
 242 0006 1423     		movs	r3, #20
 243 0008 0393     		str	r3, [sp, #12]
 244 000a 0223     		movs	r3, #2
 245 000c 0293     		str	r3, [sp, #8]
 246 000e 4FF48073 		mov	r3, #256
 247 0012 0193     		str	r3, [sp, #4]
 248 0014 074B     		ldr	r3, .L21+4
 249 0016 0093     		str	r3, [sp]
 250 0018 0023     		movs	r3, #0
 251 001a 074A     		ldr	r2, .L21+8
 252 001c 0749     		ldr	r1, .L21+12
 253 001e 2046     		mov	r0, r4
 254 0020 FFF7FEFF 		bl	rt_thread_init
 255              	.LVL12:
 203:rtthread/src/components.c ****                             main_stack, sizeof(main_stack), RT_MAIN_THREAD_PRIORITY, 20);
 204:rtthread/src/components.c ****     RT_ASSERT(result == RT_EOK);
 205:rtthread/src/components.c **** 
 206:rtthread/src/components.c ****     /* if not define RT_USING_HEAP, using to eliminate the warning */
 207:rtthread/src/components.c ****     (void)result;
 208:rtthread/src/components.c **** #endif
 209:rtthread/src/components.c **** 
 210:rtthread/src/components.c ****     rt_thread_startup(tid);
 256              		.loc 1 210 0
 257 0024 2046     		mov	r0, r4
 258 0026 FFF7FEFF 		bl	rt_thread_startup
 259              	.LVL13:
ARM GAS  /tmp/ccJeaRzg.s 			page 9


 211:rtthread/src/components.c **** }
 260              		.loc 1 211 0
 261 002a 04B0     		add	sp, sp, #16
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 8
 264              		@ sp needed
 265 002c 10BD     		pop	{r4, pc}
 266              	.L22:
 267 002e 00BF     		.align	2
 268              	.L21:
 269 0030 00000000 		.word	main_thread
 270 0034 00000000 		.word	.LANCHOR3
 271 0038 00000000 		.word	main_thread_entry
 272 003c 00000000 		.word	.LC0
 273              		.cfi_endproc
 274              	.LFE23:
 276              		.section	.text.rtthread_startup,"ax",%progbits
 277              		.align	1
 278              		.global	rtthread_startup
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu softvfp
 284              	rtthread_startup:
 285              	.LFB24:
 212:rtthread/src/components.c **** 
 213:rtthread/src/components.c **** extern void hardware_initialization(void);
 214:rtthread/src/components.c **** int rtthread_startup(void)
 215:rtthread/src/components.c **** {
 286              		.loc 1 215 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 216:rtthread/src/components.c ****     hardware_initialization();
 295              		.loc 1 216 0
 296 0002 FFF7FEFF 		bl	hardware_initialization
 297              	.LVL14:
 217:rtthread/src/components.c ****     rt_hw_interrupt_disable();
 298              		.loc 1 217 0
 299 0006 FFF7FEFF 		bl	rt_hw_interrupt_disable
 300              	.LVL15:
 218:rtthread/src/components.c **** 
 219:rtthread/src/components.c ****     /* board level initialization
 220:rtthread/src/components.c ****      * NOTE: please initialize heap inside board initialization.
 221:rtthread/src/components.c ****      */
 222:rtthread/src/components.c ****     rt_hw_board_init();
 301              		.loc 1 222 0
 302 000a FFF7FEFF 		bl	rt_hw_board_init
 303              	.LVL16:
 223:rtthread/src/components.c **** 
 224:rtthread/src/components.c ****     /* show RT-Thread version */
 225:rtthread/src/components.c ****     rt_show_version();
ARM GAS  /tmp/ccJeaRzg.s 			page 10


 304              		.loc 1 225 0
 305 000e FFF7FEFF 		bl	rt_show_version
 306              	.LVL17:
 226:rtthread/src/components.c **** 
 227:rtthread/src/components.c ****     /* timer system initialization */
 228:rtthread/src/components.c ****     rt_system_timer_init();
 307              		.loc 1 228 0
 308 0012 FFF7FEFF 		bl	rt_system_timer_init
 309              	.LVL18:
 229:rtthread/src/components.c **** 
 230:rtthread/src/components.c ****     /* scheduler system initialization */
 231:rtthread/src/components.c ****     rt_system_scheduler_init();
 310              		.loc 1 231 0
 311 0016 FFF7FEFF 		bl	rt_system_scheduler_init
 312              	.LVL19:
 232:rtthread/src/components.c **** 
 233:rtthread/src/components.c ****     /* create init_thread */
 234:rtthread/src/components.c ****     rt_application_init();
 313              		.loc 1 234 0
 314 001a FFF7FEFF 		bl	rt_application_init
 315              	.LVL20:
 235:rtthread/src/components.c **** 
 236:rtthread/src/components.c ****     /* timer thread initialization */
 237:rtthread/src/components.c ****     rt_system_timer_thread_init();
 316              		.loc 1 237 0
 317 001e FFF7FEFF 		bl	rt_system_timer_thread_init
 318              	.LVL21:
 238:rtthread/src/components.c **** 
 239:rtthread/src/components.c ****     /* idle thread initialization */
 240:rtthread/src/components.c ****     rt_thread_idle_init();
 319              		.loc 1 240 0
 320 0022 FFF7FEFF 		bl	rt_thread_idle_init
 321              	.LVL22:
 241:rtthread/src/components.c **** 
 242:rtthread/src/components.c ****     /* start scheduler */
 243:rtthread/src/components.c ****     rt_system_scheduler_start();
 322              		.loc 1 243 0
 323 0026 FFF7FEFF 		bl	rt_system_scheduler_start
 324              	.LVL23:
 244:rtthread/src/components.c **** 
 245:rtthread/src/components.c ****     /* never reach here */
 246:rtthread/src/components.c ****     return 0;
 247:rtthread/src/components.c **** }
 325              		.loc 1 247 0
 326 002a 0020     		movs	r0, #0
 327 002c 08BD     		pop	{r3, pc}
 328              		.cfi_endproc
 329              	.LFE24:
 331              		.section	.text.entry,"ax",%progbits
 332              		.align	1
 333              		.global	entry
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu softvfp
 339              	entry:
 340              	.LFB21:
ARM GAS  /tmp/ccJeaRzg.s 			page 11


 159:rtthread/src/components.c ****     rtthread_startup();
 341              		.loc 1 159 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345 0000 08B5     		push	{r3, lr}
 346              	.LCFI7:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 3, -8
 349              		.cfi_offset 14, -4
 160:rtthread/src/components.c ****     return 0;
 350              		.loc 1 160 0
 351 0002 FFF7FEFF 		bl	rtthread_startup
 352              	.LVL24:
 162:rtthread/src/components.c **** #endif
 353              		.loc 1 162 0
 354 0006 0020     		movs	r0, #0
 355 0008 08BD     		pop	{r3, pc}
 356              		.cfi_endproc
 357              	.LFE21:
 359              		.comm	main_thread,120,4
 360              		.global	__rt_init_rti_end
 361              		.global	__rt_init_rti_board_end
 362              		.global	__rt_init_rti_board_start
 363              		.global	__rt_init_rti_start
 364              		.section	.bss.main_stack,"aw",%nobits
 365              		.align	3
 366              		.set	.LANCHOR3,. + 0
 369              	main_stack:
 370 0000 00000000 		.space	256
 370      00000000 
 370      00000000 
 370      00000000 
 370      00000000 
 371              		.section	.rodata.rt_application_init.str1.4,"aMS",%progbits,1
 372              		.align	2
 373              	.LC0:
 374 0000 6D61696E 		.ascii	"main\000"
 374      00
 375              		.section	.rti_fn.0,"a",%progbits
 376              		.align	2
 379              	__rt_init_rti_start:
 380 0000 00000000 		.word	rti_start
 381              		.section	.rti_fn.0.end,"a",%progbits
 382              		.align	2
 383              		.set	.LANCHOR0,. + 0
 386              	__rt_init_rti_board_start:
 387 0000 00000000 		.word	rti_board_start
 388              		.section	.rti_fn.1.end,"a",%progbits
 389              		.align	2
 390              		.set	.LANCHOR1,. + 0
 393              	__rt_init_rti_board_end:
 394 0000 00000000 		.word	rti_board_end
 395              		.section	.rti_fn.6.end,"a",%progbits
 396              		.align	2
 397              		.set	.LANCHOR2,. + 0
 400              	__rt_init_rti_end:
ARM GAS  /tmp/ccJeaRzg.s 			page 12


 401 0000 00000000 		.word	rti_end
 402              		.text
 403              	.Letext0:
 404              		.file 2 "rtthread/include/rtdef.h"
 405              		.file 3 "rtthread/include/rthw.h"
 406              		.file 4 "rtthread/include/rtthread.h"
ARM GAS  /tmp/ccJeaRzg.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 components.c
     /tmp/ccJeaRzg.s:16     .text.rti_start:0000000000000000 $t
     /tmp/ccJeaRzg.s:22     .text.rti_start:0000000000000000 rti_start
     /tmp/ccJeaRzg.s:37     .text.rti_board_start:0000000000000000 $t
     /tmp/ccJeaRzg.s:43     .text.rti_board_start:0000000000000000 rti_board_start
     /tmp/ccJeaRzg.s:57     .text.rti_board_end:0000000000000000 $t
     /tmp/ccJeaRzg.s:63     .text.rti_board_end:0000000000000000 rti_board_end
     /tmp/ccJeaRzg.s:77     .text.rti_end:0000000000000000 $t
     /tmp/ccJeaRzg.s:83     .text.rti_end:0000000000000000 rti_end
     /tmp/ccJeaRzg.s:97     .text.rt_components_board_init:0000000000000000 $t
     /tmp/ccJeaRzg.s:104    .text.rt_components_board_init:0000000000000000 rt_components_board_init
     /tmp/ccJeaRzg.s:136    .text.rt_components_board_init:0000000000000014 $d
     /tmp/ccJeaRzg.s:142    .text.rt_components_init:0000000000000000 $t
     /tmp/ccJeaRzg.s:149    .text.rt_components_init:0000000000000000 rt_components_init
     /tmp/ccJeaRzg.s:181    .text.rt_components_init:0000000000000014 $d
     /tmp/ccJeaRzg.s:187    .text.main_thread_entry:0000000000000000 $t
     /tmp/ccJeaRzg.s:194    .text.main_thread_entry:0000000000000000 main_thread_entry
     /tmp/ccJeaRzg.s:218    .text.rt_application_init:0000000000000000 $t
     /tmp/ccJeaRzg.s:225    .text.rt_application_init:0000000000000000 rt_application_init
     /tmp/ccJeaRzg.s:269    .text.rt_application_init:0000000000000030 $d
                            *COM*:0000000000000078 main_thread
     /tmp/ccJeaRzg.s:277    .text.rtthread_startup:0000000000000000 $t
     /tmp/ccJeaRzg.s:284    .text.rtthread_startup:0000000000000000 rtthread_startup
     /tmp/ccJeaRzg.s:332    .text.entry:0000000000000000 $t
     /tmp/ccJeaRzg.s:339    .text.entry:0000000000000000 entry
     /tmp/ccJeaRzg.s:400    .rti_fn.6.end:0000000000000000 __rt_init_rti_end
     /tmp/ccJeaRzg.s:393    .rti_fn.1.end:0000000000000000 __rt_init_rti_board_end
     /tmp/ccJeaRzg.s:386    .rti_fn.0.end:0000000000000000 __rt_init_rti_board_start
     /tmp/ccJeaRzg.s:379    .rti_fn.0:0000000000000000 __rt_init_rti_start
     /tmp/ccJeaRzg.s:365    .bss.main_stack:0000000000000000 $d
     /tmp/ccJeaRzg.s:369    .bss.main_stack:0000000000000000 main_stack
     /tmp/ccJeaRzg.s:372    .rodata.rt_application_init.str1.4:0000000000000000 $d
     /tmp/ccJeaRzg.s:376    .rti_fn.0:0000000000000000 $d
     /tmp/ccJeaRzg.s:382    .rti_fn.0.end:0000000000000000 $d
     /tmp/ccJeaRzg.s:389    .rti_fn.1.end:0000000000000000 $d
     /tmp/ccJeaRzg.s:396    .rti_fn.6.end:0000000000000000 $d

UNDEFINED SYMBOLS
main
rt_thread_init
rt_thread_startup
hardware_initialization
rt_hw_interrupt_disable
rt_hw_board_init
rt_show_version
rt_system_timer_init
rt_system_scheduler_init
rt_system_timer_thread_init
rt_thread_idle_init
rt_system_scheduler_start
