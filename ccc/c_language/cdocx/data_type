/*******************************************************************************
        => MCS8051
*******************************************************************************/
char                -128~127                 (1byte)
unsigned char       0~255                   (1byte)
int                 -32768~32767             (2byte)
unsigned int        0~65535                 (2byte)
long int            -2147483648~2147483647   (4byte)
unsigned long int   0~4294967295            (4byte)



/*******************************************************************************
        => STM32
*******************************************************************************/
//按照posix标准，一般整形对应的*_t类型为：
uint8_t         //1字节
uint16_t        //2字节
uint32_t        //4字节
uint64_t        //8字节
#define __IO    volatile
typedef unsigned int uint32_t;
typedef __IO uint32_t uv32;




/*******************************************************************************
        => uint8_t, uint16_t, uint32_t, uint64_t
*******************************************************************************/
//这些数据类型中都带有_t, _t 表示这些数据类型是通过typedef定义的，
//而不是新的数据类型。 也就是说，它们其实是我们已知的类型的别名
typedef   signed          char int8_t;
typedef   signed short     int int16_t;
typedef   signed           int int32_t;
typedef   signed       __INT64 int64_t;
/* exact-width unsigned integer types */
typedef unsigned          char uint8_t;
typedef unsigned short     int uint16_t;
typedef unsigned           int uint32_t;
typedef unsigned       __INT64 uint64_t;
