/*******************************************************************************
        => ARM 指令编码
*******************************************************************************/
// ARM 指令集机器编码基本格式
//_____________________________________________________________
条件码     指令码     目的寄存器    操作数1寄存器      操作数2
31-28     27-20       19-16         15-12          11-0 



/*******************************************************************************
        => 堆栈
*******************************************************************************/
// 弄清堆栈寻址的SP的变化：
// LDMFA，LDMFD，STMFA，STMFD，LDMEA，LDMED，STMEA，STMED
//_____________________________________________________________
        IA： 每次传送后地址加 4
        IB： 每次传送前地址加 4
        DA： 每次传送后地址减 4
        DB： 每次传送前地址减 4
        FD： 满递减堆栈
        ED： 空递减堆栈
        FA： 满递增堆栈
        EA： 空递增堆栈



.equ num, 26
_start:
        ldr r0, =src
        ldr r1, =dst
        mov r2, #num
        ldr sp, =0x300000000
bcopy:
        movs r3, r2, lsr #2     //r3 = (r2 >> 2)
        beq cword               //如果 r3 = 0， 则执行
        stmfd sp!, {r4-r7}      //把{r4-r7}压入栈中保存
ocopy:
        ldmia r0!, {r4-r7}      //先加载，后移动指针
        stmia r1!, {r4-r7}      //先存储，后移动指针
        subs r3, r3, #1
        bne ocopy
        ldmfd sp!, {r4-r7}      //POP

cword:
        ands r2, r2, #3
        beq stop
wcopy:                          //复制最后2个字的数据
        ldr r3, [r0], #4
        str r3, [r1], #4
        subs r2, r2, #1
        bne wcopy
stop:
        mov r0, #0x18
        ldr r1, =0x20026
        swi 0x123456
 
src:
        .long 1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2
dst:
        .long 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
