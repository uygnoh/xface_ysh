ARM GAS  /tmp/ccMXfXVO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_event_flags_performance_info_get.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_event_flags_performance_info_get,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_event_flags_performance_info_get
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_event_flags_performance_info_get:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_event_flags_performance_info_get.c"
   1:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
   3:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
   5:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  10:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  12:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  13:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**                                                                       */
  16:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**                                                                       */
  18:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**   Event Flags                                                         */
  19:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**                                                                       */
  20:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  23:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  25:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  26:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  28:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #include "tx_event_flags.h"
  30:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #ifdef TX_EVENT_FLAGS_ENABLE_PERFORMANCE_INFO
  31:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #include "tx_trace.h"
ARM GAS  /tmp/ccMXfXVO.s 			page 2


  32:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #endif
  33:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  34:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  35:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  36:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  37:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  FUNCTION                                               RELEASE        */
  38:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  39:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    _tx_event_flags_performance_info_get                PORTABLE C      */
  40:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                           6.1          */
  41:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  AUTHOR                                                                */
  42:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  43:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    William E. Lamie, Microsoft Corporation                             */
  44:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  45:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  DESCRIPTION                                                           */
  46:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  47:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    This function retrieves performance information from the specified  */
  48:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    event flag group.                                                   */
  49:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  50:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  INPUT                                                                 */
  51:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  52:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    group_ptr                         Pointer to event flag group       */
  53:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    sets                              Destination for the number of     */
  54:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                        event flag sets on this group   */
  55:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    gets                              Destination for the number of     */
  56:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                        event flag gets on this group   */
  57:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    suspensions                       Destination for the number of     */
  58:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                        event flag suspensions on this  */
  59:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                        group                           */
  60:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    timeouts                          Destination for number of timeouts*/
  61:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                        on this event flag group        */
  62:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  63:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  OUTPUT                                                                */
  64:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  65:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    status                            Completion status                 */
  66:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  67:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  CALLS                                                                 */
  68:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  69:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    None                                                                */
  70:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  71:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  CALLED BY                                                             */
  72:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  73:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    Application Code                                                    */
  74:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  75:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  RELEASE HISTORY                                                       */
  76:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  77:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*    DATE              NAME                      DESCRIPTION             */
  78:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  79:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  80:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  81:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                            resulting in version 6.1    */
  82:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /*                                                                        */
  83:ThreadX/common/src/tx_event_flags_performance_info_get.c **** /**************************************************************************/
  84:ThreadX/common/src/tx_event_flags_performance_info_get.c **** UINT  _tx_event_flags_performance_info_get(TX_EVENT_FLAGS_GROUP *group_ptr, ULONG *sets, ULONG *get
  85:ThreadX/common/src/tx_event_flags_performance_info_get.c ****                     ULONG *suspensions, ULONG *timeouts)
  86:ThreadX/common/src/tx_event_flags_performance_info_get.c **** {
  28              		.loc 1 86 0
  29              		.cfi_startproc
ARM GAS  /tmp/ccMXfXVO.s 			page 3


  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  87:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  88:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #ifdef TX_EVENT_FLAGS_ENABLE_PERFORMANCE_INFO
  89:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  90:ThreadX/common/src/tx_event_flags_performance_info_get.c **** TX_INTERRUPT_SAVE_AREA
  91:ThreadX/common/src/tx_event_flags_performance_info_get.c **** UINT                    status;
  92:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  93:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  94:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     /* Determine if this is a legal request.  */
  95:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     if (group_ptr == TX_NULL)
  96:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
  97:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
  98:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Event flags group pointer is illegal, return error.  */
  99:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_PTR_ERROR;
 100:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 101:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 102:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     /* Determine if the event group ID is invalid.  */
 103:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else if (group_ptr -> tx_event_flags_group_id != TX_EVENT_FLAGS_ID)
 104:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 105:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 106:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Event flags group pointer is illegal, return error.  */
 107:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_PTR_ERROR;
 108:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 109:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else
 110:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 111:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 112:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Disable interrupts.  */
 113:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         TX_DISABLE
 114:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 115:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* If trace is enabled, insert this event into the trace buffer.  */
 116:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         TX_TRACE_IN_LINE_INSERT(TX_TRACE_EVENT_FLAGS_PERFORMANCE_INFO_GET, group_ptr, 0, 0, 0, TX_T
 117:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 118:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Log this kernel call.  */
 119:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         TX_EL_EVENT_FLAGS_PERFORMANCE_INFO_GET_INSERT
 120:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 121:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Retrieve all the pertinent information and return it in the supplied
 122:ThreadX/common/src/tx_event_flags_performance_info_get.c ****            destinations.  */
 123:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 124:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Retrieve the number of set operations on this event flag group.  */
 125:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         if (sets != TX_NULL)
 126:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         {
 127:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 128:ThreadX/common/src/tx_event_flags_performance_info_get.c ****             *sets =  group_ptr -> tx_event_flags_group_performance_set_count;
 129:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         }
 130:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 131:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Retrieve the number of get operations on this event flag group.  */
 132:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         if (gets != TX_NULL)
 133:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         {
 134:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 135:ThreadX/common/src/tx_event_flags_performance_info_get.c ****             *gets =  group_ptr -> tx_event_flags_group__performance_get_count;
 136:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         }
 137:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 138:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Retrieve the number of thread suspensions on this event flag group.  */
 139:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         if (suspensions != TX_NULL)
ARM GAS  /tmp/ccMXfXVO.s 			page 4


 140:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         {
 141:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 142:ThreadX/common/src/tx_event_flags_performance_info_get.c ****             *suspensions =  group_ptr -> tx_event_flags_group___performance_suspension_count;
 143:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         }
 144:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 145:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Retrieve the number of thread timeouts on this event flag group.  */
 146:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         if (timeouts != TX_NULL)
 147:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         {
 148:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 149:ThreadX/common/src/tx_event_flags_performance_info_get.c ****             *timeouts =  group_ptr -> tx_event_flags_group____performance_timeout_count;
 150:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         }
 151:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 152:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Restore interrupts.  */
 153:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         TX_RESTORE
 154:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 155:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Return successful completion.  */
 156:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_SUCCESS;
 157:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 158:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #else
 159:ThreadX/common/src/tx_event_flags_performance_info_get.c **** UINT                    status;
 160:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 161:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 162:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     /* Access input arguments just for the sake of lint, MISRA, etc.  */
 163:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     if (group_ptr != TX_NULL)
 164:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 165:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 166:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
 167:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 168:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 169:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else if (sets != TX_NULL)
 170:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 171:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 172:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
 173:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 174:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 175:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else if (gets != TX_NULL)
 176:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 177:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 178:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
 179:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 180:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 181:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else if (suspensions != TX_NULL)
 182:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 183:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 184:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
 185:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 186:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 187:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else if (timeouts != TX_NULL)
 188:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 189:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 190:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
 191:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 192:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 193:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     else
 194:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     {
 195:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 196:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         /* Not enabled, return error.  */
ARM GAS  /tmp/ccMXfXVO.s 			page 5


 197:ThreadX/common/src/tx_event_flags_performance_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 198:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     }
 199:ThreadX/common/src/tx_event_flags_performance_info_get.c **** #endif
 200:ThreadX/common/src/tx_event_flags_performance_info_get.c **** 
 201:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     /* Return completion status.  */
 202:ThreadX/common/src/tx_event_flags_performance_info_get.c ****     return(status);
 203:ThreadX/common/src/tx_event_flags_performance_info_get.c **** }
  34              		.loc 1 203 0
  35 0000 FF20     		movs	r0, #255
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE8:
  41              		.text
  42              	.Letext0:
  43              		.file 2 "/usr/include/newlib/sys/lock.h"
  44              		.file 3 "/usr/include/newlib/sys/_types.h"
  45              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  46              		.file 5 "/usr/include/newlib/sys/reent.h"
  47              		.file 6 "/usr/include/newlib/stdlib.h"
  48              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  49              		.file 8 "ThreadX/common/inc/tx_api.h"
  50              		.file 9 "ThreadX/common/inc/tx_event_flags.h"
ARM GAS  /tmp/ccMXfXVO.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_event_flags_performance_info_get.c
     /tmp/ccMXfXVO.s:18     .text._tx_event_flags_performance_info_get:0000000000000000 $t
     /tmp/ccMXfXVO.s:25     .text._tx_event_flags_performance_info_get:0000000000000000 _tx_event_flags_performance_info_get

NO UNDEFINED SYMBOLS
