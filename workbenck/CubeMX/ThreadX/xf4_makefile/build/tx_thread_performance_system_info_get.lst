ARM GAS  /tmp/ccU8QSi2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_thread_performance_system_info_get.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_thread_performance_system_info_get,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_thread_performance_system_info_get
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_thread_performance_system_info_get:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_thread_performance_system_info_get.c"
   1:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
   3:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
   5:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  10:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  12:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  13:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**                                                                       */
  16:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**                                                                       */
  18:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**   Thread                                                              */
  19:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**                                                                       */
  20:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  23:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  25:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  26:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  28:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #include "tx_thread.h"
  30:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
  31:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #include "tx_trace.h"
ARM GAS  /tmp/ccU8QSi2.s 			page 2


  32:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #endif
  33:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  34:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
  35:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
  36:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  37:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  FUNCTION                                               RELEASE        */
  38:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  39:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    _tx_thread_performance_system_info_get              PORTABLE C      */
  40:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                           6.1          */
  41:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  AUTHOR                                                                */
  42:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  43:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    William E. Lamie, Microsoft Corporation                             */
  44:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  45:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  DESCRIPTION                                                           */
  46:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  47:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    This function retrieves thread system performance information.      */
  48:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  49:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  INPUT                                                                 */
  50:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  51:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    resumptions                       Destination for total number of   */
  52:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        thread resumptions              */
  53:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    suspensions                       Destination for total number of   */
  54:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        thread suspensions              */
  55:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    solicited_preemptions             Destination for total number of   */
  56:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        thread preemption from thread   */
  57:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        API calls                       */
  58:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    interrupt_preemptions             Destination for total number of   */
  59:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        thread preemptions as a result  */
  60:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        of threads made ready inside of */
  61:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        Interrupt Service Routines      */
  62:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    priority_inversions               Destination for total number of   */
  63:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        priority inversions             */
  64:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    time_slices                       Destination for total number of   */
  65:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        time-slices                     */
  66:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    relinquishes                      Destination for total number of   */
  67:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        relinquishes                    */
  68:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    timeouts                          Destination for total number of   */
  69:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        timeouts                        */
  70:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    wait_aborts                       Destination for total number of   */
  71:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        wait aborts                     */
  72:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    non_idle_returns                  Destination for total number of   */
  73:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        times threads return when       */
  74:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        another thread is ready         */
  75:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    idle_returns                      Destination for total number of   */
  76:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        times threads return when no    */
  77:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                        other thread is ready           */
  78:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  79:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  OUTPUT                                                                */
  80:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  81:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    status                            Completion status                 */
  82:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  83:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  CALLS                                                                 */
  84:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  85:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    None                                                                */
  86:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  87:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  CALLED BY                                                             */
  88:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
ARM GAS  /tmp/ccU8QSi2.s 			page 3


  89:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    Application Code                                                    */
  90:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  91:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  RELEASE HISTORY                                                       */
  92:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  93:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*    DATE              NAME                      DESCRIPTION             */
  94:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  95:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  96:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  97:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                            resulting in version 6.1    */
  98:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /*                                                                        */
  99:ThreadX/common/src/tx_thread_performance_system_info_get.c **** /**************************************************************************/
 100:ThreadX/common/src/tx_thread_performance_system_info_get.c **** UINT  _tx_thread_performance_system_info_get(ULONG *resumptions, ULONG *suspensions,
 101:ThreadX/common/src/tx_thread_performance_system_info_get.c ****                 ULONG *solicited_preemptions, ULONG *interrupt_preemptions, ULONG *priority_inversi
 102:ThreadX/common/src/tx_thread_performance_system_info_get.c ****                 ULONG *time_slices, ULONG *relinquishes, ULONG *timeouts, ULONG *wait_aborts,
 103:ThreadX/common/src/tx_thread_performance_system_info_get.c ****                 ULONG *non_idle_returns, ULONG *idle_returns)
 104:ThreadX/common/src/tx_thread_performance_system_info_get.c **** {
  28              		.loc 1 104 0
  29              		.cfi_startproc
  30              		@ args = 28, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 105:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 106:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
 107:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 108:ThreadX/common/src/tx_thread_performance_system_info_get.c **** TX_INTERRUPT_SAVE_AREA
 109:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 110:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 111:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Disable interrupts.  */
 112:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     TX_DISABLE
 113:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 114:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
 115:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_THREAD_PERFORMANCE_SYSTEM_INFO_GET, 0, 0, 0, 0, TX_TRACE_THREA
 116:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 117:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Log this kernel call.  */
 118:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     TX_EL_THREAD_PERFORMANCE_SYSTEM_INFO_GET_INSERT
 119:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 120:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve all the pertinent information and return it in the supplied
 121:ThreadX/common/src/tx_thread_performance_system_info_get.c ****        destinations.  */
 122:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 123:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread resumptions.  */
 124:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (resumptions != TX_NULL)
 125:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 126:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 127:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *resumptions =  _tx_thread_performance_resume_count;
 128:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 129:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 130:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread suspensions.  */
 131:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (suspensions != TX_NULL)
 132:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 133:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 134:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *suspensions =  _tx_thread_performance_suspend_count;
 135:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 136:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 137:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of solicited thread preemptions.  */
 138:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (solicited_preemptions != TX_NULL)
 139:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
ARM GAS  /tmp/ccU8QSi2.s 			page 4


 140:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 141:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *solicited_preemptions =  _tx_thread_performance_solicited_preemption_count;
 142:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 143:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 144:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of interrupt thread preemptions.  */
 145:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (interrupt_preemptions != TX_NULL)
 146:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 147:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 148:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *interrupt_preemptions =  _tx_thread_performance_interrupt_preemption_count;
 149:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 150:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 151:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread priority inversions.  */
 152:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (priority_inversions != TX_NULL)
 153:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 154:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 155:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *priority_inversions =  _tx_thread_performance_priority_inversion_count;
 156:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 157:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 158:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread time-slices.  */
 159:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (time_slices != TX_NULL)
 160:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 161:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 162:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *time_slices =  _tx_thread_performance_time_slice_count;
 163:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 164:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 165:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread relinquishes.  */
 166:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (relinquishes != TX_NULL)
 167:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 168:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 169:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *relinquishes =  _tx_thread_performance_relinquish_count;
 170:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 171:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 172:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread timeouts.  */
 173:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (timeouts != TX_NULL)
 174:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 175:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 176:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *timeouts =  _tx_thread_performance_timeout_count;
 177:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 178:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 179:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread wait aborts.  */
 180:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (wait_aborts != TX_NULL)
 181:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 182:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 183:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *wait_aborts =  _tx_thread_performance_wait_abort_count;
 184:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 185:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 186:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread non-idle system returns.  */
 187:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (non_idle_returns != TX_NULL)
 188:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 189:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 190:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *non_idle_returns =  _tx_thread_performance_non_idle_return_count;
 191:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 192:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 193:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Retrieve total number of thread idle system returns.  */
 194:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (idle_returns != TX_NULL)
 195:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 196:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
ARM GAS  /tmp/ccU8QSi2.s 			page 5


 197:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         *idle_returns =  _tx_thread_performance_idle_return_count;
 198:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 199:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 200:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Restore interrupts.  */
 201:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     TX_RESTORE
 202:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 203:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Return completion status.  */
 204:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     return(TX_SUCCESS);
 205:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 206:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #else
 207:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 208:ThreadX/common/src/tx_thread_performance_system_info_get.c **** UINT        status;
 209:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 210:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 211:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Access input arguments just for the sake of lint, MISRA, etc.  */
 212:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     if (resumptions != TX_NULL)
 213:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 214:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 215:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 216:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 217:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 218:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (suspensions != TX_NULL)
 219:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 220:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 221:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 222:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 223:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 224:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (solicited_preemptions != TX_NULL)
 225:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 226:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 227:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 228:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 229:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 230:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (interrupt_preemptions != TX_NULL)
 231:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 232:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 233:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 234:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 235:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 236:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (priority_inversions != TX_NULL)
 237:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 238:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 239:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 240:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 241:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 242:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (time_slices != TX_NULL)
 243:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 244:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 245:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 246:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 247:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 248:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (relinquishes != TX_NULL)
 249:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 250:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 251:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 252:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 253:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
ARM GAS  /tmp/ccU8QSi2.s 			page 6


 254:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (timeouts != TX_NULL)
 255:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 256:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 257:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 258:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 259:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 260:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (wait_aborts != TX_NULL)
 261:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 262:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 263:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 264:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 265:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 266:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (non_idle_returns != TX_NULL)
 267:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 268:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 269:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 270:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 271:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 272:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else if (idle_returns != TX_NULL)
 273:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 274:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 275:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 276:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 277:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 278:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     else
 279:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     {
 280:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 281:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         /* Not enabled, return error.  */
 282:ThreadX/common/src/tx_thread_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 283:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     }
 284:ThreadX/common/src/tx_thread_performance_system_info_get.c **** 
 285:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     /* Return completion status.  */
 286:ThreadX/common/src/tx_thread_performance_system_info_get.c ****     return(status);
 287:ThreadX/common/src/tx_thread_performance_system_info_get.c **** #endif
 288:ThreadX/common/src/tx_thread_performance_system_info_get.c **** }
  34              		.loc 1 288 0
  35 0000 FF20     		movs	r0, #255
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE8:
  41              		.text
  42              	.Letext0:
  43              		.file 2 "/usr/include/newlib/sys/lock.h"
  44              		.file 3 "/usr/include/newlib/sys/_types.h"
  45              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  46              		.file 5 "/usr/include/newlib/sys/reent.h"
  47              		.file 6 "/usr/include/newlib/stdlib.h"
  48              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  49              		.file 8 "ThreadX/common/inc/tx_api.h"
  50              		.file 9 "ThreadX/common/inc/tx_thread.h"
ARM GAS  /tmp/ccU8QSi2.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_thread_performance_system_info_get.c
     /tmp/ccU8QSi2.s:18     .text._tx_thread_performance_system_info_get:0000000000000000 $t
     /tmp/ccU8QSi2.s:25     .text._tx_thread_performance_system_info_get:0000000000000000 _tx_thread_performance_system_info_get

NO UNDEFINED SYMBOLS
