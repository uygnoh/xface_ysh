ARM GAS  /tmp/ccIhZ0uZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_timer_system_deactivate.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_timer_system_deactivate,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_timer_system_deactivate
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_timer_system_deactivate:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_timer_system_deactivate.c"
   1:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
   3:ThreadX/common/src/tx_timer_system_deactivate.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
   5:ThreadX/common/src/tx_timer_system_deactivate.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_timer_system_deactivate.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_timer_system_deactivate.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_timer_system_deactivate.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  10:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  12:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  13:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_timer_system_deactivate.c **** /**                                                                       */
  16:ThreadX/common/src/tx_timer_system_deactivate.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_timer_system_deactivate.c **** /**                                                                       */
  18:ThreadX/common/src/tx_timer_system_deactivate.c **** /**   Timer                                                               */
  19:ThreadX/common/src/tx_timer_system_deactivate.c **** /**                                                                       */
  20:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  23:ThreadX/common/src/tx_timer_system_deactivate.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  25:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  26:ThreadX/common/src/tx_timer_system_deactivate.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  28:ThreadX/common/src/tx_timer_system_deactivate.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_timer_system_deactivate.c **** #include "tx_timer.h"
  30:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  31:ThreadX/common/src/tx_timer_system_deactivate.c **** 
ARM GAS  /tmp/ccIhZ0uZ.s 			page 2


  32:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  33:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  34:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  FUNCTION                                               RELEASE        */
  35:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  36:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    _tx_timer_system_deactivate                         PORTABLE C      */
  37:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                           6.1          */
  38:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  AUTHOR                                                                */
  39:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  40:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    William E. Lamie, Microsoft Corporation                             */
  41:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  42:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  DESCRIPTION                                                           */
  43:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  44:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    This function deactivates, or removes the timer from the active     */
  45:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    timer expiration list.  If the timer is already deactivated, this   */
  46:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    function just returns.                                              */
  47:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  48:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  INPUT                                                                 */
  49:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  50:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    timer_ptr                         Pointer to timer control block    */
  51:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  52:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  OUTPUT                                                                */
  53:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  54:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    TX_SUCCESS                        Always returns success            */
  55:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  56:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  CALLS                                                                 */
  57:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  58:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    None                                                                */
  59:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  60:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  CALLED BY                                                             */
  61:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  62:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    _tx_thread_system_resume          Thread resume function            */
  63:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    _tx_timer_thread_entry            Timer thread processing           */
  64:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  65:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  RELEASE HISTORY                                                       */
  66:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  67:ThreadX/common/src/tx_timer_system_deactivate.c **** /*    DATE              NAME                      DESCRIPTION             */
  68:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  69:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  70:ThreadX/common/src/tx_timer_system_deactivate.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  71:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                            resulting in version 6.1    */
  72:ThreadX/common/src/tx_timer_system_deactivate.c **** /*                                                                        */
  73:ThreadX/common/src/tx_timer_system_deactivate.c **** /**************************************************************************/
  74:ThreadX/common/src/tx_timer_system_deactivate.c **** VOID  _tx_timer_system_deactivate(TX_TIMER_INTERNAL *timer_ptr)
  75:ThreadX/common/src/tx_timer_system_deactivate.c **** {
  28              		.loc 1 75 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  76:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  77:ThreadX/common/src/tx_timer_system_deactivate.c **** TX_TIMER_INTERNAL   **list_head;
  78:ThreadX/common/src/tx_timer_system_deactivate.c **** TX_TIMER_INTERNAL   *next_timer;
  79:ThreadX/common/src/tx_timer_system_deactivate.c **** TX_TIMER_INTERNAL   *previous_timer;
  80:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  81:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  82:ThreadX/common/src/tx_timer_system_deactivate.c ****     /* Pickup the list head pointer.  */
ARM GAS  /tmp/ccIhZ0uZ.s 			page 3


  83:ThreadX/common/src/tx_timer_system_deactivate.c ****     list_head =  timer_ptr -> tx_timer_internal_list_head;
  34              		.loc 1 83 0
  35 0000 8369     		ldr	r3, [r0, #24]
  36              	.LVL1:
  84:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  85:ThreadX/common/src/tx_timer_system_deactivate.c ****     /* Determine if the timer still needs deactivation.  */
  86:ThreadX/common/src/tx_timer_system_deactivate.c ****     if (list_head != TX_NULL)
  37              		.loc 1 86 0
  38 0002 53B1     		cbz	r3, .L1
  87:ThreadX/common/src/tx_timer_system_deactivate.c ****     {
  88:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  89:ThreadX/common/src/tx_timer_system_deactivate.c ****         /* Deactivate the timer.  */
  90:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  91:ThreadX/common/src/tx_timer_system_deactivate.c ****         /* Pickup the next active timer.  */
  92:ThreadX/common/src/tx_timer_system_deactivate.c ****         next_timer =  timer_ptr -> tx_timer_internal_active_next;
  39              		.loc 1 92 0
  40 0004 0269     		ldr	r2, [r0, #16]
  41              	.LVL2:
  93:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  94:ThreadX/common/src/tx_timer_system_deactivate.c ****         /* See if this is the only timer in the list.  */
  95:ThreadX/common/src/tx_timer_system_deactivate.c ****         if (timer_ptr == next_timer)
  42              		.loc 1 95 0
  43 0006 9042     		cmp	r0, r2
  44 0008 08D0     		beq	.L5
  96:ThreadX/common/src/tx_timer_system_deactivate.c ****         {
  97:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  98:ThreadX/common/src/tx_timer_system_deactivate.c ****             /* Yes, the only timer on the list.  */
  99:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 100:ThreadX/common/src/tx_timer_system_deactivate.c ****             /* Determine if the head pointer needs to be updated.  */
 101:ThreadX/common/src/tx_timer_system_deactivate.c ****             if (*(list_head) == timer_ptr)
 102:ThreadX/common/src/tx_timer_system_deactivate.c ****             {
 103:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 104:ThreadX/common/src/tx_timer_system_deactivate.c ****                 /* Update the head pointer.  */
 105:ThreadX/common/src/tx_timer_system_deactivate.c ****                 *(list_head) =  TX_NULL;
 106:ThreadX/common/src/tx_timer_system_deactivate.c ****             }
 107:ThreadX/common/src/tx_timer_system_deactivate.c ****         }
 108:ThreadX/common/src/tx_timer_system_deactivate.c ****         else
 109:ThreadX/common/src/tx_timer_system_deactivate.c ****         {
 110:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 111:ThreadX/common/src/tx_timer_system_deactivate.c ****             /* At least one more timer is on the same expiration list.  */
 112:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 113:ThreadX/common/src/tx_timer_system_deactivate.c ****             /* Update the links of the adjacent timers.  */
 114:ThreadX/common/src/tx_timer_system_deactivate.c ****             previous_timer =                                   timer_ptr -> tx_timer_internal_activ
  45              		.loc 1 114 0
  46 000a 4169     		ldr	r1, [r0, #20]
  47              	.LVL3:
 115:ThreadX/common/src/tx_timer_system_deactivate.c ****             next_timer -> tx_timer_internal_active_previous =  previous_timer;
  48              		.loc 1 115 0
  49 000c 5161     		str	r1, [r2, #20]
 116:ThreadX/common/src/tx_timer_system_deactivate.c ****             previous_timer -> tx_timer_internal_active_next =  next_timer;
  50              		.loc 1 116 0
  51 000e 0A61     		str	r2, [r1, #16]
 117:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 118:ThreadX/common/src/tx_timer_system_deactivate.c ****             /* Determine if the head pointer needs to be updated.  */
 119:ThreadX/common/src/tx_timer_system_deactivate.c ****             if (*(list_head) == timer_ptr)
  52              		.loc 1 119 0
  53 0010 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccIhZ0uZ.s 			page 4


  54              	.LVL4:
  55 0012 8142     		cmp	r1, r0
  56 0014 08D0     		beq	.L6
  57              	.LVL5:
  58              	.L4:
 120:ThreadX/common/src/tx_timer_system_deactivate.c ****             {
 121:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 122:ThreadX/common/src/tx_timer_system_deactivate.c ****                 /* Update the next timer in the list with the list head pointer.  */
 123:ThreadX/common/src/tx_timer_system_deactivate.c ****                 next_timer -> tx_timer_internal_list_head =  list_head;
 124:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 125:ThreadX/common/src/tx_timer_system_deactivate.c ****                 /* Update the head pointer.  */
 126:ThreadX/common/src/tx_timer_system_deactivate.c ****                 *(list_head) =  next_timer;
 127:ThreadX/common/src/tx_timer_system_deactivate.c ****             }
 128:ThreadX/common/src/tx_timer_system_deactivate.c ****         }
 129:ThreadX/common/src/tx_timer_system_deactivate.c **** 
 130:ThreadX/common/src/tx_timer_system_deactivate.c ****         /* Clear the timer's list head pointer.  */
 131:ThreadX/common/src/tx_timer_system_deactivate.c ****         timer_ptr -> tx_timer_internal_list_head =  TX_NULL;
  59              		.loc 1 131 0
  60 0016 0023     		movs	r3, #0
  61              	.LVL6:
  62 0018 8361     		str	r3, [r0, #24]
  63              	.L1:
 132:ThreadX/common/src/tx_timer_system_deactivate.c ****     }
 133:ThreadX/common/src/tx_timer_system_deactivate.c **** }
  64              		.loc 1 133 0
  65 001a 7047     		bx	lr
  66              	.LVL7:
  67              	.L5:
 101:ThreadX/common/src/tx_timer_system_deactivate.c ****             {
  68              		.loc 1 101 0
  69 001c 1A68     		ldr	r2, [r3]
  70              	.LVL8:
  71 001e 8242     		cmp	r2, r0
  72 0020 F9D1     		bne	.L4
 105:ThreadX/common/src/tx_timer_system_deactivate.c ****             }
  73              		.loc 1 105 0
  74 0022 0022     		movs	r2, #0
  75 0024 1A60     		str	r2, [r3]
  76              	.LVL9:
  77 0026 F6E7     		b	.L4
  78              	.LVL10:
  79              	.L6:
 123:ThreadX/common/src/tx_timer_system_deactivate.c **** 
  80              		.loc 1 123 0
  81 0028 9361     		str	r3, [r2, #24]
 126:ThreadX/common/src/tx_timer_system_deactivate.c ****             }
  82              		.loc 1 126 0
  83 002a 1A60     		str	r2, [r3]
  84 002c F3E7     		b	.L4
  85              		.cfi_endproc
  86              	.LFE8:
  88              		.text
  89              	.Letext0:
  90              		.file 2 "/usr/include/newlib/sys/lock.h"
  91              		.file 3 "/usr/include/newlib/sys/_types.h"
  92              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  93              		.file 5 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccIhZ0uZ.s 			page 5


  94              		.file 6 "/usr/include/newlib/stdlib.h"
  95              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  96              		.file 8 "ThreadX/common/inc/tx_api.h"
  97              		.file 9 "ThreadX/common/inc/tx_timer.h"
ARM GAS  /tmp/ccIhZ0uZ.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_timer_system_deactivate.c
     /tmp/ccIhZ0uZ.s:18     .text._tx_timer_system_deactivate:0000000000000000 $t
     /tmp/ccIhZ0uZ.s:25     .text._tx_timer_system_deactivate:0000000000000000 _tx_timer_system_deactivate

NO UNDEFINED SYMBOLS
