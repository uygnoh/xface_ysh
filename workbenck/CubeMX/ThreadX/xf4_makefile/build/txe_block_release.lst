ARM GAS  /tmp/ccP8RLMX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"txe_block_release.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._txe_block_release,"ax",%progbits
  18              		.align	1
  19              		.global	_txe_block_release
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_txe_block_release:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/txe_block_release.c"
   1:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
   2:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
   3:ThreadX/common/src/txe_block_release.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
   5:ThreadX/common/src/txe_block_release.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/txe_block_release.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/txe_block_release.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/txe_block_release.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  10:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  11:ThreadX/common/src/txe_block_release.c **** 
  12:ThreadX/common/src/txe_block_release.c **** 
  13:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  14:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  15:ThreadX/common/src/txe_block_release.c **** /**                                                                       */
  16:ThreadX/common/src/txe_block_release.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/txe_block_release.c **** /**                                                                       */
  18:ThreadX/common/src/txe_block_release.c **** /**   Block Pool                                                          */
  19:ThreadX/common/src/txe_block_release.c **** /**                                                                       */
  20:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  21:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  22:ThreadX/common/src/txe_block_release.c **** 
  23:ThreadX/common/src/txe_block_release.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/txe_block_release.c **** 
  25:ThreadX/common/src/txe_block_release.c **** 
  26:ThreadX/common/src/txe_block_release.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/txe_block_release.c **** 
  28:ThreadX/common/src/txe_block_release.c **** #include "tx_api.h"
  29:ThreadX/common/src/txe_block_release.c **** #include "tx_block_pool.h"
  30:ThreadX/common/src/txe_block_release.c **** 
  31:ThreadX/common/src/txe_block_release.c **** 
ARM GAS  /tmp/ccP8RLMX.s 			page 2


  32:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  33:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  34:ThreadX/common/src/txe_block_release.c **** /*  FUNCTION                                               RELEASE        */
  35:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  36:ThreadX/common/src/txe_block_release.c **** /*    _txe_block_release                                  PORTABLE C      */
  37:ThreadX/common/src/txe_block_release.c **** /*                                                           6.1          */
  38:ThreadX/common/src/txe_block_release.c **** /*  AUTHOR                                                                */
  39:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  40:ThreadX/common/src/txe_block_release.c **** /*    William E. Lamie, Microsoft Corporation                             */
  41:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  42:ThreadX/common/src/txe_block_release.c **** /*  DESCRIPTION                                                           */
  43:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  44:ThreadX/common/src/txe_block_release.c **** /*    This function checks for errors in the block release function call. */
  45:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  46:ThreadX/common/src/txe_block_release.c **** /*  INPUT                                                                 */
  47:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  48:ThreadX/common/src/txe_block_release.c **** /*    block_ptr                         Pointer to memory block           */
  49:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  50:ThreadX/common/src/txe_block_release.c **** /*  OUTPUT                                                                */
  51:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  52:ThreadX/common/src/txe_block_release.c **** /*    TX_PTR_ERROR                      Invalid memory block pointer      */
  53:ThreadX/common/src/txe_block_release.c **** /*    status                            Actual completion status          */
  54:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  55:ThreadX/common/src/txe_block_release.c **** /*  CALLS                                                                 */
  56:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  57:ThreadX/common/src/txe_block_release.c **** /*    _tx_block_release                 Actual block release function     */
  58:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  59:ThreadX/common/src/txe_block_release.c **** /*  CALLED BY                                                             */
  60:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  61:ThreadX/common/src/txe_block_release.c **** /*    Application Code                                                    */
  62:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  63:ThreadX/common/src/txe_block_release.c **** /*  RELEASE HISTORY                                                       */
  64:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  65:ThreadX/common/src/txe_block_release.c **** /*    DATE              NAME                      DESCRIPTION             */
  66:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  67:ThreadX/common/src/txe_block_release.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  68:ThreadX/common/src/txe_block_release.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  69:ThreadX/common/src/txe_block_release.c **** /*                                            resulting in version 6.1    */
  70:ThreadX/common/src/txe_block_release.c **** /*                                                                        */
  71:ThreadX/common/src/txe_block_release.c **** /**************************************************************************/
  72:ThreadX/common/src/txe_block_release.c **** UINT  _txe_block_release(VOID *block_ptr)
  73:ThreadX/common/src/txe_block_release.c **** {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  74:ThreadX/common/src/txe_block_release.c **** 
  75:ThreadX/common/src/txe_block_release.c **** UINT                status;
  76:ThreadX/common/src/txe_block_release.c **** TX_BLOCK_POOL       *pool_ptr;
  77:ThreadX/common/src/txe_block_release.c **** UCHAR               **indirect_ptr;
  78:ThreadX/common/src/txe_block_release.c **** UCHAR               *work_ptr;
  79:ThreadX/common/src/txe_block_release.c **** 
  80:ThreadX/common/src/txe_block_release.c **** 
  81:ThreadX/common/src/txe_block_release.c ****     /* First check the supplied pointer.  */
  82:ThreadX/common/src/txe_block_release.c ****     if (block_ptr == TX_NULL)
  33              		.loc 1 82 0
ARM GAS  /tmp/ccP8RLMX.s 			page 3


  34 0000 60B1     		cbz	r0, .L3
  73:ThreadX/common/src/txe_block_release.c **** 
  35              		.loc 1 73 0
  36 0002 08B5     		push	{r3, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 3, -8
  40              		.cfi_offset 14, -4
  41              	.LVL1:
  83:ThreadX/common/src/txe_block_release.c ****     {
  84:ThreadX/common/src/txe_block_release.c **** 
  85:ThreadX/common/src/txe_block_release.c ****         /* The block pointer is invalid, return appropriate status.  */
  86:ThreadX/common/src/txe_block_release.c ****         status =  TX_PTR_ERROR;
  87:ThreadX/common/src/txe_block_release.c ****     }
  88:ThreadX/common/src/txe_block_release.c ****     else
  89:ThreadX/common/src/txe_block_release.c ****     {
  90:ThreadX/common/src/txe_block_release.c **** 
  91:ThreadX/common/src/txe_block_release.c ****         /* Pickup the pool pointer which is just previous to the starting
  92:ThreadX/common/src/txe_block_release.c ****            address of block that the caller sees.  */
  93:ThreadX/common/src/txe_block_release.c ****         work_ptr =      TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
  94:ThreadX/common/src/txe_block_release.c ****         work_ptr =      TX_UCHAR_POINTER_SUB(work_ptr, (sizeof(UCHAR *)));
  95:ThreadX/common/src/txe_block_release.c ****         indirect_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
  96:ThreadX/common/src/txe_block_release.c ****         work_ptr =      *indirect_ptr;
  42              		.loc 1 96 0
  43 0004 50F8042C 		ldr	r2, [r0, #-4]
  44              	.LVL2:
  97:ThreadX/common/src/txe_block_release.c ****         pool_ptr =      TX_UCHAR_TO_BLOCK_POOL_POINTER_CONVERT(work_ptr);
  98:ThreadX/common/src/txe_block_release.c **** 
  99:ThreadX/common/src/txe_block_release.c ****         /* Check for an invalid pool pointer.  */
 100:ThreadX/common/src/txe_block_release.c ****         if (pool_ptr == TX_NULL)
  45              		.loc 1 100 0
  46 0008 52B1     		cbz	r2, .L4
 101:ThreadX/common/src/txe_block_release.c ****         {
 102:ThreadX/common/src/txe_block_release.c **** 
 103:ThreadX/common/src/txe_block_release.c ****             /* Pool pointer is invalid, return appropriate error code.  */
 104:ThreadX/common/src/txe_block_release.c ****             status =  TX_PTR_ERROR;
 105:ThreadX/common/src/txe_block_release.c ****         }
 106:ThreadX/common/src/txe_block_release.c **** 
 107:ThreadX/common/src/txe_block_release.c ****         /* Now check for invalid pool ID.  */
 108:ThreadX/common/src/txe_block_release.c ****         else if  (pool_ptr -> tx_block_pool_id != TX_BLOCK_POOL_ID)
  47              		.loc 1 108 0
  48 000a 1168     		ldr	r1, [r2]
  49 000c 054A     		ldr	r2, .L11
  50              	.LVL3:
  51 000e 9142     		cmp	r1, r2
  52 0010 01D0     		beq	.L10
 109:ThreadX/common/src/txe_block_release.c ****         {
 110:ThreadX/common/src/txe_block_release.c **** 
 111:ThreadX/common/src/txe_block_release.c ****             /* Pool pointer is invalid, return appropriate error code.  */
 112:ThreadX/common/src/txe_block_release.c ****             status =  TX_PTR_ERROR;
  53              		.loc 1 112 0
  54 0012 0320     		movs	r0, #3
  55              	.LVL4:
  56              	.L1:
 113:ThreadX/common/src/txe_block_release.c ****         }
 114:ThreadX/common/src/txe_block_release.c ****         else
 115:ThreadX/common/src/txe_block_release.c ****         {
ARM GAS  /tmp/ccP8RLMX.s 			page 4


 116:ThreadX/common/src/txe_block_release.c **** 
 117:ThreadX/common/src/txe_block_release.c ****             /* Call actual block release function.  */
 118:ThreadX/common/src/txe_block_release.c ****             status =  _tx_block_release(block_ptr);
 119:ThreadX/common/src/txe_block_release.c ****         }
 120:ThreadX/common/src/txe_block_release.c ****     }
 121:ThreadX/common/src/txe_block_release.c **** 
 122:ThreadX/common/src/txe_block_release.c ****     /* Return completion status.  */
 123:ThreadX/common/src/txe_block_release.c ****     return(status);
 124:ThreadX/common/src/txe_block_release.c **** }
  57              		.loc 1 124 0
  58 0014 08BD     		pop	{r3, pc}
  59              	.LVL5:
  60              	.L10:
 118:ThreadX/common/src/txe_block_release.c ****         }
  61              		.loc 1 118 0
  62 0016 FFF7FEFF 		bl	_tx_block_release
  63              	.LVL6:
  64 001a FBE7     		b	.L1
  65              	.LVL7:
  66              	.L3:
  67              	.LCFI1:
  68              		.cfi_def_cfa_offset 0
  69              		.cfi_restore 3
  70              		.cfi_restore 14
  86:ThreadX/common/src/txe_block_release.c ****     }
  71              		.loc 1 86 0
  72 001c 0320     		movs	r0, #3
  73              	.LVL8:
  74              		.loc 1 124 0
  75 001e 7047     		bx	lr
  76              	.LVL9:
  77              	.L4:
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 104:ThreadX/common/src/txe_block_release.c ****         }
  82              		.loc 1 104 0
  83 0020 0320     		movs	r0, #3
  84              	.LVL10:
  85 0022 F7E7     		b	.L1
  86              	.L12:
  87              		.align	2
  88              	.L11:
  89 0024 434F4C42 		.word	1112297283
  90              		.cfi_endproc
  91              	.LFE8:
  93              		.text
  94              	.Letext0:
  95              		.file 2 "/usr/include/newlib/sys/lock.h"
  96              		.file 3 "/usr/include/newlib/sys/_types.h"
  97              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  98              		.file 5 "/usr/include/newlib/sys/reent.h"
  99              		.file 6 "/usr/include/newlib/stdlib.h"
 100              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
 101              		.file 8 "ThreadX/common/inc/tx_api.h"
 102              		.file 9 "ThreadX/common/inc/tx_block_pool.h"
ARM GAS  /tmp/ccP8RLMX.s 			page 5


ARM GAS  /tmp/ccP8RLMX.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 txe_block_release.c
     /tmp/ccP8RLMX.s:18     .text._txe_block_release:0000000000000000 $t
     /tmp/ccP8RLMX.s:25     .text._txe_block_release:0000000000000000 _txe_block_release
     /tmp/ccP8RLMX.s:89     .text._txe_block_release:0000000000000024 $d

UNDEFINED SYMBOLS
_tx_block_release
