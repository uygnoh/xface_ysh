ARM GAS  /tmp/cc3cqxsi.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_initialize_kernel_setup.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_initialize_kernel_setup,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_initialize_kernel_setup
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_initialize_kernel_setup:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_initialize_kernel_setup.c"
   1:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
   3:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
   5:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  10:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  12:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  13:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**                                                                       */
  16:ThreadX/common/src/tx_initialize_kernel_setup.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**                                                                       */
  18:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**   Initialize                                                          */
  19:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**                                                                       */
  20:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  23:ThreadX/common/src/tx_initialize_kernel_setup.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  25:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  26:ThreadX/common/src/tx_initialize_kernel_setup.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  28:ThreadX/common/src/tx_initialize_kernel_setup.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_initialize_kernel_setup.c **** #include "tx_initialize.h"
  30:ThreadX/common/src/tx_initialize_kernel_setup.c **** #include "tx_thread.h"
  31:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
ARM GAS  /tmp/cc3cqxsi.s 			page 2


  32:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  33:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  34:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  35:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  FUNCTION                                               RELEASE        */
  36:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  37:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    _tx_initialize_kernel_setup                         PORTABLE C      */
  38:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                           6.1          */
  39:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  AUTHOR                                                                */
  40:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  41:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    William E. Lamie, Microsoft Corporation                             */
  42:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  43:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  DESCRIPTION                                                           */
  44:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  45:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    This function is called by the compiler's startup code to make      */
  46:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    ThreadX objects accessible to the compiler's library.  If this      */
  47:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    function is not called by the compiler, all ThreadX initialization  */
  48:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    takes place from the kernel enter function defined previously.      */
  49:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  50:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  INPUT                                                                 */
  51:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  52:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    None                                                                */
  53:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  54:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  OUTPUT                                                                */
  55:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  56:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    None                                                                */
  57:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  58:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  CALLS                                                                 */
  59:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  60:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    _tx_initialize_low_level          Low-level initialization          */
  61:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    _tx_initialize_high_level         High-level initialization         */
  62:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  63:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  CALLED BY                                                             */
  64:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  65:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    startup code                      Compiler startup code             */
  66:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  67:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  RELEASE HISTORY                                                       */
  68:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  69:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*    DATE              NAME                      DESCRIPTION             */
  70:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  71:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  72:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  73:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                            resulting in version 6.1    */
  74:ThreadX/common/src/tx_initialize_kernel_setup.c **** /*                                                                        */
  75:ThreadX/common/src/tx_initialize_kernel_setup.c **** /**************************************************************************/
  76:ThreadX/common/src/tx_initialize_kernel_setup.c **** VOID  _tx_initialize_kernel_setup(VOID)
  77:ThreadX/common/src/tx_initialize_kernel_setup.c **** {
  28              		.loc 1 77 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  78:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  79:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Ensure that the system state variable is set to indicate
ARM GAS  /tmp/cc3cqxsi.s 			page 3


  80:ThreadX/common/src/tx_initialize_kernel_setup.c ****        initialization is in progress.  Note that this variable is
  81:ThreadX/common/src/tx_initialize_kernel_setup.c ****        later used to represent interrupt nesting.  */
  82:ThreadX/common/src/tx_initialize_kernel_setup.c ****     _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
  37              		.loc 1 82 0
  38 0002 074C     		ldr	r4, .L3
  39 0004 4FF0F033 		mov	r3, #-252645136
  40 0008 2360     		str	r3, [r4]
  83:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  84:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Call any port specific preprocessing.  */
  85:ThreadX/common/src/tx_initialize_kernel_setup.c ****     TX_PORT_SPECIFIC_PRE_INITIALIZATION
  86:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  87:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Invoke the low-level initialization to handle all processor specific
  88:ThreadX/common/src/tx_initialize_kernel_setup.c ****        initialization issues.  */
  89:ThreadX/common/src/tx_initialize_kernel_setup.c ****     _tx_initialize_low_level();
  41              		.loc 1 89 0
  42 000a FFF7FEFF 		bl	_tx_initialize_low_level
  43              	.LVL0:
  90:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  91:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Invoke the high-level initialization to exercise all of the
  92:ThreadX/common/src/tx_initialize_kernel_setup.c ****        ThreadX components and the application's initialization
  93:ThreadX/common/src/tx_initialize_kernel_setup.c ****        function.  */
  94:ThreadX/common/src/tx_initialize_kernel_setup.c ****     _tx_initialize_high_level();
  44              		.loc 1 94 0
  45 000e FFF7FEFF 		bl	_tx_initialize_high_level
  46              	.LVL1:
  95:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  96:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Call any port specific post-processing.  */
  97:ThreadX/common/src/tx_initialize_kernel_setup.c ****     TX_PORT_SPECIFIC_POST_INITIALIZATION
  47              		.loc 1 97 0
  48 0012 044A     		ldr	r2, .L3+4
  49 0014 1368     		ldr	r3, [r2]
  50 0016 0133     		adds	r3, r3, #1
  51 0018 1360     		str	r3, [r2]
  98:ThreadX/common/src/tx_initialize_kernel_setup.c **** 
  99:ThreadX/common/src/tx_initialize_kernel_setup.c ****     /* Set the system state to indicate initialization is almost done.  */
 100:ThreadX/common/src/tx_initialize_kernel_setup.c ****     _tx_thread_system_state =  TX_INITIALIZE_ALMOST_DONE;
  52              		.loc 1 100 0
  53 001a 034B     		ldr	r3, .L3+8
  54 001c 2360     		str	r3, [r4]
 101:ThreadX/common/src/tx_initialize_kernel_setup.c **** }
  55              		.loc 1 101 0
  56 001e 10BD     		pop	{r4, pc}
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0020 00000000 		.word	_tx_thread_system_state
  61 0024 00000000 		.word	_tx_thread_preempt_disable
  62 0028 F1F0F0F0 		.word	-252645135
  63              		.cfi_endproc
  64              	.LFE8:
  66              		.text
  67              	.Letext0:
  68              		.file 2 "/usr/include/newlib/sys/lock.h"
  69              		.file 3 "/usr/include/newlib/sys/_types.h"
  70              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  71              		.file 5 "/usr/include/newlib/sys/reent.h"
  72              		.file 6 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/cc3cqxsi.s 			page 4


  73              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  74              		.file 8 "ThreadX/common/inc/tx_api.h"
  75              		.file 9 "ThreadX/common/inc/tx_initialize.h"
  76              		.file 10 "ThreadX/common/inc/tx_thread.h"
ARM GAS  /tmp/cc3cqxsi.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_initialize_kernel_setup.c
     /tmp/cc3cqxsi.s:18     .text._tx_initialize_kernel_setup:0000000000000000 $t
     /tmp/cc3cqxsi.s:25     .text._tx_initialize_kernel_setup:0000000000000000 _tx_initialize_kernel_setup
     /tmp/cc3cqxsi.s:60     .text._tx_initialize_kernel_setup:0000000000000020 $d

UNDEFINED SYMBOLS
_tx_initialize_low_level
_tx_initialize_high_level
_tx_thread_system_state
_tx_thread_preempt_disable
