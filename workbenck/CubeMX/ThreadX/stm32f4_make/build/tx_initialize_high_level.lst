ARM GAS  /tmp/cc3RYV5V.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_initialize_high_level.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_initialize_high_level,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_initialize_high_level
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_initialize_high_level:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_initialize_high_level.c"
   1:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
   3:ThreadX/common/src/tx_initialize_high_level.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
   5:ThreadX/common/src/tx_initialize_high_level.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_initialize_high_level.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_initialize_high_level.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_initialize_high_level.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  10:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_initialize_high_level.c **** 
  12:ThreadX/common/src/tx_initialize_high_level.c **** 
  13:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_initialize_high_level.c **** /**                                                                       */
  16:ThreadX/common/src/tx_initialize_high_level.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_initialize_high_level.c **** /**                                                                       */
  18:ThreadX/common/src/tx_initialize_high_level.c **** /**   Initialize                                                          */
  19:ThreadX/common/src/tx_initialize_high_level.c **** /**                                                                       */
  20:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_initialize_high_level.c **** 
  23:ThreadX/common/src/tx_initialize_high_level.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_initialize_high_level.c **** 
  25:ThreadX/common/src/tx_initialize_high_level.c **** 
  26:ThreadX/common/src/tx_initialize_high_level.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_initialize_high_level.c **** 
  28:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_trace.h"
  30:ThreadX/common/src/tx_initialize_high_level.c **** 
  31:ThreadX/common/src/tx_initialize_high_level.c **** /* Determine if in-line initialization is required.  */
ARM GAS  /tmp/cc3RYV5V.s 			page 2


  32:ThreadX/common/src/tx_initialize_high_level.c **** #ifdef TX_INLINE_INITIALIZATION
  33:ThreadX/common/src/tx_initialize_high_level.c **** #define TX_INVOKE_INLINE_INITIALIZATION
  34:ThreadX/common/src/tx_initialize_high_level.c **** #endif
  35:ThreadX/common/src/tx_initialize_high_level.c **** 
  36:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_initialize.h"
  37:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_thread.h"
  38:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_timer.h"
  39:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_semaphore.h"
  40:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_queue.h"
  41:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_event_flags.h"
  42:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_mutex.h"
  43:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_block_pool.h"
  44:ThreadX/common/src/tx_initialize_high_level.c **** #include "tx_byte_pool.h"
  45:ThreadX/common/src/tx_initialize_high_level.c **** 
  46:ThreadX/common/src/tx_initialize_high_level.c **** 
  47:ThreadX/common/src/tx_initialize_high_level.c **** /* Define the unused memory pointer.  The value of the first available
  48:ThreadX/common/src/tx_initialize_high_level.c ****    memory address is placed in this variable in the low-level
  49:ThreadX/common/src/tx_initialize_high_level.c ****    initialization function.  The content of this variable is passed
  50:ThreadX/common/src/tx_initialize_high_level.c ****    to the application's system definition function.  */
  51:ThreadX/common/src/tx_initialize_high_level.c **** 
  52:ThreadX/common/src/tx_initialize_high_level.c **** VOID     *_tx_initialize_unused_memory;
  53:ThreadX/common/src/tx_initialize_high_level.c **** 
  54:ThreadX/common/src/tx_initialize_high_level.c **** 
  55:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
  56:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  57:ThreadX/common/src/tx_initialize_high_level.c **** /*  FUNCTION                                               RELEASE        */
  58:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  59:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_initialize_high_level                           PORTABLE C      */
  60:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                           6.1          */
  61:ThreadX/common/src/tx_initialize_high_level.c **** /*  AUTHOR                                                                */
  62:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  63:ThreadX/common/src/tx_initialize_high_level.c **** /*    William E. Lamie, Microsoft Corporation                             */
  64:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  65:ThreadX/common/src/tx_initialize_high_level.c **** /*  DESCRIPTION                                                           */
  66:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  67:ThreadX/common/src/tx_initialize_high_level.c **** /*    This function is responsible for initializing all of the other      */
  68:ThreadX/common/src/tx_initialize_high_level.c **** /*    components in the ThreadX real-time kernel.                         */
  69:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  70:ThreadX/common/src/tx_initialize_high_level.c **** /*  INPUT                                                                 */
  71:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  72:ThreadX/common/src/tx_initialize_high_level.c **** /*    None                                                                */
  73:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  74:ThreadX/common/src/tx_initialize_high_level.c **** /*  OUTPUT                                                                */
  75:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  76:ThreadX/common/src/tx_initialize_high_level.c **** /*    None                                                                */
  77:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  78:ThreadX/common/src/tx_initialize_high_level.c **** /*  CALLS                                                                 */
  79:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  80:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_thread_initialize             Initialize the thread control     */
  81:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  82:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_timer_initialize              Initialize the timer control      */
  83:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  84:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_semaphore_initialize          Initialize the semaphore control  */
  85:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  86:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_queue_initialize              Initialize the queue control      */
  87:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  88:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_event_flags_initialize        Initialize the event flags control*/
ARM GAS  /tmp/cc3RYV5V.s 			page 3


  89:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  90:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_block_pool_initialize         Initialize the block pool control */
  91:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  92:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_byte_pool_initialize          Initialize the byte pool control  */
  93:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  94:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_mutex_initialize              Initialize the mutex control      */
  95:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        component                       */
  96:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  97:ThreadX/common/src/tx_initialize_high_level.c **** /*  CALLED BY                                                             */
  98:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
  99:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_initialize_kernel_enter       Kernel entry function             */
 100:ThreadX/common/src/tx_initialize_high_level.c **** /*    _tx_initialize_kernel_setup       Early kernel setup function that  */
 101:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        is optionally called by         */
 102:ThreadX/common/src/tx_initialize_high_level.c **** /*                                        compiler's startup code.        */
 103:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
 104:ThreadX/common/src/tx_initialize_high_level.c **** /*  RELEASE HISTORY                                                       */
 105:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
 106:ThreadX/common/src/tx_initialize_high_level.c **** /*    DATE              NAME                      DESCRIPTION             */
 107:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
 108:ThreadX/common/src/tx_initialize_high_level.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
 109:ThreadX/common/src/tx_initialize_high_level.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
 110:ThreadX/common/src/tx_initialize_high_level.c **** /*                                            resulting in version 6.1    */
 111:ThreadX/common/src/tx_initialize_high_level.c **** /*                                                                        */
 112:ThreadX/common/src/tx_initialize_high_level.c **** /**************************************************************************/
 113:ThreadX/common/src/tx_initialize_high_level.c **** VOID    _tx_initialize_high_level(VOID)
 114:ThreadX/common/src/tx_initialize_high_level.c **** {
  28              		.loc 1 114 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 115:ThreadX/common/src/tx_initialize_high_level.c **** 
 116:ThreadX/common/src/tx_initialize_high_level.c ****     /* Initialize event tracing, if enabled.  */
 117:ThreadX/common/src/tx_initialize_high_level.c ****     TX_TRACE_INITIALIZE
 118:ThreadX/common/src/tx_initialize_high_level.c **** 
 119:ThreadX/common/src/tx_initialize_high_level.c ****     /* Initialize the event log, if enabled.  */
 120:ThreadX/common/src/tx_initialize_high_level.c ****     TX_EL_INITIALIZE
 121:ThreadX/common/src/tx_initialize_high_level.c **** 
 122:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the thread control initialization function.  */
 123:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_thread_initialize();
  37              		.loc 1 123 0
  38 0002 FFF7FEFF 		bl	_tx_thread_initialize
  39              	.LVL0:
 124:ThreadX/common/src/tx_initialize_high_level.c **** 
 125:ThreadX/common/src/tx_initialize_high_level.c **** #ifndef TX_NO_TIMER
 126:ThreadX/common/src/tx_initialize_high_level.c **** 
 127:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the timer control initialization function.  */
 128:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_timer_initialize();
  40              		.loc 1 128 0
  41 0006 FFF7FEFF 		bl	_tx_timer_initialize
  42              	.LVL1:
 129:ThreadX/common/src/tx_initialize_high_level.c **** #endif
 130:ThreadX/common/src/tx_initialize_high_level.c **** 
ARM GAS  /tmp/cc3RYV5V.s 			page 4


 131:ThreadX/common/src/tx_initialize_high_level.c **** #ifndef TX_DISABLE_REDUNDANT_CLEARING
 132:ThreadX/common/src/tx_initialize_high_level.c **** 
 133:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the semaphore initialization function.  */
 134:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_semaphore_initialize();
  43              		.loc 1 134 0
  44 000a 0023     		movs	r3, #0
  45 000c 0C4A     		ldr	r2, .L3
  46 000e 1360     		str	r3, [r2]
  47 0010 0C4A     		ldr	r2, .L3+4
  48 0012 1360     		str	r3, [r2]
 135:ThreadX/common/src/tx_initialize_high_level.c **** 
 136:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the queue initialization function.  */
 137:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_queue_initialize();
  49              		.loc 1 137 0
  50 0014 0C4A     		ldr	r2, .L3+8
  51 0016 1360     		str	r3, [r2]
  52 0018 0C4A     		ldr	r2, .L3+12
  53 001a 1360     		str	r3, [r2]
 138:ThreadX/common/src/tx_initialize_high_level.c **** 
 139:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the event flag initialization function.  */
 140:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_event_flags_initialize();
  54              		.loc 1 140 0
  55 001c 0C4A     		ldr	r2, .L3+16
  56 001e 1360     		str	r3, [r2]
  57 0020 0C4A     		ldr	r2, .L3+20
  58 0022 1360     		str	r3, [r2]
 141:ThreadX/common/src/tx_initialize_high_level.c **** 
 142:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the block pool initialization function.  */
 143:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_block_pool_initialize();
  59              		.loc 1 143 0
  60 0024 0C4A     		ldr	r2, .L3+24
  61 0026 1360     		str	r3, [r2]
  62 0028 0C4A     		ldr	r2, .L3+28
  63 002a 1360     		str	r3, [r2]
 144:ThreadX/common/src/tx_initialize_high_level.c **** 
 145:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the byte pool initialization function.  */
 146:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_byte_pool_initialize();
  64              		.loc 1 146 0
  65 002c 0C4A     		ldr	r2, .L3+32
  66 002e 1360     		str	r3, [r2]
  67 0030 0C4A     		ldr	r2, .L3+36
  68 0032 1360     		str	r3, [r2]
 147:ThreadX/common/src/tx_initialize_high_level.c **** 
 148:ThreadX/common/src/tx_initialize_high_level.c ****     /* Call the mutex initialization function.  */
 149:ThreadX/common/src/tx_initialize_high_level.c ****     _tx_mutex_initialize();
  69              		.loc 1 149 0
  70 0034 0C4A     		ldr	r2, .L3+40
  71 0036 1360     		str	r3, [r2]
  72 0038 0C4A     		ldr	r2, .L3+44
  73 003a 1360     		str	r3, [r2]
 150:ThreadX/common/src/tx_initialize_high_level.c **** #endif
 151:ThreadX/common/src/tx_initialize_high_level.c **** }
  74              		.loc 1 151 0
  75 003c 08BD     		pop	{r3, pc}
  76              	.L4:
  77 003e 00BF     		.align	2
  78              	.L3:
ARM GAS  /tmp/cc3RYV5V.s 			page 5


  79 0040 00000000 		.word	_tx_semaphore_created_ptr
  80 0044 00000000 		.word	_tx_semaphore_created_count
  81 0048 00000000 		.word	_tx_queue_created_ptr
  82 004c 00000000 		.word	_tx_queue_created_count
  83 0050 00000000 		.word	_tx_event_flags_created_ptr
  84 0054 00000000 		.word	_tx_event_flags_created_count
  85 0058 00000000 		.word	_tx_block_pool_created_ptr
  86 005c 00000000 		.word	_tx_block_pool_created_count
  87 0060 00000000 		.word	_tx_byte_pool_created_ptr
  88 0064 00000000 		.word	_tx_byte_pool_created_count
  89 0068 00000000 		.word	_tx_mutex_created_ptr
  90 006c 00000000 		.word	_tx_mutex_created_count
  91              		.cfi_endproc
  92              	.LFE8:
  94              		.comm	_tx_initialize_unused_memory,4,4
  95              		.comm	_tx_byte_pool_created_count,4,4
  96              		.comm	_tx_byte_pool_created_ptr,4,4
  97              		.comm	_tx_block_pool_created_count,4,4
  98              		.comm	_tx_block_pool_created_ptr,4,4
  99              		.comm	_tx_mutex_created_count,4,4
 100              		.comm	_tx_mutex_created_ptr,4,4
 101              		.comm	_tx_event_flags_created_count,4,4
 102              		.comm	_tx_event_flags_created_ptr,4,4
 103              		.comm	_tx_queue_created_count,4,4
 104              		.comm	_tx_queue_created_ptr,4,4
 105              		.comm	_tx_semaphore_created_count,4,4
 106              		.comm	_tx_semaphore_created_ptr,4,4
 107              		.text
 108              	.Letext0:
 109              		.file 2 "/usr/include/newlib/sys/lock.h"
 110              		.file 3 "/usr/include/newlib/sys/_types.h"
 111              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 112              		.file 5 "/usr/include/newlib/sys/reent.h"
 113              		.file 6 "/usr/include/newlib/stdlib.h"
 114              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
 115              		.file 8 "ThreadX/common/inc/tx_api.h"
 116              		.file 9 "ThreadX/common/inc/tx_initialize.h"
 117              		.file 10 "ThreadX/common/inc/tx_thread.h"
 118              		.file 11 "ThreadX/common/inc/tx_timer.h"
 119              		.file 12 "ThreadX/common/inc/tx_semaphore.h"
 120              		.file 13 "ThreadX/common/inc/tx_queue.h"
 121              		.file 14 "ThreadX/common/inc/tx_event_flags.h"
 122              		.file 15 "ThreadX/common/inc/tx_mutex.h"
 123              		.file 16 "ThreadX/common/inc/tx_block_pool.h"
 124              		.file 17 "ThreadX/common/inc/tx_byte_pool.h"
ARM GAS  /tmp/cc3RYV5V.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_initialize_high_level.c
     /tmp/cc3RYV5V.s:18     .text._tx_initialize_high_level:0000000000000000 $t
     /tmp/cc3RYV5V.s:25     .text._tx_initialize_high_level:0000000000000000 _tx_initialize_high_level
     /tmp/cc3RYV5V.s:79     .text._tx_initialize_high_level:0000000000000040 $d
                            *COM*:0000000000000004 _tx_semaphore_created_ptr
                            *COM*:0000000000000004 _tx_semaphore_created_count
                            *COM*:0000000000000004 _tx_queue_created_ptr
                            *COM*:0000000000000004 _tx_queue_created_count
                            *COM*:0000000000000004 _tx_event_flags_created_ptr
                            *COM*:0000000000000004 _tx_event_flags_created_count
                            *COM*:0000000000000004 _tx_block_pool_created_ptr
                            *COM*:0000000000000004 _tx_block_pool_created_count
                            *COM*:0000000000000004 _tx_byte_pool_created_ptr
                            *COM*:0000000000000004 _tx_byte_pool_created_count
                            *COM*:0000000000000004 _tx_mutex_created_ptr
                            *COM*:0000000000000004 _tx_mutex_created_count
                            *COM*:0000000000000004 _tx_initialize_unused_memory

UNDEFINED SYMBOLS
_tx_thread_initialize
_tx_timer_initialize
