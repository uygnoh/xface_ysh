ARM GAS  /tmp/ccbh0NdF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_timer_performance_system_info_get.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_timer_performance_system_info_get,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_timer_performance_system_info_get
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_timer_performance_system_info_get:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_timer_performance_system_info_get.c"
   1:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
   3:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
   5:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  10:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  12:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  13:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**                                                                       */
  16:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**                                                                       */
  18:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**   Timer                                                               */
  19:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**                                                                       */
  20:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  23:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  25:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  26:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /* Include necessary system files.  */
  27:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  28:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #include "tx_api.h"
  29:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #include "tx_timer.h"
  30:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO
  31:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #include "tx_trace.h"
ARM GAS  /tmp/ccbh0NdF.s 			page 2


  32:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #endif
  33:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  34:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  35:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  36:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  37:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  FUNCTION                                               RELEASE        */
  38:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  39:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    _tx_timer_performance_system_info_get               PORTABLE C      */
  40:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                           6.1          */
  41:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  AUTHOR                                                                */
  42:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  43:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    William E. Lamie, Microsoft Corporation                             */
  44:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  45:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  DESCRIPTION                                                           */
  46:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  47:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    This function retrieves timer performance information.              */
  48:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  49:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  INPUT                                                                 */
  50:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  51:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    activates                         Destination for total number of   */
  52:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                        activations                     */
  53:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    reactivates                       Destination for total number of   */
  54:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                        reactivations                   */
  55:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    deactivates                       Destination for total number of   */
  56:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                        deactivations                   */
  57:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    expirations                       Destination for total number of   */
  58:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                        expirations                     */
  59:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    expiration_adjusts                Destination for total number of   */
  60:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                        expiration adjustments          */
  61:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  62:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  OUTPUT                                                                */
  63:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  64:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    status                            Completion status                 */
  65:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  66:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  CALLS                                                                 */
  67:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  68:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    None                                                                */
  69:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  70:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  CALLED BY                                                             */
  71:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  72:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    Application Code                                                    */
  73:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  74:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  RELEASE HISTORY                                                       */
  75:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  76:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*    DATE              NAME                      DESCRIPTION             */
  77:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  78:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  79:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
  80:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                            resulting in version 6.1    */
  81:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /*                                                                        */
  82:ThreadX/common/src/tx_timer_performance_system_info_get.c **** /**************************************************************************/
  83:ThreadX/common/src/tx_timer_performance_system_info_get.c **** UINT  _tx_timer_performance_system_info_get(ULONG *activates, ULONG *reactivates,
  84:ThreadX/common/src/tx_timer_performance_system_info_get.c ****                     ULONG *deactivates, ULONG *expirations, ULONG *expiration_adjusts)
  85:ThreadX/common/src/tx_timer_performance_system_info_get.c **** {
  28              		.loc 1 85 0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/ccbh0NdF.s 			page 3


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  86:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  87:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO
  88:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  89:ThreadX/common/src/tx_timer_performance_system_info_get.c **** TX_INTERRUPT_SAVE_AREA
  90:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  91:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  92:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Disable interrupts.  */
  93:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     TX_DISABLE
  94:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  95:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* If trace is enabled, insert this event into the trace buffer.  */
  96:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     TX_TRACE_IN_LINE_INSERT(TX_TRACE_TIMER_PERFORMANCE_SYSTEM_INFO_GET, 0, 0, 0, 0, TX_TRACE_TIMER_
  97:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
  98:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Log this kernel call.  */
  99:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     TX_EL_TIMER_PERFORMANCE_SYSTEM_INFO_GET_INSERT
 100:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 101:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Retrieve the total number of timer activations.  */
 102:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (activates != TX_NULL)
 103:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 104:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 105:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         *activates =  _tx_timer_performance_activate_count;
 106:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 107:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 108:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Retrieve the total number of timer reactivations.  */
 109:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (reactivates != TX_NULL)
 110:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 111:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 112:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         *reactivates =  _tx_timer_performance_reactivate_count;
 113:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 114:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 115:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Retrieve the total number of timer deactivations.  */
 116:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (deactivates != TX_NULL)
 117:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 118:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 119:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         *deactivates =  _tx_timer_performance_deactivate_count;
 120:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 121:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 122:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Retrieve the total number of timer expirations.  */
 123:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (expirations != TX_NULL)
 124:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 125:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 126:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         *expirations =  _tx_timer_performance_expiration_count;
 127:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 128:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 129:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Retrieve the total number of timer expiration adjustments.  */
 130:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (expiration_adjusts != TX_NULL)
 131:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 132:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 133:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         *expiration_adjusts =  _tx_timer_performance__expiration_adjust_count;
 134:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 135:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 136:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Restore interrupts.  */
 137:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     TX_RESTORE
 138:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 139:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Return completion status.  */
ARM GAS  /tmp/ccbh0NdF.s 			page 4


 140:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     return(TX_SUCCESS);
 141:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 142:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #else
 143:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 144:ThreadX/common/src/tx_timer_performance_system_info_get.c **** UINT        status;
 145:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 146:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 147:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Access input arguments just for the sake of lint, MISRA, etc.  */
 148:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     if (activates != TX_NULL)
 149:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 150:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 151:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 152:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 153:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 154:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     else if (reactivates != TX_NULL)
 155:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 156:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 157:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 158:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 159:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 160:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     else if (deactivates != TX_NULL)
 161:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 162:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 163:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 164:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 165:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 166:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     else if (expirations != TX_NULL)
 167:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 168:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 169:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 170:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 171:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 172:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     else if (expiration_adjusts != TX_NULL)
 173:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 174:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 175:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 176:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 177:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 178:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     else
 179:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     {
 180:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 181:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         /* Not enabled, return error.  */
 182:ThreadX/common/src/tx_timer_performance_system_info_get.c ****         status =  TX_FEATURE_NOT_ENABLED;
 183:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     }
 184:ThreadX/common/src/tx_timer_performance_system_info_get.c **** 
 185:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     /* Return completion status.  */
 186:ThreadX/common/src/tx_timer_performance_system_info_get.c ****     return(status);
 187:ThreadX/common/src/tx_timer_performance_system_info_get.c **** #endif
 188:ThreadX/common/src/tx_timer_performance_system_info_get.c **** }
  34              		.loc 1 188 0
  35 0000 FF20     		movs	r0, #255
  36              	.LVL1:
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE8:
  41              		.text
  42              	.Letext0:
ARM GAS  /tmp/ccbh0NdF.s 			page 5


  43              		.file 2 "/usr/include/newlib/sys/lock.h"
  44              		.file 3 "/usr/include/newlib/sys/_types.h"
  45              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
  46              		.file 5 "/usr/include/newlib/sys/reent.h"
  47              		.file 6 "/usr/include/newlib/stdlib.h"
  48              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
  49              		.file 8 "ThreadX/common/inc/tx_api.h"
  50              		.file 9 "ThreadX/common/inc/tx_timer.h"
ARM GAS  /tmp/ccbh0NdF.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_timer_performance_system_info_get.c
     /tmp/ccbh0NdF.s:18     .text._tx_timer_performance_system_info_get:0000000000000000 $t
     /tmp/ccbh0NdF.s:25     .text._tx_timer_performance_system_info_get:0000000000000000 _tx_timer_performance_system_info_get

NO UNDEFINED SYMBOLS
