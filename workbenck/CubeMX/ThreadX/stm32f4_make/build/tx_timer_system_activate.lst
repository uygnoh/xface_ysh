ARM GAS  /tmp/ccZTxDGh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tx_timer_system_activate.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._tx_timer_system_activate,"ax",%progbits
  18              		.align	1
  19              		.global	_tx_timer_system_activate
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_tx_timer_system_activate:
  26              	.LFB8:
  27              		.file 1 "ThreadX/common/src/tx_timer_system_activate.c"
   1:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
   2:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
   3:ThreadX/common/src/tx_timer_system_activate.c **** /*       Copyright (c) Microsoft Corporation. All rights reserved.        */
   4:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
   5:ThreadX/common/src/tx_timer_system_activate.c **** /*       This software is licensed under the Microsoft Software License   */
   6:ThreadX/common/src/tx_timer_system_activate.c **** /*       Terms for Microsoft Azure RTOS. Full text of the license can be  */
   7:ThreadX/common/src/tx_timer_system_activate.c **** /*       found in the LICENSE file at https://aka.ms/AzureRTOS_EULA       */
   8:ThreadX/common/src/tx_timer_system_activate.c **** /*       and in the root directory of this software.                      */
   9:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  10:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  11:ThreadX/common/src/tx_timer_system_activate.c **** 
  12:ThreadX/common/src/tx_timer_system_activate.c **** 
  13:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  14:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  15:ThreadX/common/src/tx_timer_system_activate.c **** /**                                                                       */
  16:ThreadX/common/src/tx_timer_system_activate.c **** /** ThreadX Component                                                     */
  17:ThreadX/common/src/tx_timer_system_activate.c **** /**                                                                       */
  18:ThreadX/common/src/tx_timer_system_activate.c **** /**   Timer                                                               */
  19:ThreadX/common/src/tx_timer_system_activate.c **** /**                                                                       */
  20:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  21:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  22:ThreadX/common/src/tx_timer_system_activate.c **** 
  23:ThreadX/common/src/tx_timer_system_activate.c **** #define TX_SOURCE_CODE
  24:ThreadX/common/src/tx_timer_system_activate.c **** 
  25:ThreadX/common/src/tx_timer_system_activate.c **** #ifndef TX_NO_TIMER
  26:ThreadX/common/src/tx_timer_system_activate.c **** 
  27:ThreadX/common/src/tx_timer_system_activate.c **** /* Include necessary system files.  */
  28:ThreadX/common/src/tx_timer_system_activate.c **** 
  29:ThreadX/common/src/tx_timer_system_activate.c **** #include "tx_api.h"
  30:ThreadX/common/src/tx_timer_system_activate.c **** #include "tx_timer.h"
  31:ThreadX/common/src/tx_timer_system_activate.c **** 
ARM GAS  /tmp/ccZTxDGh.s 			page 2


  32:ThreadX/common/src/tx_timer_system_activate.c **** 
  33:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  34:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  35:ThreadX/common/src/tx_timer_system_activate.c **** /*  FUNCTION                                               RELEASE        */
  36:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  37:ThreadX/common/src/tx_timer_system_activate.c **** /*    _tx_timer_system_activate                           PORTABLE C      */
  38:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                           6.1          */
  39:ThreadX/common/src/tx_timer_system_activate.c **** /*  AUTHOR                                                                */
  40:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  41:ThreadX/common/src/tx_timer_system_activate.c **** /*    William E. Lamie, Microsoft Corporation                             */
  42:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  43:ThreadX/common/src/tx_timer_system_activate.c **** /*  DESCRIPTION                                                           */
  44:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  45:ThreadX/common/src/tx_timer_system_activate.c **** /*    This function places the specified internal timer in the proper     */
  46:ThreadX/common/src/tx_timer_system_activate.c **** /*    place in the timer expiration list.  If the timer is already active */
  47:ThreadX/common/src/tx_timer_system_activate.c **** /*    this function does nothing.                                         */
  48:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  49:ThreadX/common/src/tx_timer_system_activate.c **** /*  INPUT                                                                 */
  50:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  51:ThreadX/common/src/tx_timer_system_activate.c **** /*    timer_ptr                         Pointer to timer control block    */
  52:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  53:ThreadX/common/src/tx_timer_system_activate.c **** /*  OUTPUT                                                                */
  54:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  55:ThreadX/common/src/tx_timer_system_activate.c **** /*    TX_SUCCESS                        Always returns success            */
  56:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  57:ThreadX/common/src/tx_timer_system_activate.c **** /*  CALLS                                                                 */
  58:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  59:ThreadX/common/src/tx_timer_system_activate.c **** /*    None                                                                */
  60:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  61:ThreadX/common/src/tx_timer_system_activate.c **** /*  CALLED BY                                                             */
  62:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  63:ThreadX/common/src/tx_timer_system_activate.c **** /*    _tx_thread_system_suspend         Thread suspend function           */
  64:ThreadX/common/src/tx_timer_system_activate.c **** /*    _tx_thread_system_ni_suspend      Non-interruptable suspend thread  */
  65:ThreadX/common/src/tx_timer_system_activate.c **** /*    _tx_timer_thread_entry            Timer thread processing           */
  66:ThreadX/common/src/tx_timer_system_activate.c **** /*    _tx_timer_activate                Application timer activate        */
  67:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  68:ThreadX/common/src/tx_timer_system_activate.c **** /*  RELEASE HISTORY                                                       */
  69:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  70:ThreadX/common/src/tx_timer_system_activate.c **** /*    DATE              NAME                      DESCRIPTION             */
  71:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  72:ThreadX/common/src/tx_timer_system_activate.c **** /*  05-19-2020     William E. Lamie         Initial Version 6.0           */
  73:ThreadX/common/src/tx_timer_system_activate.c **** /*  09-30-2020     Scott Larson             Modified comment(s), and      */
  74:ThreadX/common/src/tx_timer_system_activate.c **** /*                                            opt out of function when    */
  75:ThreadX/common/src/tx_timer_system_activate.c **** /*                                            TX_NO_TIMER is defined,     */
  76:ThreadX/common/src/tx_timer_system_activate.c **** /*                                            resulting in version 6.1    */
  77:ThreadX/common/src/tx_timer_system_activate.c **** /*                                                                        */
  78:ThreadX/common/src/tx_timer_system_activate.c **** /**************************************************************************/
  79:ThreadX/common/src/tx_timer_system_activate.c **** VOID  _tx_timer_system_activate(TX_TIMER_INTERNAL *timer_ptr)
  80:ThreadX/common/src/tx_timer_system_activate.c **** {
  28              		.loc 1 80 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  81:ThreadX/common/src/tx_timer_system_activate.c **** 
  82:ThreadX/common/src/tx_timer_system_activate.c **** TX_TIMER_INTERNAL           **timer_list;
ARM GAS  /tmp/ccZTxDGh.s 			page 3


  83:ThreadX/common/src/tx_timer_system_activate.c **** TX_TIMER_INTERNAL           *next_timer;
  84:ThreadX/common/src/tx_timer_system_activate.c **** TX_TIMER_INTERNAL           *previous_timer;
  85:ThreadX/common/src/tx_timer_system_activate.c **** ULONG                       delta;
  86:ThreadX/common/src/tx_timer_system_activate.c **** ULONG                       remaining_ticks;
  87:ThreadX/common/src/tx_timer_system_activate.c **** ULONG                       expiration_time;
  88:ThreadX/common/src/tx_timer_system_activate.c **** 
  89:ThreadX/common/src/tx_timer_system_activate.c **** 
  90:ThreadX/common/src/tx_timer_system_activate.c ****     /* Pickup the remaining ticks.  */
  91:ThreadX/common/src/tx_timer_system_activate.c ****     remaining_ticks =  timer_ptr -> tx_timer_internal_remaining_ticks;
  34              		.loc 1 91 0
  35 0000 0368     		ldr	r3, [r0]
  36              	.LVL1:
  92:ThreadX/common/src/tx_timer_system_activate.c **** 
  93:ThreadX/common/src/tx_timer_system_activate.c ****     /* Determine if there is a timer to activate.  */
  94:ThreadX/common/src/tx_timer_system_activate.c ****     if (remaining_ticks != ((ULONG) 0))
  37              		.loc 1 94 0
  38 0002 23B1     		cbz	r3, .L1
  95:ThreadX/common/src/tx_timer_system_activate.c ****     {
  96:ThreadX/common/src/tx_timer_system_activate.c **** 
  97:ThreadX/common/src/tx_timer_system_activate.c ****         /* Determine if the timer is set to wait forever.  */
  98:ThreadX/common/src/tx_timer_system_activate.c ****         if (remaining_ticks != TX_WAIT_FOREVER)
  39              		.loc 1 98 0
  40 0004 B3F1FF3F 		cmp	r3, #-1
  41 0008 01D0     		beq	.L1
  99:ThreadX/common/src/tx_timer_system_activate.c ****         {
 100:ThreadX/common/src/tx_timer_system_activate.c **** 
 101:ThreadX/common/src/tx_timer_system_activate.c ****             /* Valid timer activate request.  */
 102:ThreadX/common/src/tx_timer_system_activate.c **** 
 103:ThreadX/common/src/tx_timer_system_activate.c ****             /* Determine if the timer still needs activation.  */
 104:ThreadX/common/src/tx_timer_system_activate.c ****             if (timer_ptr -> tx_timer_internal_list_head == TX_NULL)
  42              		.loc 1 104 0
  43 000a 8269     		ldr	r2, [r0, #24]
  44 000c 02B1     		cbz	r2, .L8
  45              	.LVL2:
  46              	.L1:
 105:ThreadX/common/src/tx_timer_system_activate.c ****             {
 106:ThreadX/common/src/tx_timer_system_activate.c **** 
 107:ThreadX/common/src/tx_timer_system_activate.c ****                 /* Activate the timer.  */
 108:ThreadX/common/src/tx_timer_system_activate.c **** 
 109:ThreadX/common/src/tx_timer_system_activate.c ****                 /* Calculate the amount of time remaining for the timer.  */
 110:ThreadX/common/src/tx_timer_system_activate.c ****                 if (remaining_ticks > TX_TIMER_ENTRIES)
 111:ThreadX/common/src/tx_timer_system_activate.c ****                 {
 112:ThreadX/common/src/tx_timer_system_activate.c **** 
 113:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Set expiration time to the maximum number of entries.  */
 114:ThreadX/common/src/tx_timer_system_activate.c ****                     expiration_time =  TX_TIMER_ENTRIES - ((ULONG) 1);
 115:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 116:ThreadX/common/src/tx_timer_system_activate.c ****                 else
 117:ThreadX/common/src/tx_timer_system_activate.c ****                 {
 118:ThreadX/common/src/tx_timer_system_activate.c **** 
 119:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Timer value fits in the timer entries.  */
 120:ThreadX/common/src/tx_timer_system_activate.c **** 
 121:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Set the expiration time.  */
 122:ThreadX/common/src/tx_timer_system_activate.c ****                     expiration_time =  (remaining_ticks - ((ULONG) 1));
 123:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 124:ThreadX/common/src/tx_timer_system_activate.c **** 
 125:ThreadX/common/src/tx_timer_system_activate.c ****                 /* At this point, we are ready to put the timer on one of
 126:ThreadX/common/src/tx_timer_system_activate.c ****                    the timer lists.  */
ARM GAS  /tmp/ccZTxDGh.s 			page 4


 127:ThreadX/common/src/tx_timer_system_activate.c **** 
 128:ThreadX/common/src/tx_timer_system_activate.c ****                 /* Calculate the proper place for the timer.  */
 129:ThreadX/common/src/tx_timer_system_activate.c ****                 timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, expiration_time);
 130:ThreadX/common/src/tx_timer_system_activate.c ****                 if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_V
 131:ThreadX/common/src/tx_timer_system_activate.c ****                 {
 132:ThreadX/common/src/tx_timer_system_activate.c **** 
 133:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Wrap from the beginning of the list.  */
 134:ThreadX/common/src/tx_timer_system_activate.c ****                     delta =  TX_TIMER_POINTER_DIF(timer_list, _tx_timer_list_end);
 135:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
 136:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 137:ThreadX/common/src/tx_timer_system_activate.c **** 
 138:ThreadX/common/src/tx_timer_system_activate.c ****                 /* Now put the timer on this list.  */
 139:ThreadX/common/src/tx_timer_system_activate.c ****                 if ((*timer_list) == TX_NULL)
 140:ThreadX/common/src/tx_timer_system_activate.c ****                 {
 141:ThreadX/common/src/tx_timer_system_activate.c **** 
 142:ThreadX/common/src/tx_timer_system_activate.c ****                     /* This list is NULL, just put the new timer on it.  */
 143:ThreadX/common/src/tx_timer_system_activate.c **** 
 144:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Setup the links in this timer.  */
 145:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_next =      timer_ptr;
 146:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_previous =  timer_ptr;
 147:ThreadX/common/src/tx_timer_system_activate.c **** 
 148:ThreadX/common/src/tx_timer_system_activate.c ****                     /* Setup the list head pointer.  */
 149:ThreadX/common/src/tx_timer_system_activate.c ****                     *timer_list =  timer_ptr;
 150:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 151:ThreadX/common/src/tx_timer_system_activate.c ****                 else
 152:ThreadX/common/src/tx_timer_system_activate.c ****                 {
 153:ThreadX/common/src/tx_timer_system_activate.c **** 
 154:ThreadX/common/src/tx_timer_system_activate.c ****                     /* This list is not NULL, add current timer to the end. */
 155:ThreadX/common/src/tx_timer_system_activate.c ****                     next_timer =                                        *timer_list;
 156:ThreadX/common/src/tx_timer_system_activate.c ****                     previous_timer =                                    next_timer -> tx_timer_inte
 157:ThreadX/common/src/tx_timer_system_activate.c ****                     previous_timer -> tx_timer_internal_active_next =   timer_ptr;
 158:ThreadX/common/src/tx_timer_system_activate.c ****                     next_timer -> tx_timer_internal_active_previous =   timer_ptr;
 159:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_next =        next_timer;
 160:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_previous =    previous_timer;
 161:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 162:ThreadX/common/src/tx_timer_system_activate.c **** 
 163:ThreadX/common/src/tx_timer_system_activate.c ****                 /* Setup list head pointer.  */
 164:ThreadX/common/src/tx_timer_system_activate.c ****                 timer_ptr -> tx_timer_internal_list_head =  timer_list;
 165:ThreadX/common/src/tx_timer_system_activate.c ****             }
 166:ThreadX/common/src/tx_timer_system_activate.c ****         }
 167:ThreadX/common/src/tx_timer_system_activate.c ****     }
 168:ThreadX/common/src/tx_timer_system_activate.c **** }
  47              		.loc 1 168 0
  48 000e 7047     		bx	lr
  49              	.LVL3:
  50              	.L8:
 110:ThreadX/common/src/tx_timer_system_activate.c ****                 {
  51              		.loc 1 110 0
  52 0010 202B     		cmp	r3, #32
  53 0012 15D8     		bhi	.L7
 122:ThreadX/common/src/tx_timer_system_activate.c ****                 }
  54              		.loc 1 122 0
  55 0014 013B     		subs	r3, r3, #1
  56              	.LVL4:
  57              	.L3:
 129:ThreadX/common/src/tx_timer_system_activate.c ****                 if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_V
  58              		.loc 1 129 0
ARM GAS  /tmp/ccZTxDGh.s 			page 5


  59 0016 0D4A     		ldr	r2, .L10
  60 0018 1268     		ldr	r2, [r2]
  61 001a 02EB8303 		add	r3, r2, r3, lsl #2
  62              	.LVL5:
 130:ThreadX/common/src/tx_timer_system_activate.c ****                 {
  63              		.loc 1 130 0
  64 001e 0C4A     		ldr	r2, .L10+4
  65 0020 1268     		ldr	r2, [r2]
  66 0022 9A42     		cmp	r2, r3
  67 0024 03D8     		bhi	.L4
 134:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
  68              		.loc 1 134 0
  69 0026 9B1A     		subs	r3, r3, r2
  70              	.LVL6:
 135:ThreadX/common/src/tx_timer_system_activate.c ****                 }
  71              		.loc 1 135 0
  72 0028 0A4A     		ldr	r2, .L10+8
  73 002a 1268     		ldr	r2, [r2]
  74 002c 1344     		add	r3, r3, r2
  75              	.LVL7:
  76              	.L4:
 139:ThreadX/common/src/tx_timer_system_activate.c ****                 {
  77              		.loc 1 139 0
  78 002e 1A68     		ldr	r2, [r3]
  79 0030 42B1     		cbz	r2, .L9
  80              	.LVL8:
 156:ThreadX/common/src/tx_timer_system_activate.c ****                     previous_timer -> tx_timer_internal_active_next =   timer_ptr;
  81              		.loc 1 156 0
  82 0032 5169     		ldr	r1, [r2, #20]
  83              	.LVL9:
 157:ThreadX/common/src/tx_timer_system_activate.c ****                     next_timer -> tx_timer_internal_active_previous =   timer_ptr;
  84              		.loc 1 157 0
  85 0034 0861     		str	r0, [r1, #16]
  86              	.LVL10:
 158:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_next =        next_timer;
  87              		.loc 1 158 0
  88 0036 5061     		str	r0, [r2, #20]
 159:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_previous =    previous_timer;
  89              		.loc 1 159 0
  90 0038 0261     		str	r2, [r0, #16]
 160:ThreadX/common/src/tx_timer_system_activate.c ****                 }
  91              		.loc 1 160 0
  92 003a 4161     		str	r1, [r0, #20]
  93              	.LVL11:
  94              	.L6:
 164:ThreadX/common/src/tx_timer_system_activate.c ****             }
  95              		.loc 1 164 0
  96 003c 8361     		str	r3, [r0, #24]
  97              		.loc 1 168 0
  98 003e E6E7     		b	.L1
  99              	.LVL12:
 100              	.L7:
 114:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 101              		.loc 1 114 0
 102 0040 1F23     		movs	r3, #31
 103              	.LVL13:
 104 0042 E8E7     		b	.L3
ARM GAS  /tmp/ccZTxDGh.s 			page 6


 105              	.LVL14:
 106              	.L9:
 145:ThreadX/common/src/tx_timer_system_activate.c ****                     timer_ptr -> tx_timer_internal_active_previous =  timer_ptr;
 107              		.loc 1 145 0
 108 0044 0061     		str	r0, [r0, #16]
 146:ThreadX/common/src/tx_timer_system_activate.c **** 
 109              		.loc 1 146 0
 110 0046 4061     		str	r0, [r0, #20]
 149:ThreadX/common/src/tx_timer_system_activate.c ****                 }
 111              		.loc 1 149 0
 112 0048 1860     		str	r0, [r3]
 113              	.LVL15:
 114 004a F7E7     		b	.L6
 115              	.L11:
 116              		.align	2
 117              	.L10:
 118 004c 00000000 		.word	_tx_timer_current_ptr
 119 0050 00000000 		.word	_tx_timer_list_end
 120 0054 00000000 		.word	_tx_timer_list_start
 121              		.cfi_endproc
 122              	.LFE8:
 124              		.text
 125              	.Letext0:
 126              		.file 2 "/usr/include/newlib/sys/lock.h"
 127              		.file 3 "/usr/include/newlib/sys/_types.h"
 128              		.file 4 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 129              		.file 5 "/usr/include/newlib/sys/reent.h"
 130              		.file 6 "/usr/include/newlib/stdlib.h"
 131              		.file 7 "ThreadX/ports/cortex_m4/gnu/inc/tx_port.h"
 132              		.file 8 "ThreadX/common/inc/tx_api.h"
 133              		.file 9 "ThreadX/common/inc/tx_timer.h"
ARM GAS  /tmp/ccZTxDGh.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tx_timer_system_activate.c
     /tmp/ccZTxDGh.s:18     .text._tx_timer_system_activate:0000000000000000 $t
     /tmp/ccZTxDGh.s:25     .text._tx_timer_system_activate:0000000000000000 _tx_timer_system_activate
     /tmp/ccZTxDGh.s:118    .text._tx_timer_system_activate:000000000000004c $d

UNDEFINED SYMBOLS
_tx_timer_current_ptr
_tx_timer_list_end
_tx_timer_list_start
