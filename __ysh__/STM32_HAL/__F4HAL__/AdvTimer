/*******************************************************************************
        => STM32F4x__高级定时器__钟源选择
*******************************************************************************/
  1 内部时钟源（CK_INT）
//_________________________________________________________
TIMx_SMCR（SMS=000）      //工作在内部时钟源模式



  2 外部时钟模式1 //外部通道输入引脚TINx（x=1，2）
//_________________________________________________________
TIMx_SMCR（SMS=111）      //工作在外部时钟模式“1”
                         //有“2”个来自于定时器输入通道的时钟信号，分别是
                         //（TIMx_CH1, TIMx_CH2）分别对应（TI1FP1, TI2FP2）
TIMx_CCMR1（IC1F[7:4]）   //捕获比较寄存器1, (输入捕获1滤波器)
                         //此位域定义TI1输入采样频率适于TI1的数字滤波器带宽
                         //数字滤波器由计数器组成，每N个事件才视为一个有效边沿
TIMx_CR1（CKD[9:8]）      //时钟分频， 此位域指示定时时钟（CK_INT）频率与死区发生器
                         //及数字滤波器（ETR，TIx）所使用的死区及采样时钟（fDTS）之间的分频比



  3 外部时钟模式2 //外部触发输入ETR
//_________________________________________________________
TIMx_SMCR（ECE=1）        //使用外部时钟源模式2


  4 内部触发输入  //ITRx, 使用一个定时器作为另一个定时器的预分频器
//_________________________________________________________
TIMx定时器从内部连接在一起，以实现定时器同步级联。 当某个定时器配置为主模式时，
可以对另一个配置为从模式的定时器的计数器执行复位，启动，停止操作或为其提供时钟。



/*******************************************************************************
        => STM32F4x__高级定时器__控制器
*******************************************************************************/
1 触发器控制器
        //用来针对片内外设输出触发信号，为其它定时器提供时钟和触发DAC/ADC转换
2 从模式控制器
        //可以控制计数器复位， 启动， 递增、递减，计数
3 编码器接口



/*******************************************************************************
        => STM32F4x__高级定时器__时基单元
*******************************************************************************/
TIMx_CNT                //计数器
TIMx_PSC                //预分频器
TIMx_ARR                //自动重装载寄存器
TIMx_RCR                //复计数寄存器

UEV                     //更新事件
TIMx_SR ( UIF  )        //更新中断
TIMx_EGR( UG   )        //更新事件生成
TIMx_CR1( URS  )        //更新请求
TIMx_CR1( UDIS )        //禁止更新事件







