/*******************************************************************************
        => STM32F4__SDIO__
*******************************************************************************/
1) 使用（4）线传输数据时，每次传输（4）bit数据
2) 每根数据线上必须有（起始位，CRC，终止位）
3) CRC位每根数据线都要检查，并把检查结果汇总后在数据传输完成后通过（DO）线反馈给主机


//SDIO命令格式（固定为48bit），都是通过（CMD线）连续传输的，数据线不参与
_____________________________________________________________
起始位    传输标志    （命令+地址信息/参数）    CRC7校验    终止位
  0         1         CONTENT（6+32）        7          1
_____________________________________________________________
传输标志            （1）     //表示主机发送给（SD_CARD）的命令
传输标志            （0）     //表示（SD_CARD）返回给主机的响应
_____________________________________________________________



//当命令为广播命令时，由于广播命令不需要发送地址，此时这（32Bit）位为
//广播命令的参数。
//当命令为寻址命令时，这（32Bit）为“SD卡”的相对地址，通过这个相对地
//址找到具体的SD_CARD卡。
//在（SD_CARD卡识别模式）时，会从（RCA寄存器）中得到SD卡的相对地址。




/*******************************************************************************
        => SD_CARD__命令__（通过CMD线传输）
*******************************************************************************/
1) 无响应广播命令（bc），发送到所有卡，不返回任务响应
2) 带响应广播命令（bcr），发送到所有卡，同时接收来自所有卡的响应
3) 寻址命令（ac），发送到选定卡，DATA线无数据传输
4) 寻址数据传输命令（adtc），发送到选定卡，DATA线有数据传输


__A__//常规命令（GEN_CMD | CMD）
     ..基础命令
     ..块读，块写命令
     ..块写保护命令
     ..擦除命令
     ..锁命令
__B__//特定命令（ACMD）
     //如果要使用（特定命令ACMD），例如ACMD6， 需要在发送该命令之前先发送（CMD55）命令
     //告知SD卡接下来的命令为（特定应用命令ACMD），（CMD55）命令只对紧接的第一个命令有效
     //SD卡如果检测到（CMD55）之后的第一条命令为（ACMD）命令，则执行其特定应用功能，如果
     //检测发现不是（ACMD）命令，则执行标准命令
     ..先发（CMD55），表示后面紧跟的是一个特殊命令
     ..再发（CMD41），此时CMD41就是一个（ACMD41）命令
__B__//广播命令（BroadCast）
     ..bc 无响应，无数据的广播命令
     ..bcr有响应，无数据的广播命令（r_Response）
__C__//寻址命令
     ..所谓寻址就地在发送命令时，命令参数为SD_CARD的（相对地址）
     ..会通过相对地址找到具体的SD卡，然后对齐进行相应的操作。



/*******************************************************************************
        => SD_CARD__命令__
*******************************************************************************/
CMD0    //（0x000000）命令号，GO_IDLE_STATE（进入空闲状态），命令类型（bc）， 广播命令
        //上电默认进入空闲状态，当SD卡处于其它状态时，可以通过向其发送（CMD0）命令让其切换
        //到空闲状态。
        ..命令的真正（32）位内容，没有用到，所以全部填充为（0）
        ..响应类型： 无响应
CMD2    //ALL_SEND_CID（广播让所有SD卡）将（CID）发送给主机
        ..命令的真正（32）位内容，没有用到，所以全部填充为（0）
        ..响应类型： R2（长响应），响应的内容为（CID寄存器）中的CID号，来识别SD_CARD
CMD3    //SEND_RELATIVE_ADDR（广播让所有的SD卡将自己的）相对地址，发送给主机
        ..命令的真正（32）位内容，没有用到，所以全部填充为（0）
        ..响应类型： R6（短响应），响应的内容为（RCA寄存器）中的“相对地址”
CMD4    //SET_DSR（向所有SD_CARD广播），设置所有SD卡的DSR寄存器
        ..命令的真正（32）位内容
          （【31：16】设置DSR寄存器的参数）
          （【15： 0】因为DSR寄存器只有16位，所以其余16位填充为“0”）
        ..响应类型： 无
CMD7    //SELECT/DESELECT_CARD（通过发送相应的地址来-选中、取消选中）某个SD卡
        //之前没有选中，那么就选中，如果之前有选中，那么就取消选中
        ..命令的真正（32）位内容
          （【31：16】为相对地址）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R1b, 这个就是R1和R1b稍微有点不同，这里不关心这个不同。
CMD8    //SEND_IF_COND（向所有SD卡广播主机的接口环境）
        ..命令的真正（32）位内容
          （【31：12】填充为“0”
          （【11： 8】设置主机支持的电压范围
        ..响应类型： R7， R7的内容__为SD卡是否支持“主机的接口电压”
|____________________________________________________________|
| 47 | 46 | [45:40] | [39:20] | [19:16] | [15:8] | [7:1] | 0 | //位号
|____|____|_________|_________|_________|________|_______|___|
| 1  | 1  |    6    |   20    |    4    |   8    |  7    | 1 | //位宽
|____|____|_________|_________|_________|________|_______|___|
|'0' |'1' |'0001000'|   0     |     x   |   x    |  x    |'1'| //值
|____|____|_________|_________|_________|________|_______|___|
CMD8完整命令（0100 0100 0000 0000 1101 0101 **** ****1）
CRC的值不由编程者来决定，这个由硬件自动产生。


CMD9    //SEND_CSD（让指定SD卡发送CSD寄存器的内容），寻址命令
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R2，R2响应的内容为（CSD寄存器）的内容。
        
CMD10   //SEND_CID（让指定SD卡发送CID寄存器的内容），寻址命令
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R2，R2响应的内容为（CID寄存器）的内容。
 
CMD12   //STOP_TRANSMISSION（强制让卡停止与SD之前的数据传输），寻址命令
        ..命令的真正（32）位内容，全部填充为“0”
        ..响应类型： R1b, 这个就是R1和R1b稍微有点不同，这里不关心这个不同。
        ..响应的内容为（CSR卡状态寄存器）中的内容。
        
CMD13   //SEND_STATUS（让指定SD卡发送CSR寄存器中的内容），寻址命令
        ..命令的真正（32）位内容
          （【31：16】为相对地址，用于指定SD卡）
          （【15： 0】其余16位填充为“0”）
        ..响应类型： R1，R1响应的内容为（CSR卡状态寄存器）的内容。
        
        
CMD16   //SEND_BLOCKLE（设置块长度），寻址命令
        ..命令的真正（32）位内容， 32位都来表示块的大小
        ..响应类型： R1，命令的执行情况
        
        
CMD17   //SEND_SINGLE_BLOCK（读指定SD卡单个块），adtc
        ..命令的真正（32）位内容， SD卡某块的地址
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
        
CMD18   //SEND_MULTIPLE_BLOCK（读指定SD卡连续个块），adtc
        ..命令的真正（32）位内容， SD卡连续块中的第 1 个块的地址。
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况

CMD24   //WRITE_BLOCK（向指定的SD卡单个块写入数据）
        ..命令的真正（32）位内容， SD卡单个块的地址
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
CMD25   //WRITE_MILTIPLE_BLOCK（向指定的SD卡连续块中写入数据）
        ..命令的真正（32）位内容， SD卡连续块中的第 1 个块地址。
        ..使用这个命令时，必须先使用CMD7命令通过“相对地址”将指定SD卡选中。
        ..响应类型： R1，命令的执行情况
        
        
CMD55   //APP_CMD（用于指示紧跟的命令为特殊命令）
        ..命令的真正（32）位内容
         （【31：16】为SD卡相对地址）
         （【15： 0】为填充为“0”）
        ..响应类型： R1，命令的执行情况    
//响应（R1），返回（CSR状态寄存器的内容）
//_________________________________________________________


//响应（R2），返回（CID或CSD寄存器的内容）
//_________________________________________________________

//响应（R3），返回（OCR寄存器的内容）
//_________________________________________________________
CCS = 0         //SDSC
CCS = 1         //SDHC, SDXC
主机通过（OCR寄存器）的“BUSY”位表示SD状态（0表示SD卡忙， 1 表示SD卡不忙）

//响应（R6），返回（RCA + CSR）
//_________________________________________________________

//响应（R7），返回SD卡是否匹配主机电压
//_________________________________________________________



/*******************************************************************************
        => SD_CARD__响应__（通过CMD线传输）
*******************************************************************************/
__A__//SDIO总共有（7）类响应类型（代号：R1，R2，R3，R4，R5，R6，R7）
     、、其中SD卡没有（R4，R5）类型响应， 与命令一样（响应也是通过CMD线传输）
__B__//短响应（32bit长度）， 其中（命令号占用6位）
     ..R1（CSR）卡状态寄存器
     ..R3（OCR）操作条件寄存器
     ..R6（RCA）相对地址寄存器 + （CSR）仅15bit的内容
     ..R7（）返回SD_CARD是否支持主机接口的电压范围
__C__//长响应（127bit长度），只有（R2类型）是长响应
     ..R2不需要“镜像命令”， 因此存放命令号的（6bits）全部填“1”
__C__//因为（SSR寄存器）总共有（512bits），内容太多，所以不能通过（CMD线）来响应返回
     ..而是使用数据线来返回。



/*******************************************************************************
        => SD_CARD__模式__
*******************************************************************************/
__A__//卡无效_________________________________________________
        Inactive State                  //（无效状态）
__B__//卡识别模式______________________________________________
        Idle State                      //（空闲状态）
        Ready State                     //（准备状态）
        Identificaiton State            //（识别状态）
__C__//卡传输模式_______________________________________________
        Stand-by State                  //（待机状态）
        Transfer State                  //（传输状态）
        Sending-data State              //（发送数据状态）
        Receive-data State              //（接收数据状态）
        Programming State               //（保存数据状态）
        Disconnect State                //（断开数据状态）


