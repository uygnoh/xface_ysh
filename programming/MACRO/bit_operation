###########################################################
###  % 位运算
###########################################################
1 % 查看A的某一位是0还是1, 如果它等于零，则第n位是0
    A & (1 << n)
    
2 % 将A的第n位置位(1)
    A |= (1 << n)

3 % 将A的第n位清零(0)
    A &= ~(1 << n)

4 % 将A的第n位取反(^异或：相同为0，不同为1)
    A ^= (1 << n)



############################################################
###  % Bit_Mask位掩码
############################################################
#define bit0_mask 0b00000001
#define bit1_mask 0b00000010
#define bit2_mask 0b00000100
uint8_t uchar_var = 0x34;
/* % 判断第“0”位是不是等于“0” */
if ((uchar_var & bit0_mask0) == 0)
/* % 判断第“1”位是不是等于“1” */
if ((uchar_var & bit1_mask1) == 1)

define high4_mask 0b11110000
define low4_mask  0b00001111
uint8_t ucahr_var = 0x43;
/* extract low 4 bit */
uchar_var = uchar_var & low4_mask;
/* extraxt high 4 bit */
uchar_var = （uchar_var & high4) >> 4;



###########################################################
###  % 取模运算
###########################################################
% ###取模运算，对于整型数a，b来说，取模运算是： 
 1.求 整数商： c = a/b; 
 2.计算模：    a%b = a - c*b.
 
 

