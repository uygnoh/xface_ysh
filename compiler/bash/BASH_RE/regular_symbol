###########################################################
### % 常用符号
###########################################################
.               表示任意单个字符。
*               表示前面的字符连续出现任意次，包括0次。
.*              表示任意长度的任意字符，与通配符中的*的意思相同。
\               表示转义符，当与正则表达式中的符号结合时表示符号本身。
|               表示"或者"之意
[  ]            表示匹配指定范围内的任意单个字符。
[^  ]           表示匹配指定范围外的任意单个字符。

% 单个字符匹配相关
[[:alpha:]]     表示任意大小写字母。
[[:lower:]]     表示任意小写字母。
[[:upper:]]     表示任意大写字母。
[[:digit:]]     表示0到9之间的任意单个数字（包括0和9）。
[[:alnum:]]     表示任意数字或字母。
[[:space:]]     表示任意空白字符，包括"空格"、"tab键"等。
[[:punct:]]     表示任意标点符号。
[^[:alpha:]]    表示单个非字母字符。
[^[:lower:]]    表示单个非小写字母字符。
[^[:upper:]]    表示单个非大写字母字符。
[^[:digit:]]    表示单个非数字字符。
[^[:alnum:]]    表示单个非数字非字母字符。
[^[:space:]]    表示单个非空白字符。
[^[:punct:]]    表示单个非标点符号字符。
[0-9]           与[[:digit:]]等效。
[a-z]           与[[:lower:]]等效。
[A-Z]           与[[:upper:]]等效。
[a-zA-Z]        与[[:alpha:]]等效。
[a-zA-Z0-9]     与[[:alnum:]]等效。
[^0-9]          与[^[:digit:]]等效。
[^a-z]          与[^[:lower:]]等效。
[^A-Z]          与[^[:upper:]]等效
[^a-zA-Z]       与[^[:alpha:]]等效
[^a-zA-Z0-9]    与[^[:alnum:]]等效
 
% 次数匹配相关
?               表示匹配其前面的字符0或1次
+               表示匹配其前面的字符至少1次，或者连续多次，连续次数上不封顶。
{n}             表示前面的字符连续出现n次，将会被匹配到。
{x,y}           表示之前的字符至少连续出现x次，最多连续出现y次，都能被匹配到，换句话说，\
                只要之前的字符连续出现的次数在x与y之间，即可被匹配到。
{,n}            表示之前的字符连续出现至多n次，最少0次，都会陪匹配到。
{n,}            表示之前的字符连续出现至少n次，才会被匹配到。
 
% 位置边界匹配相关
^               ：表示锚定行首，此字符后面的任意内容必须出现在行首，才能匹配。
$               ：表示锚定行尾，此字符前面的任意内容必须出现在行尾，才能匹配。
^$              ：表示匹配空行，这里所描述的空行表示"回车"，而"空格"或"tab"等都不能算作此处所描述的空行。
^abc$           ：表示abc独占一行时，会被匹配到。
\<或者\b         ：匹配单词边界，表示锚定词首，其后面的字符必须作为单词首部出现。
\>或者\b         ：匹配单词边界，表示锚定词尾，其前面的字符必须作为单词尾部出现。
\B              ：匹配非单词边界，与\b正好相反。
 
% 分组与后向引用
( )             表示分组，我们可以将其中的内容当做一个整体，分组可以嵌套。
(ab)            表示将ab当做一个整体去处理。
\1              表示引用整个表达式中第1个分组中的正则匹配到的结果。
\2              表示引用整个表达式中第2个分组中的正则匹配到的结果。



###########################################################
###  RE 描述
###########################################################
% m表示match; s表示substitute; 不过m可以省略不写就变成了 / /;
m/ /command s/ / /command

% command,命令
p   ->print,打印内容
d   ->delete,通常跟在m命令后，符合的就删除
c   ->confirm,通常跟在s命令后，询问是否真的取代
g   ->global,通通换
i   ->ingnore,不管大小写


% 字符串处理（egrep）
(str1|str2|str3)	     		;匹配str1或str2或str3

% 表示找到的字符串
\1 \2 \3 ......         		;代表s///中用\(\)括起来的字符串，通常也是找到的字符串。
不过 & 只表示1 个，
用 \1 \2 \3 可以有很多个。
\1 第一个括号内的字符串
\2 第二个括号内的字符串

s/\(str1\) \(str2\)/\2 \1/   	;把两个字符串对调



###########################################################
###  RE
###########################################################
% Anchors
'^' ;Start of string  '^root' ;String starts with <root>
'$' ;End of string    'you$'  ;String ends with <you>


% Ranges
'[A-Za-z]'          # Any letter
'[a-z_]'            # Any lowercase letter or underscore
'[0-9]'             # Any digit
'[123]'             # Matches 1 or 2 or 3


% Boundaries                    
\s ;Whitespace          \ssystem ;Matches "file system"
\b ;Word boundary       \bsystem ;Matches "file system" an "file-system"
grep 'server\b' /etc/ntp.com.bak
grep '^server\b' /etc/ntp.com.bak
grep 'server\s' /etc/ntp.com.bak
grep '\bpop[0-9]\b' /etc/ntp.com.bak


% Quantifiers
u*   ;Matches u zero or more times
u+   ;Matches one or more occurences of u
u?   ;Matches u zero or once only(optional)
u{3} ;Matches exactly three occurrences: uuu


% Choosing the right tool
awk -F"," ' { print toupper($1), tolower($2), $3 } ' employees
sed ' s@\([^,]*\),\([^,]*\)@\U\1\L\2@ ' employees



###########################################################
###  RE 扩展
###########################################################
(?<groupname>express)   分组命名
(?:express)             匹配express，不捕获匹配的文本
                        也不给此分组分配组号

a.*b                    ;(aabab)->aabab ;贪婪，尽可能的多
a.*?b                   ;(aabab)->aab   ;懒惰，尽可能的少

*?                      ;重复任意次
+?                      ;重复一次或多次，但尽可能少重复
??                      ;重复零次或多次，但尽可能少重复
{n,m}?                  ;重复n次到m次， 但尽可能少重复
{n,}?                   ;重复n次以上，  但尽可能少重复



