/*******************************************************************************
                     gcc编译器(GNU Compiler Collection)
*******************************************************************************/	
1 //预处理-Pre-Processing
gcc  -E  test.c  -o  test.i                 
2 //编译-Compiling
gcc  -S  test.i  -o   test.s                
3 //汇编-Assembling
gcc  -c  test.s  -o  test.o                
4 //链接-Linking
gcc  test.o  -o  test                      



/*******************************************************************************
                                编译选项
*******************************************************************************/
-E                      //指示编译器仅对输入文件进行预处理
-S                      //告诉 GCC编译器 在为 C 代码产生了汇编语言文件后停止编译
-c                      //只编译并生成目标文件
-o                      //指定目标名称, 缺省的时候, gcc 编译出来的文件是 a.out



/*******************************************************************************
                                优化选项
*******************************************************************************/
-O                      //对程序进行优化编译、链接，采用这个选项
-O0, -O1, -O2, -O3      //编译器的优化选项的 4 个级别，
                          -O0 表示没有优化, -O1 为缺省值，-O3 优化级别最高



/*******************************************************************************
                                警告选项
*******************************************************************************/
-w                      //不生成任何警告信息
-Wall                   //生成所有警告信息
-Wextra                 //输出-Wall不包含的警告等
-Werror                 //将警告视为错误输出



/*******************************************************************************
                                    库选项
*******************************************************************************/
-shared                 //生成共享目标文件。通常用在建立共享库时。
-static                 //禁止使用共享连接。 
-Idir                   //将 dir目录加入搜索“头文件”的目录路径
-Ldir                   //将 dir目录加入搜索“库文件”的目录路径
-llib                   //链接lib库
-pipe	                //使用管道代替编译中临时文件, 在使用非 gnu 汇编工具的时候, 可能有些问题
-ansi                   //关闭 gnu c中与 ansi c 不兼容的特性, 激活 ansi c 的专有特性
                          (包括禁止一些 asm inline typeof 关键字, 以及 UNIX,vax 等预处理宏)
-nostdinc               //使编译器不再系统缺省的头文件目录里面找头文件, 
                          一般和 -I 联合使用,明确限定头文件的位置


 
/*******************************************************************************
                                   宏选项
*******************************************************************************/             
-imacros file           //将 file 文件的宏, 扩展到 gcc/g++ 的输入文件, 
                          宏定义本身并不出现在输入文件中
-Dmacro                 //相当于 C语言中的 #define macro　　
-Dmacro=defn            //相当于 C语言中的 #define macro=defn　　
-Umacro                 //相当于 C语言中的 #undef macro
-undef                  //取消对任何非标准宏的定义 
-DMACRO                 //以字符串"1"定义 MACRO宏
-DMACRO=DEFN            //以字符串"DEFN"定义 MACRO宏
-D name=definition      //加入宏定义，若不指定def，则默认为1



/*******************************************************************************
                                其它选项
*******************************************************************************/
-Wl,option              //通过该选项将参数 option 作为后续链接器 ld 使用的参数
-Wl,rpath=/path/to/lib  //为链接器指定一个非默认的运行时库的搜索路径，
                          运行采用了该选项编译的程序时，
                          链接器会在-rpath 指定的目录中搜索所需的 so 库文件，
                          以将其载入内存中
-g                      //生成调试信息。GNU 调试器可利用该信息
-pg                     //要启用gprof很简单，gcc编译的时候带上-pg参数即可
