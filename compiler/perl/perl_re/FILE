###########################################################
###  一次更新多个文件
###########################################################
% 1. <> 钻石操作符
% 2. $^I = "*.bak";有了这个特殊变量后， <>它会先把原来的文件改名"*.bak";
% 3. 然后用原来的文件名创建一个新的文件，它是空的文件
% 4. 然后在做循环的时候读的是备份中的一行 一行的内容，
% 5. 然后用正则表达式替换， 替换了以后，
% 6. 这时候的print;并不是显示在屏幕上， 而在把它输出到新创建的文件中。
% 7. 此时新创建的文件和原来的文件是同样的名字，看起来好像是文件被修改了。
my $date = localtime;
$^I = "*.bak";
while (<>) {
    s/^Author:.*/Author: Randal L. Schwrtz/;
    s/^phone:.*\n//;
    s/^Date:.*/Date: $date/;
    print;
}

% perl demo1.pl demo2.dat





###########################################################
###  正则表达式模式测试程序
###########################################################

    while (<>) {
        chomp;
        if (/RE/) {
            print "MATCH is: |$`<$&>$'|\n";
        } else {
            print "NO-MATCH Failed!\n";
        }
        
    }





###########################################################
###  正则表达式中的特殊变量 
###########################################################
% $_; 正则表达式中的特殊变量

$_ = "one two three, four five six";
if (/\s(\w+),/) {
    print "$1\n";       #(\w+)小括号匹配到的
    print "$&\n";       #(\w+),整个正则表达式匹配到的
    print "$'\n";       #
    print "$`\n";       #
    print "$`$&$'\n";   #
    print "$`<$&>$'\n"; #
}








