###########################################################
### perl variable type
###########################################################
+ 全局标量特殊变量
+ 全局数组特殊变量
+ 全局哈希特殊变量
+ 全局特殊文件句柄
+ 全局特殊常量
+ 正则表达式特殊变量
+ 文件句柄特殊变量



###########################################################
### $_($ARG) 该变量包含了默认输入和模式匹配内容
###########################################################
+ 在迭代循环中，当前循环的字符串会放在 $_ 中, 然后 通过 print 输出
+ 另外 print 在不指定输出变量，默认情况下使用的也是 $_
以下是几处即使没有写明 Perl 也会假定使用 $_ 的地方：
1. 各种单目函数，包括像 ord() 和 int() 这样的函数, 默认操作 STDIN
2. 各种列表函数，例如 print() 和 unlink()
3. 没有使用"=~" 运算符时的模式匹配操作 "m//"、"s///" 和"tr///"
4. 在没有给出其他变量时是 "foreach" 循环的默认迭代变量
5. grep() 和 map() 函数的隐含迭代变量



###########################################################
### 正则表达式特殊变量
###########################################################
+ $n                      ;包含上次模式匹配的第n个子串
+ $`($PREMATCH)           ;匹配成功的子串之前的内容      
+ $&($MATCH)              ;成功模式匹配的字符串       
+ $'($POSTMATCH)          ;匹配成功的子串之后的内容
+ $+($LAST_PAREN_MATCH)   ;与上个正则表达式搜索格式匹配的最后一个括号
+ `/Version: (.*)|Revision: (.*)/ && ($rev = $+);`



###########################################################
### 全局标量特殊变量   
###########################################################
+ $!($OS_ERROR or $ERRNO) ;这个变量的数字值是errno的值,字符串值是对应的系统错误字符串
+ $@($EVAL_ERROR)         ;命令eval的错误消息.如果为空,则表示上一次eval命令执行成功
+ $?($CHILD_ERROR)        ;返回上一个外部命令的状态
+ $0($PROGRAM_NAME)       ;包含正在执行的脚本的文件名
+ $^I($INPLACE_EDIT)      ;内置控制编辑器的值
+ $^T($BASETIME)          ;从新世纪开始算起,脚步本以秒计算的开始运行的时间
+ $ARGV                   ;从默认的文件句柄中读取时的当前文件名 
+ $_($ARG)                ;默认输入和模式匹配内容。

 
 
###########################################################
### 全局数组特殊变量
###########################################################
+ 
+ @ARGV                   ;传给脚本的命令行参数列表
+ @INC                    ;在导入模块时需要搜索的目录列表
+ @F                      ;命令行的数组输入
+ 
+ 
###########################################################
+ ### 全局哈希特殊变量
###########################################################
+ 
+ %INC                    ;散列表%INC包含所有用do或require语句包含的文件.
+                         ;关键字是文件名,值是这个文件的路径
+ %ENV                    ;包含当前环境变量
+ %SIG                    ;信号列表及其处理方式



###########################################################
### 全局特殊文件句柄
###########################################################
+ ARGV                    ;遍历数组变量@ARGV中的所有文件名的特殊文件句柄
+ STDERR                  ;标准错误输出句柄
+ STDIN                   ;标准输入句柄
+ STDOUT                  ;标准输出句柄
+ DATA                    ;特殊文件句柄引用了在文件中 __END__ 标志后的任何内容包含脚本内容。
+                         ;或者引用一个包含文件中__DATA__ 标志后的所有内容，
+                         ;只要你在同一个包有读取数据，__DATA__ 就存在。
+ _ (下划线)               ;特殊的文件句柄用于缓存文件信息(fstat、stat和lstat)



###########################################################
### 文件句柄特殊变量
###########################################################
+ $|($OUTPUT_AUTOFLUSH)   ;如果设置为零,在每次调用函数write或print后，
+                         ;自动调用函数fflush,将所写内容写回文件 
+ $%($FORMAT_PAGE_NUMBER) ;当前输出页号
+ $=($FORMAT_LINES_PER_PAGE) ;当前每页长度。默认为 60。
+ $-($FORMAT_LINES_LEFT)     ;当前页剩余的行数 
+ $~($FORMAT_NAME)        ;当前报表输出格式的名称。默认值是文件句柄名
+ $^($FORMAT_TOP_NAME)    ;当前报表输出表头格式的名称。默认值是带后缀"_TOP"的文件句柄名



###########################################################
### 全局特殊常量
###########################################################
+ __END__                 ;脚本的逻辑结束，忽略后面的文本。
+ __FILE__                ;当前文件名
+ __LINE__                ;当前行号
+ __PACKAGE__             ;当前包名，默认的包名是main。
+ 


