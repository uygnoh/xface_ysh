###########################################################
### VIMR_RE
###########################################################
% UNIX/LINUX下的很多工具之所以强大、灵活，关键是因为有了正则文法和元字符，
这也是VIM乃至UNIX/LINUX系统的精华所在。正因为使用灵活，
因此掌握起来比较吃力，如果不是真正理解，实际运用中会出现千奇百怪的错误。
因此，有必要对这部分知识多花些气力。下面结合具体实例讲解。

% 例五、有一文件，包含某外企的中国员工的资料，首先是姓名，然后是两个空格,其次是15位身份证号码。
zhang.fei  430759701022003
diao.chan  651302801225012
guan.yu  342869680413001
xi.shi  120638780214006
liu.bei  210324650708001
% 现在，有以下问题需要解决：
按照外国人的习惯，应该是名在前，姓在后。因此，文件中的姓名字段需要修改。
姓与名的首字母应该大写。
根据身份证号码，还可以判断出生年月日，将其作为一个新字段添加。
根据身份证号码，可以判断出性别。若为男性，添加male，若为女性，添加female 。
将男女员工分开，男员工在前，女员工在后。
将各字段数据左对齐
% 最终结果如下：
Fei.Zhang   430759701022003  1970/10/22  male  
Yu.Guan     342869680413001  1968/04/13  male  
Bei.Liu     210324650708001  1965/07/08  male  
-----------------------------------------------
Chan.Diao   651302801225012  1980/12/25  female
Shi.Xi      120638780214006  1978/02/14  female
% 为了完成上述功能，只需执行脚本employee.vim ，使用方法为 :so employee.vim 回车即可。
脚本内容如下：
:%s/  /          /
:%s/\(............\)\(  *\)/\1/
:%s/\([A-Za-z][A-Za-z]*\)\(\.\)\([A-Za-z][A-Za-z]*\)/\u\3\2\u\1/
:%s/$/  xxxxxx/
:%s/\([0-9]\{6}\)\([0-9]\{6}\)\([0-9]\{3}\)  \(xxxxxx\)/\1\2\3  \2/
:%s/\(..\)\(..\)\(..\)$/19\1\/\2\/\3
:%s/$/  xxxxxx/
:%s/\([0-9]\{14}[13579]\)\(.*\)\(xxxxxx\)/\1\2male  /
:%s/\([0-9]\{14}[02468]\)\(.*\)\(xxxxxx\)/\1\2female/
:$
:s/.*/&^M-----------------------------------------------
:g/female/.m$

% 在这个脚本中,使用了大量的正则表达式，这里仅对涉及到的正则表达式做一简要介绍。
有关正则表达式的内容相当多，本文不可能占用大量篇幅叙述，请大家谅解。
% 地址范围符号，代表文件中的所有行,作用等同于地址范围 1,$
. 与任意单字符(换行符除外)匹配，例如 y.s 可以匹配 yas y.s 或 y s 等等。
* 与前一字符的0次或多次出现匹配，例如 y*s 可以匹配 yys yyyyys 或 s 等等。
$ 与行尾匹配。
& 代表模式匹配中出现的字符串，例如 s/abc/&def 是把当前行的abc替换成abcdef 。
[] 匹配[]中出现的字符，例如[abc]匹配字符 a，b 或 c ，[a-zA-Z]匹配所有的英文字符。
\( \) \(和\)之间出现的内容可以由\num来替代。
\1\2\3 替代\(和\)之间出现的内容。
\u 将后续字符串的首字母大写。
\{num} 与前一字符的num次出现匹配。

% 现在，我们对脚本逐条讲解，希望能帮助大家理解正则文法。
:%s/  /          /
将文件中每行出现的2个空格替换为10个空格。
zhang.fei          430759701022003
diao.chan          651302801225012
guan.yu          342869680413001
xi.shi          120638780214006
liu.bei          210324650708001

:%s/\(............\)\( *\)/\1/
保留行首的12个字符，将其余的空格删除，这样，前两个字段就对齐了。	
zhang.fei   430759701022003
diao.chan   651302801225012
guan.yu     342869680413001
xi.shi      120638780214006
liu.bei     21032465070800

:%s/\([A-Za-z][A-Za-z]*\)\(\.\)\([A-Za-z][A-Za-z]*\)/\u\3\2\u\1/
将文件中每行出现的雇员姓名互换，并将首字母大写。	
Fei.Zhang   430759701022003
Chan.Diao   651302801225012
Yu.Guan     342869680413001
Shi.Xi      120638780214006
Bei.Liu     210324650708001


:%s/$/ xxxxxx/
在每一行的行尾添加2个空格和6个x	
Fei.Zhang   430759701022003  xxxxxx
Chan.Diao   651302801225012  xxxxxx
Yu.Guan     342869680413001  xxxxxx
Shi.Xi      120638780214006  xxxxxx
Bei.Liu     210324650708001  xxxxxx

:%s/\([0-9]\{6}\)\([0-9]\{6}\)\([0-9]\{3}\) \(xxxxxx\)/\1\2\3 \2/
将xxxxxx替换成出生年月日。	
Fei.Zhang   430759701022003  701022
Chan.Diao   651302801225012  801225
Yu.Guan     342869680413001  680413
Shi.Xi      120638780214006  780214
Bei.Liu     210324650708001  650708


:%s/\(..\)\(..\)\(..\)$/19\1\/\2\/\3
将年月日用/字符分隔，并在年前添加19。	
Fei.Zhang   430759701022003  1970/10/22
Chan.Diao   651302801225012  1980/12/25
Yu.Guan     342869680413001  1968/04/13
Shi.Xi      120638780214006  1978/02/14
Bei.Liu     210324650708001  1965/07/08


:%s/$/ xxxxxx/
在每一行的行尾添加2个空格和6个x	
Fei.Zhang   430759701022003  1970/10/22  xxxxxx
Chan.Diao   651302801225012  1980/12/25  xxxxxx
Yu.Guan     342869680413001  1968/04/13  xxxxxx
Shi.Xi      120638780214006  1978/02/14  xxxxxx
Bei.Liu     210324650708001  1965/07/08  xxxxxx


:%s/\([0-9]\{14}[13579]\)\(.*\)\(xxxxxx\)/\1\2male /
身份证号码末位是奇数的，将xxxxxx替换成male	
Fei.Zhang   430759701022003  1970/10/22  male  
Chan.Diao   651302801225012  1980/12/25  xxxxxx
Yu.Guan     342869680413001  1968/04/13  male  
Shi.Xi      120638780214006  1978/02/14  xxxxxx
Bei.Liu     210324650708001  1965/07/08  male

:%s/\([0-9]\{14}[02468]\)\(.*\)\(xxxxxx\)/\1\2female/
身份证号码末位是偶数的，将xxxxxx替换成female	
Fei.Zhang   430759701022003  1970/10/22  male  
Chan.Diao   651302801225012  1980/12/25  female
Yu.Guan     342869680413001  1968/04/13  male  
Shi.Xi      120638780214006  1978/02/14  female
Bei.Liu     210324650708001  1965/07/08  male


:$ 到文件的最后一行
⑾:s/.*/&^M-----------------------------------------------
在文件的最末行插入一行 "-" 字符。	
Fei.Zhang   430759701022003  1970/10/22  male  
Chan.Diao   651302801225012  1980/12/25  female
Yu.Guan     342869680413001  1968/04/13  male  
Shi.Xi      120638780214006  1978/02/14  female
Bei.Liu     210324650708001  1965/07/08  male  
-----------------------------------------------

⑿:g/female/.m$
将所有的女员工记录移至文件尾。	
Fei.Zhang   430759701022003  1970/10/22  male  
Yu.Guan     342869680413001  1968/04/13  male  
Bei.Liu     210324650708001  1965/07/08  male  
-----------------------------------------------
Chan.Diao   651302801225012  1980/12/25  female
Shi.Xi      120638780214006  1978/02/14  female



% 例六、下列数据 1234567890ABCDEF ，将其变成 13579ACE 24680BDF 的形式，
这样，数据就可以很方便的粘贴到TSO环境中了。
下面给出宏命令脚本change_d.vim
"----------------------------------------------------
"Macro Function :  Convert Char Arrange Direction
"
"        Sample :  40 50 60 ==> 4 5 6
"                               0 0 0
"          Date :  2001/12/01
"        Author :  Yan Shi
"----------------------------------------------------
:s/.*/&^M/
:1
:map = malx+$p-`al=


⑴ :s/.*/&^M/             在数据行下方添加一空行。
⑵ :1                     回到文件的首行的首字符。
⑶ :map = malx+$p-`al=    将一大串VIM命令映像给字符=
① ma  将首字符标记为a
② l   光标右移一个字符
③ x   删除光标处字符
④ +   移至下一行
⑤ $   到行尾
⑥ p   将删除的字符粘贴
⑦ -   回至上一行
⑧ `a  返回到标记字符处
⑨ l   光标右移一个字符
⑩ =   递归调用,重复以上步骤，直到将该行所有的数据处理完。

