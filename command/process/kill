###########################################################
### % kill killall pkill pgrep
###########################################################
sleep 6000 &					;开启一个延时6000秒的进程并放入后台运行
kill -1 9160					;发送重启信号
kill 9160                       ;发送停止信号
pkill -u alice					;把用户名为“alice”的踢出系统
killall vim                     //给所有vim进程发送信号
pkill -t pts/1					;它只是给这个终端上的所有进程发了个 15 信号。
pkill -9 -t pts/1				;终止上pts/1的所有进程，并结束该pts/1

ps aux |grep vsftpd
ps aux |grep sshd
pgrep -u root named


% 如果不知道哪些终端登陆了本机，可以使用w命令



###########################################################
###  kill 命令参数
###########################################################
-l  信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称
-a  当处理当前进程时，不限制命令名和进程号的对应关系
-p  指定kill 命令只打印相关进程的进程号，而不发送任何信号
-s  指定发送信号
-u  指定用户
 
% 只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。 



###########################################################
###  kill 常用的信号
###########################################################
% kill -l
SIGHUP          1               重新加载(RELOAD)平滑的重启
SIGINT          2               键盘中断(Ctrl + C)
SIGQUIT         3               键盘退出(Ctrl + \)
SIGKILL         9               强制终止
SIGTERM         15              终止(), 
SIGCONT         18              继续（与STOP相反, fg/bg命令）
SIGSTOP         19              暂停（同 Ctrl + Z）
___________________________________________________________
RELOAD							重新加载
REBOOT							重新启动



###########################################################
###   前台后台控制
###########################################################
 &, nohup, bg, fg, kill %3, jobs
___________________________________________________________ 
nohup---将程序以忽略挂起信号的方式运行起来(不挂断地运行命令)
% nohup gedit a.c

___________________________________________________________
&
bg 将进程搬到后台运行（Background）；
fg 将进程搬到前台运行（Foreground）； 


___________________________________________________________
job-number 指出进程组号，以和 wait、fg、bg 和 kill 命令一起使用。
当和这些命令一起使用时，在作业号前面加上一个“%”（百分号标志）。


