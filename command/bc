/*******************************************************************************
        => BC 命令是一种支持任意精度的交互执行的计算器语言
*******************************************************************************/
// 语法:  bc (选项) (参数)
//_____________________________________________________________                 
Option(选项)
        -i      //强制进入交互式模式；
        -l      //定义使用的标准数学库；
        -w      //对POSIX bc的扩展给出警告信息；
        -q      //不打印正常的GNU bc环境信息；
        -v      //显示指令版本信息；
        -h      //显示指令的帮助信息。
// 注意: (数值是10进制可不设置 obase ibase 的值)
// 注意: 大于 9 的十六进制数必须是大写的（A-F）
// obase要放置在ibase前面！
// 格式: echo " obase=16; ibase=2; 1111; " | bc 


// 常用运算
//_____________________________________________________________                 
        +       加法
        -       减法
        *       乘法
        /       除法
        ^       指数
        %       余数


//https://linux.cn/article-7653-1.html



/*******************************************************************************
        => BC 实例
*******************************************************************************/
scale=4;        //小数点的精度设置为4位
echo "scale=4; 10/3" | bc
echo "10^10" | bc
echo "sqrt(100)" | bc


//把二进制的“1111”转换为16进制
//_____________________________________________________________
echo "obase=16; ibase=2; 1111;" | bc

    
//使用bc工具，sclae控制小数点后保留几位
//_____________________________________________________________
ysh@debian:~$ echo "scale=2; (2.777 - 1.4744)/1" | bc
1.30


//10进制 => 转换成2进制
//_____________________________________________________________
#!/bin/bash
abc=192
echo "obase=2;$abc" | bc


//2进制转换 => 转换成10进制
//_____________________________________________________________
#!/bin/bash
abc=11000000
echo "obase=10;ibase=2;$abc" | bc

