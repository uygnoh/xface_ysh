###########################################################
### ＳｅｔＵＩＤ
###########################################################
ＳｅｔＵＩＤ的功能：
1 只有可以执行的二进制程序才能设定SUID权限。
2 命令执行者要对该程序拥有X（执行）权限。
3 命令执行者在执行该程序时获得该程序文件属主身份
 （在执行程序的过程中灵魂附体为文件属主）
4 SetUID权限只有在程序执行过程中有效，
  也就是说身份改变只是在程序执行过程中有效。

passwd命令拥有SetUID权限，所以普通用户可以修改自己的密码。
ls -l /usr/bin/passwd
___________________________________________________________
% 设定SUID权限
“4”这个数字代表SUID
chmod 4755 文件名
chmod u+s 文件名

% 取消SUID的方法
chmod 755 文件名
chmod u-s 文件名 

% 危险的SUID权限
1 关键目录应严格控制写权限。比如：“/“，”/usr“。。。
2 用户的密码设置要严格遵守密码三原则
3 对系统中默认应该具有SetUID权限的文件作一列表，
  定时检查有没有这之外的文件被设置了SetUID权限。
  
  

###########################################################
### ＳｅｔＧＩＤ
###########################################################
ＳｅｔＧＩＤ针对文件的作用
1 只有可执行的二进制程序才能设置SGID权限。
2 命令执行者要对该程序拥有X（执行）权限。
3 命令在执行程序的时候，组身份升级为该程序文件属组
4 SetGID同样只在程序执行过程中有效，也就是说组身份改变只在程序执行过程中有效。

% ls －l ／usr／bin／locate
1 ／usr／bin／locate是可执行二进制程序，可以赋予SGID权限的。
2 执行用户lamp对／usr／bin／locate命令拥有执行权限
3 执行／usr／bin／locate命令时，组身份会升级为slocate组，
而slocate组对／var／lib／mlocate／mlocate.db数据库拥有"r"权限，
所以普通用户可以使用locate命令查询mlocate.db数据库。
4 命令结束，lamp用户的组身份返回lamp组。

% ＳｅｔＧＩＤ针对目录的作用
1 普通用户必须对此目录拥有“r”和“x”权限，才能进入此目录。
2 普通用户在此目录中的有效组会变成此目录的属组。
3 若普通用户对此目录拥有“w”权限时，
  新建的文件的默认属组是这个目录的属组。



###########################################################
### ＳｔｉｃｋｙＢＩＴ (SBIT粘着位作用)
###########################################################
1 粘着位目前只针对目录有效
2 普通用户对该目录拥有“w”和“x”权限，即普通用户可以在此目录拥有写入权限
3 如果没有粘着位，因为普通用户拥有“w”权限，所以可以删除此目录下所有文件，
  包括其他用户建立的文件。一旦赋予了粘着位，除了root可以删除所有的文件，
  普通用户就算佣有了“w”权限，也只能删除自己建立的文件，但是不能删除其它
  用户建立的文件。
 
% 添加粘着位  
chmod 1755 目录名
chmod o+t 目录名
% 删除粘着位 
chmod 755 目录名
chmod o-t 目录名

SetUID，   4     Ｕ
SetGID，   2     Ｇ
StickyBIT，1     Ｏ



