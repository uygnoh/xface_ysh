###########################################################
###  ＢＣ
###########################################################
bc命令是一种支持任意精度的交互执行的计算器语言。
bash内置了对整数四则运算的支持，但是并不支持浮点运算，
而bc命令可以很方便的进行浮点运算，当然整数运算也不再话下。
% 语法: bc(选项)(参数)
选项
-i：强制进入交互式模式；
-l：定义使用的标准数学库；
-w：对POSIX bc的扩展给出警告信息；
-q：不打印正常的GNU bc环境信息；
-v：显示指令版本信息；
-h：显示指令的帮助信息。
% 注意：(为数值是10进制可不设置ibase obase的值)，obase要放在ibase前，
% 因为ibase设置后，后面的数字都是以ibase的进制来换算的
% 操作基本都是围绕数字，默认的输出输入进制都是十进制。
% 数字有2个属性 长度(length)和小数点后精度(scale), 
% length值数字有效数字的长度，scale是值小数点后的长度     
                                                      
  

###########################################################
###  ＢＣ例子
###########################################################
% scale=4; 小数点的精度设置为4位
% 计算10/3，小数点的精度设置为4位
echo "scale=4; 10/3" | bc

% 把进制的“1111”转换为16进制
echo "obase=16; ibase=2; 1111;" | bc

    
% 使用bc工具，sclae控制小数点后保留几位
ysh@debian:~$ echo "scale=2; (2.777 - 1.4744)/1" | bc
1.30


% 进制转换 10->2
#!/bin/bash
abc=192
echo "obase=2;$abc" | bc

% 进制转换 2->10
#!/bin/bash
abc=11000000
echo "obase=10;ibase=2;$abc" | bc



% 计算平方和平方根：
echo "10^10" | bc
echo "sqrt(100)" | bc

  
