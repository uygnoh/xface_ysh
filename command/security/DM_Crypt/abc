###########################################################
###  cryptsetup 
###########################################################
% LUKS （Linux Unified Key Setup）是 Linux 硬盘加密的标准。 
% 通过提供标准的磁盘格式，它不仅可以促进发行版之间的兼容性，
% 还可以提供对多个用户密码的安全管理。 
% 与现有解决方案相比，LUKS 将所有必要的设置信息存储在分区信息首部中，
% 使用户能够无缝传输或迁移其数据。
% 磁盘加密分区制作(1, 2, 3, 4, 5, 6, 7,)

% 磁盘加密分区打开    
root@debian:/mnt# 
cryptsetup luksOpen -d /home/ysh/Documents/FREEYSH/command/security/DM_Crypt/enc.key  /dev/sda2 mydisk
ls /dev/mapper/
mount /dev/mapper/mydisk /mnt

% 磁盘加密分区关闭　　
root@debian:~# umount /mnt
root@debian:~# cryptsetup luksClose mydisk
　　
　　
　　
###########################################################
### % 安装加密软件 1
###########################################################
% 通常的发行版已经预装了该软件包，可以直接使用，下面是 Debian 的安装方法
# apt-get install cryptsetup



###########################################################
### % 创建加密分区 2
###########################################################
% 注意，该操作会清空你选择分区或设备上的所有数据，请谨慎操作，输入大写的 YES 确认
# cryptsetup -s 512 luksFormat /dev/sda2

WARNING!
========
This will overwrite data on /dev/sdd irrevocably.

Are you sure? (Type uppercase yes): YES
Enter passphrase: 
Verify passphrase:



###########################################################
### % 利用key-file加密分区 3
###########################################################   
% 除了密码之外，还可以选择使用 key file 解密你的硬盘，也就是相当于一个密钥，
% 当然可以也可以只使用 key file 或者同时使用密码与 key file
% 注意：千万不要将所有密码移除，至少需要留有一个密码访问设备，移除操作不可撤销

% 生成一个加密的文件
# dd if=/dev/urandom of=/root/enc.key bs=1 count=4096

% 添加 key-file 作为密码之一
# cryptsetup luksAddKey  /dev/sdd /root/enc.key
Enter any existing passphrase:

% 移除普通密码
# cryptsetup luksRemoveKey /dev/sdd
Enter LUKS passphrase to be deleted: ...

% 移除 key file 密码
# cryptsetup luksRemoveKey -d /root/enc.key /dev/sdd



###########################################################
### % % 映射分区解密密码 4
###########################################################
% 1 解密普通密码
# cryptsetup luksOpen /dev/sdd myusb
Enter passphrase for /dev/sdd:

% 2 key-file 解密
# cryptsetup luksOpen -d /root/enc.key /dev/sdd myusb



###########################################################
### % 创建文件系统 5
###########################################################
% 在挂载使用之前，我们仍然需要对设备创建文件系统才可以使用，可以选择任何你喜欢的文件系统，
% 例如 btrfs，ext4，vfat，ntfs, xfs,等
# mkfs.ext4 /dev/mapper/myusb
mke2fs 1.43.6 (29-Aug-2017)
Creating filesystem with 488448 4k blocks and 122160 inodes
Filesystem UUID: 995e172a-2bc6-432c-a60f-2d4d7093e748
Superblock backups stored on blocks:
	32768, 98304, 163840, 229376, 294912

Allocating group tables: done
Writing inode tables: done
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done



###########################################################
### % 挂载加密分区设备 6
###########################################################
% 现在可以像正常分区一样挂载我们的加密分区设备了
# mount /dev/mapper/myusb /mnt/
# df -h
/dev/mapper/myusb  1.9G  5.7M  1.7G   1% /mnt



###########################################################
### % 卸载挂载点并关闭加密分区 7
###########################################################
% 当你已经打开某个加密盘之后，可以用如下命令关闭该加密盘。
% ~#    cryptsetup close 映射名
# umount /mnt
# cryptsetup luksClose myusb


% 当你已经打开某个加密盘之后，可以用如下命令查看该加密盘的状态。
~#    cryptsetup status 映射名



